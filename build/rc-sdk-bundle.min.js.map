{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk-bundle.js","webpack/bootstrap 25b1cbe2aa878c280d0d","src/lib/RCSDK.ts","src/lib/helpers/Country.ts","src/lib/core/Helper.ts","src/lib/core/Utils.ts","src/lib/core/pubnub/PubnubMock.ts","src/lib/core/Observable.ts","src/lib/core/Log.ts","src/lib/core/xhr/XhrMock.ts","src/lib/core/xhr/XhrResponse.ts","src/lib/core/AjaxObserver.ts","src/lib/core/Cache.ts","src/lib/core/Context.ts","src/lib/core/List.ts","src/lib/core/PageVisibility.ts","src/lib/core/Platform.ts","src/lib/core/http/Request.ts","src/lib/core/http/Headers.ts","src/lib/core/http/Response.ts","src/lib/core/Subscription.ts","src/lib/core/Validator.ts","src/lib/helpers/Account.ts","src/lib/helpers/BlockedNumber.ts","src/lib/helpers/Call.ts","src/lib/helpers/Presence.ts","src/lib/helpers/Extension.ts","src/lib/helpers/Contact.ts","src/lib/helpers/ContactGroup.ts","src/lib/helpers/Conferencing.ts","src/lib/helpers/Device.ts","src/lib/helpers/DeviceModel.ts","src/lib/helpers/ForwardingNumber.ts","src/lib/helpers/Language.ts","src/lib/helpers/Location.ts","src/lib/helpers/State.ts","src/lib/helpers/Message.ts","src/lib/helpers/PhoneNumber.ts","src/lib/helpers/Ringout.ts","src/lib/helpers/Service.ts","src/lib/helpers/ShippingMethod.ts","src/lib/helpers/Timezone.ts","src/lib/client/clients/Account.ts","src/lib/client/Client.ts","src/lib/client/models/GetAccountInfoResponse.ts","src/lib/client/Model.ts","src/lib/client/models/GetExtensionInfoResponse.ts","src/lib/client/models/ContactInfo.ts","src/lib/client/models/ContactAddressInfo.ts","src/lib/client/models/DepartmentInfo.ts","src/lib/client/models/ExtensionPermissions.ts","src/lib/client/models/PermissionInfo.ts","src/lib/client/models/RegionalSettingsInfo.ts","src/lib/client/models/LanguageInfo.ts","src/lib/client/models/CountryInfo.ts","src/lib/client/models/TimezoneInfo.ts","src/lib/client/models/GreetingLanguageInfo.ts","src/lib/client/models/FormattingLocaleInfo.ts","src/lib/client/models/ExtensionServiceFeatureInfo.ts","src/lib/client/models/ExtensionStatusInfo.ts","src/lib/client/models/ServiceInfoResponse.ts","src/lib/client/models/BillingPlanInfo.ts","src/lib/client/models/BrandInfo.ts","src/lib/client/models/ServicePlanInfo.ts","src/lib/client/models/TargetServicePlanInfo.ts","src/lib/client/models/AccountStatusInfo.ts","src/lib/client/clients/CallLog.ts","src/lib/client/models/ExtensionCallLogResponse.ts","src/lib/client/models/CallLogRecord.ts","src/lib/client/models/CallLogCallerInfo.ts","src/lib/client/models/RecordingInfo.ts","src/lib/client/models/CallLogRecordLegInfo.ts","src/lib/client/models/PagingInfo.ts","src/lib/client/models/NavigationInfo.ts","src/lib/client/models/NavigationInfoPage.ts","src/lib/client/models/AccountActiveCallsResponse.ts","src/lib/client/models/ExtensionActiveCallsResponse.ts","src/lib/client/models/GetExtensionCallLogRecordResponse.ts","src/lib/client/models/GetCallRecordingResponse.ts","bower_components/es6-promise-polyfill/promise.js","~/node-libs-browser/~/timers-browserify/main.js","~/node-libs-browser/~/process/browser.js","bower_components/pubnub/web/pubnub.js","(webpack)/buildin/module.js","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_82__","__WEBPACK_EXTERNAL_MODULE_83__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","accountClient","callLogClient","promise","pubnub","RCSDK","options","_context","$get","injections","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","getAccount","getCallLog","version","url","sandbox","production","localStorage","Promise","PUBNUB","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","e4","Error","createSingleton","Country","__extends","d","b","__","constructor","hasOwnProperty","_super","apply","arguments","createUrl","Helper","defaultProperty","getId","object","isNew","getUri","resetAsNew","uri","parseMultipartResponse","ajax","isMultipart","data","filter","result","error","map","loadRequest","extend","method","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","bind","reduce","item","push","merge","target","supplement","mergeItems","_this","supplementIndex","updatedIDs","newItem","forEach","indexOf","Utils","hasOwn","Object","toString","rdigit","class2type","split","name","toLowerCase","targetObject","sourceObject","args","_i","length","src","copy","copyIsArray","clone","i","deep","isFunction","isPlainObject","isArray","undefined","cb","res","queryStringify","parameters","v","vv","encodeURIComponent","join","parseQueryString","queryString","argsParsed","self","arg","decodeURIComponent","trim","pair","key","value","isEmail","multiple","test","isPhoneNumber","argumentsToArray","Array","slice","isDate","obj","type","isWindow","isNaN","String","nodeType","getProperty","property","part","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","parseString","s","parseNumber","n","parseFloat","PubnubFactory","PubnubMock","crypto_obj","getPubnubReal","ready","subscribe","on","channel","message","unsubscribe","off","receiveMessage","msg","emit","Observable","init","defineProperty","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","events","callback","isOneTimeEventFired","debug","getOneTimeEventArgumens","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","offAll","destroy","emitAndCallback","concat","Log","console","warn","info","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","unshift","Date","toLocaleString","XhrMock","responses","async","requestHeaders","withCredentials","readyState","responseHeaders","status","getResponseHeader","header","setRequestHeader","getAllResponseHeaders","open","send","contentType","getRequestHeader","JSON","parse","currentResponse","find","onerror","setStatus","setResponseHeader","response","getPromise","onLoad","stringify","responseText","onload","then","abort","XhrResponse","add","clear","path","AjaxObserver","beforeRequest","requestSuccess","requestError","Cache","storage","getLocalStorage","prefix","prefixKey","setItem","removeItem","getItem","clean","Context","singletons","stubPubnub","stubAjax","usePubnubStub","flag","useAjaxStub","getPubnub","getXHR","List","numberComparator","stringComparator","propertyExtractor","a","localeCompare","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","opt","filterBy","filterFn","pass","PageVisibility","change","hidden","onchange","evt","window","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","getCredentials","credentials","atob","secret","remember","getAuthURL","apiUrl","response_type","redirect_uri","redirectUri","client_id","state","brand_id","brandId","display","prompt","addServer","parseAuthRedirectUrl","qs","reverse","error_description","authorize","access_token_ttl","refresh_token_ttl","username","grant_type","password","extension","code","reject","authCall","setCache","isPaused","now","parseInt","pause","resume","refresh","resolve","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","setOptions","setHeader","isUnauthorized","put","builtUrl","hasHttp","replace","addMethod","addToken","Request","r","xhr","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","toUpperCase","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","getHeader","isContentType","getContentType","setContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","shift","json","parts","headerSeparator","checkStatus","getError","boundary","match","boundarySeparator","pop","statusInfo","stack","description","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","register","isSubscribed","renew","addEvents","setEvents","getFullEventFilters","updateSubscription","subscribeAtPubnub","remove","timeToExpiration","renewHandicapMs","decrypt","encryptionKey","encryptKey","keyEncoding","keyLength","mode","notify","ssl","subscribe_key","env","connect","Validator","validate","validators","errors","isValid","field","email","phone","required","max","min","Account","BlockedNumber","extensionId","phoneNumber","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","toLocaleLowerCase","extensionNumber","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","string","inAddresses","transformFn","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","ContactGroup","groupName","Conferencing","Device","deviceModel","order","emergencyServiceAddress","street","city","country","zip","customerName","model","DeviceModel","device","sku","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","State","countryId","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","tollFreeAreaCodes","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","Timezone","client","getaccountinforesponse","accountPost","apiOptions","ResponseClass","GetAccountInfoResponse","parseOptions","in","default","Client","operationParameters","param","Class","getextensioninforesponse","serviceinforesponse","accountstatusinfo","_propertyMappings","isRequired","GetExtensionInfoResponse","ServiceInfoResponse","GetAccountInfoResponseSetupWizardState","GetAccountInfoResponseStatus","AccountStatusInfo","Model","mapping","prop","propData","contactinfo","departmentinfo","extensionpermissions","regionalsettingsinfo","extensionservicefeatureinfo","extensionstatusinfo","ContactInfo","DepartmentInfo","ExtensionPermissions","RegionalSettingsInfo","ExtensionServiceFeatureInfo","GetExtensionInfoResponseSetupWizardState","GetExtensionInfoResponseStatus","ExtensionStatusInfo","GetExtensionInfoResponseType","contactaddressinfo","ContactAddressInfo","permissioninfo","PermissionInfo","countryinfo","timezoneinfo","languageinfo","greetinglanguageinfo","formattinglocaleinfo","CountryInfo","TimezoneInfo","LanguageInfo","GreetingLanguageInfo","FormattingLocaleInfo","ExtensionStatusInfoReason","billingplaninfo","brandinfo","serviceplaninfo","targetserviceplaninfo","BillingPlanInfo","BrandInfo","ServicePlanInfo","TargetServicePlanInfo","BillingPlanInfoDurationUnit","BillingPlanInfoType","CallLog","accountactivecallsresponse","extensionactivecallsresponse","extensioncalllogresponse","getextensioncalllogrecordresponse","getcallrecordingresponse","accountActiveCalls","AccountActiveCallsResponse","items","collectionFormat","allowEmptyValue","enum","accountExtensionActiveCalls","ExtensionActiveCallsResponse","accountExtensionCallLogs","ExtensionCallLogResponse","accountExtensionCallLog","GetExtensionCallLogRecordResponse","accountRecording","GetCallRecordingResponse","IAccountActiveCallsDirection","IAccountActiveCallsType","IAccountExtensionActiveCallsDirection","IAccountExtensionActiveCallsType","IAccountExtensionCallLogsDirection","IAccountExtensionCallLogsType","IAccountExtensionCallLogsView","IAccountExtensionCallLogsWithRecording","calllogrecord","paginginfo","navigationinfo","CallLogRecord","PagingInfo","NavigationInfo","calllogcallerinfo","recordinginfo","calllogrecordleginfo","CallLogCallerInfo","CallLogRecordType","CallLogRecordDirection","CallLogRecordAction","CallLogRecordResult","CallLogRecordTransport","RecordingInfo","CallLogRecordBilling","CallLogRecordLegInfo","RecordingInfoType","CallLogRecordLegInfoType","CallLogRecordLegInfoDirection","CallLogRecordLegInfoAction","CallLogRecordLegInfoResult","CallLogRecordLegInfoTransport","CallLogRecordLegInfoBilling","navigationinfopage","NavigationInfoPage","GetExtensionCallLogRecordResponseType","GetExtensionCallLogRecordResponseDirection","GetExtensionCallLogRecordResponseAction","GetExtensionCallLogRecordResponseResult","setImmediate","global","asyncFlush","asyncQueue","asyncTimer","asyncCall","asyncSetTimer","invokeResolver","resolver","resolvePromise","rejectPromise","reason","invokeCallback","subscriber","owner","settled","state_","data_","FULFILLED","handleThenable","REJECTED","resolved","TypeError","val","fulfill","PENDING","SEALED","publishFulfillment","publishRejection","publish","then_","NativePromise","nativePromiseSupported","NOOP","onFulfillment","onRejection","fulfilled","rejected","catch","all","promises","remaining","results","race","Function","clearImmediate","Timeout","clearFn","_id","_clearFn","nextTick","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","len","run","Item","fun","noop","process","title","browser","argv","versions","addListener","once","removeListener","removeAllListeners","binding","cwd","chdir","dir","umask","unique","NOW","rnow","build_url","url_components","url_params","URLBIT","params","each","value_str","encode","PARAMSBIT","updater","rate","last","runnit","grep","fin","l","supplant","str","values","REPL","_","wait","generate_uuid","u","random","o","k","pam_encode","charCodeAt","generate_channel_list","channels","nopresence","subscribed","sort","generate_channel_group_list","channel_groups","channel_group","READY","READY_BUFFER","SECOND","PNmessage","apns","keys","aps","alert","badge","exclude1","exclude","getPubnubMessage","PN_API","setup","_get_url_params","_object_to_key_list","_object_to_key_list_sorted","_get_pam_sign_input_from_params","si","validate_presence_heartbeat","heartbeat","cur_heartbeat","err","PRESENCE_HB_THRESHOLD","PRESENCE_HB_DEFAULT","encrypt","input","CIPHER_KEY","_presence_heartbeat","PRESENCE_HB_TIMEOUT","PRESENCE_HB_INTERVAL","CHANNELS","CHANNEL_GROUPS","PRESENCE_HB_RUNNING","SELF","start_presence_heartbeat","NO_WAIT_FOR_PENDING","PUB_QUEUE","sending","xdr","each_channel_group","count","chang","each_channel","chan","_invoke_callback","callback_data","_invoke_error","CR","url1","jsonp","jsonp_cb","AUTH_KEY","STD_ORIGIN","SUBSCRIBE_KEY","success","fail","_poll_online","_is_online","_reset_offline","_poll_timer","_poll_online2","TIME_CHECK","detect_time_detla","_poll_timer2","KEEPALIVE","SUB_RECEIVER","detect_latency","tt","adjusted_time","TIME_DRIFT","time","calculate","ptime","latency","stime","SUB_WINDOWING","DEF_WINDOWING","SUB_TIMEOUT","DEF_SUB_TIMEOUT","DEF_KEEPALIVE","NOLEAVE","PUBLISH_KEY","SECRET_KEY","hmac_SHA256","SSL","ORIGIN","nextorigin","SUB_ORIGIN","CONNECT","CLOAK","SUB_CALLBACK","SUB_CHANNEL","SUB_RESTORE","TIMETOKEN","RESUMED","STATE","PRESENCE_HB","COMPATIBLE_35","db","set","UUID","USE_INSTANCEID","INSTANCEID","LEAVE","blocking","auth_key","uuid","auth","origin","PRESENCE_SUFFIX","LEAVE_GROUP","set_resumed","resumed","get_cipher_key","set_cipher_key","raw_encrypt","raw_decrypt","get_heartbeat","set_heartbeat","heartbeat_interval","get_heartbeat_interval","set_heartbeat_interval","get_version","SDK_VER","getGcmMessageObject","getApnsMessageObject","x","newPnMessage","gcm","_add_param","namespace","ns_ch","cloak","ns_ch_a","channel_group_list_groups","channel_group_list_channels","channel_group_remove_channel","channel_group_remove_group","channel_group_add_channel","channel_group_cloak","channel_group_list_namespaces","channel_group_remove_namespace","history","cipher_key","start","end","include_token","payload","decrypted_messages","new_message","replay","source","destination","stop","limit","store","add_msg","ch","CB_CALLED","chg","_test_connection","disconnected","reconnect","disconnect","_connect","st","sub_timeout","SUB_ERROR","idlecb","connected","windowing","backfill","next_callback","channels2","list2","channel2","chobj","decrypted_msg","noheresync","timetoken","restore","settings","here","uid","timestamp","occupancy","here_now","uuids","where_now","grant","ttl","w","sign_input","signature","mobile_gw_provision","op","gw_type","device_id","audit","revoke","set_uuid","get_uuid","get_subscibed_channels","presence_heartbeat","stop_timers","each-channel","offline","SHA256","CryptoJS","parse_options","defaultOptions","allowedKeyEncodings","allowedKeyLengths","allowedModes","decode_key","get_padded_key","get_mode","get_iv","iv","hex_message","encryptedHexArray","base_64_encrypted","binary_enc","json_plain","ciphertext","plaintext","toJSON","valueOf","quote","escapable","lastIndex","meta","holder","partial","mind","gap","rep","isFinite","indent","cx","\b","\t","\n","\f","\r","\"","\\","replacer","space","eval","DEF_TIMEOUT","ori","failover","get_hmac_SHA256","hash","$","getElementById","elements","el","getElementsByTagName","node","etype","rapfun","cancelBubble","preventDefault","stopPropagation","attachEvent","head","attr","attribute","setAttribute","getAttribute","css","element","styles","style","create","createElement","XORIGN","FDomainRequest","script","finished","xhrtme","timer","done","append","appendChild","failed","parentNode","removeChild","ASYNC","complete","XDomainRequest","onabort","onloadend","onreadystatechange","eee","navigator","pubnubs","fdomainrequest","SWF","UA","userAgent","PNSDK","opera","postError","ls","cookieGet","cookie","cookieSet","cookieTest","unbind","fire","PDIV","CREATE_PUBNUB","leave_on_unload","pnsdk","PN","pdiv","notest","publish_key","location","href","position","top","unescape","WS","protocols","bits","protocol","wasClean","g","lib","q","Base","mixIn","$super","WordArray","words","sigBytes","clamp","ceil","enc","Hex","substr","Latin1","fromCharCode","j","Utf8","escape","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","blockSize","_minBufferSize","_doProcessBlock","splice","Hasher","cfg","_doReset","update","finalize","_doFinalize","_createHelper","_createHmacHelper","t","HMAC","algo","sqrt","pow","_hash","HmacSHA256","_hasher","_oKey","_iKey","Base64","_map","charAt","sin","MD5","z","A","B","C","D","E","HmacMD5","EvpKDF","keySize","hasher","iterations","compute","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","_xformMode","_key","ivSize","StreamCipher","_iv","_prevBlock","BlockCipherMode","Encryptor","Decryptor","_cipher","processBlock","encryptBlock","decryptBlock","CBC","pad","Pkcs7","unpad","BlockCipher","padding","_mode","CipherParams","formatter","format","OpenSSL","salt","SerializableCipher","algorithm","_parse","kdf","execute","PasswordBasedCipher","F","G","y","H","AES","_nRounds","_keySchedule","_invKeySchedule","_doCryptBlock","ECB","offset","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"rc-sdk-bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_82__, __WEBPACK_EXTERNAL_MODULE_83__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_82__, __WEBPACK_EXTERNAL_MODULE_83__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(4);\nvar xhrMock = __webpack_require__(7);\nvar xhrResponse = __webpack_require__(8);\nvar ajaxObserver = __webpack_require__(9);\nvar cache = __webpack_require__(10);\nvar context = __webpack_require__(11);\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar log = __webpack_require__(6);\nvar observable = __webpack_require__(5);\nvar pageVisibility = __webpack_require__(13);\nvar platform = __webpack_require__(14);\nvar subscription = __webpack_require__(18);\nvar utils = __webpack_require__(3);\nvar validator = __webpack_require__(19);\nvar accountHelper = __webpack_require__(20);\nvar blockedNumberHelper = __webpack_require__(21);\nvar callHelper = __webpack_require__(22);\nvar contactHelper = __webpack_require__(25);\nvar contactGroupHelper = __webpack_require__(26);\nvar conferencingHelper = __webpack_require__(27);\nvar countryHelper = __webpack_require__(1);\nvar deviceHelper = __webpack_require__(28);\nvar deviceModelHelper = __webpack_require__(29);\nvar extensionHelper = __webpack_require__(24);\nvar forwardingNumberHelper = __webpack_require__(30);\nvar languageHelper = __webpack_require__(31);\nvar locationHelper = __webpack_require__(32);\nvar messageHelper = __webpack_require__(34);\nvar phoneNumberHelper = __webpack_require__(35);\nvar presenceHelper = __webpack_require__(23);\nvar ringoutHelper = __webpack_require__(36);\nvar serviceHelper = __webpack_require__(37);\nvar shippingMethodHelper = __webpack_require__(38);\nvar stateHelper = __webpack_require__(33);\nvar timezoneHelper = __webpack_require__(39);\nvar accountClient = __webpack_require__(40);\nvar callLogClient = __webpack_require__(64);\nvar promise = __webpack_require__(77);\nvar pubnub = __webpack_require__(80);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    // Client\n    RCSDK.prototype.getAccount = function () { return accountClient.$get(this.getContext()); };\n    RCSDK.prototype.getCallLog = function () { return callLogClient.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : __webpack_require__(82)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (__webpack_require__(83))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(5);\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar log = __webpack_require__(6);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(3);\nvar log = __webpack_require__(6);\nvar xhrResponse = __webpack_require__(8); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(5);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(5);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(5);\nvar cache = __webpack_require__(10);\nvar request = __webpack_require__(15);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(16);\nvar ajaxObserver = __webpack_require__(9);\nvar r = __webpack_require__(17);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(16);\nvar log = __webpack_require__(6);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(5);\nvar platform = __webpack_require__(14);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(3);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar validator = __webpack_require__(19);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar presence = __webpack_require__(23);\nvar contact = __webpack_require__(25);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar subscription = __webpack_require__(18);\nvar extension = __webpack_require__(24);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar validator = __webpack_require__(19);\nvar list = __webpack_require__(12);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar validator = __webpack_require__(19);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar validator = __webpack_require__(19);\nvar extension = __webpack_require__(24);\nvar deviceModel = __webpack_require__(29);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar state = __webpack_require__(33);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar country = __webpack_require__(1);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar validator = __webpack_require__(19);\nvar subscription = __webpack_require__(18);\nvar platform = __webpack_require__(14);\nvar contact = __webpack_require__(25);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar list = __webpack_require__(12);\nvar extension = __webpack_require__(24);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar validator = __webpack_require__(19);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(2);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar client = __webpack_require__(41);\nvar getaccountinforesponse = __webpack_require__(42);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.accountPost = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account',\n            'method': 'post'\n        }, ResponseClass = getaccountinforesponse.GetAccountInfoResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"body\",\n                \"type\": \"createaccountrequest.CreateAccountRequest\",\n                \"in\": \"body\",\n                \"description\": \"JSON body\",\n                \"required\": true\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    Account.prototype.account = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}',\n            'method': 'get'\n        }, ResponseClass = getaccountinforesponse.GetAccountInfoResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    return Account;\n})(client.Client);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * [\n *     {\n *         \"operationId\": \"accountPost\",\n *         \"tags\": [\n *             \"Account\"\n *         ],\n *         \"summary\": \"Create Account\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.10 (Release 6.2)</p><p>Creates the account in Initial state.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>Accounts</td><td>Managing accounts: creating new accounts, viewing and updating account information, deleting existing accounts</td></tr><tr><td class='code'>EditAccounts</td><td>Viewing and updating user account info (including name, business name, address and phone number/account number)</td></tr><tr><td class='code'>ReadAccounts</td><td>Viewing user account info (including name, business name, address and phone number/account number)</td></tr><tr><td class='code'>EditExtensions</td><td>Viewing and updating user extension info (includes extension name, number, email and phone number, assigned phone numbers, devices and other extension settings)</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Medium</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"body\",\n *                 \"type\": \"createaccountrequest.CreateAccountRequest\",\n *                 \"in\": \"body\",\n *                 \"description\": \"JSON body\",\n *                 \"required\": true\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetAccountInfoResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account\",\n *         \"method\": \"post\",\n *         \"responseSchema\": \"getaccountinforesponse.GetAccountInfoResponse\",\n *         \"imports\": [\n *             \"getaccountinforesponse.GetAccountInfoResponse\",\n *             \"createaccountrequest.CreateAccountRequest\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"account\",\n *         \"tags\": [\n *             \"Account\"\n *         ],\n *         \"summary\": \"Get Account Info\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.0</p><p>Returns basic information about a particular RingCentral customer account.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadAccounts</td><td>Viewing user account info (including name, business name, address and phone number/account number)</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Light</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetAccountInfoResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"getaccountinforesponse.GetAccountInfoResponse\",\n *         \"imports\": [\n *             \"getaccountinforesponse.GetAccountInfoResponse\"\n *         ]\n *     }\n * ]\n */ \n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar platform = __webpack_require__(14);\nvar Client = (function () {\n    function Client(context) {\n        this.context = context;\n        this.platform = platform.$get(context);\n    }\n    Client.prototype.parseOptions = function (apiOptions, //request.IAjaxOptions,\n        options, operationParameters) {\n        operationParameters.forEach(function (param) {\n            if (param.required && !param.default && !options.hasOwnProperty(param.name)) {\n                throw new Error('Required parameter \"' + param.name + '\" not found');\n            }\n            if (param.default && !options.hasOwnProperty(param.name)) {\n                options[param.name] = param.default;\n            }\n            if (param.in == 'path') {\n                apiOptions.url = apiOptions.url.replace('{' + param.name + '}', options[param.name]);\n            }\n            if (param.in == 'query' && options.hasOwnProperty(param.name)) {\n                apiOptions.query = apiOptions.query || {};\n                apiOptions.query[param.name] = options[param.name];\n            }\n            if (param.in == 'body') {\n                apiOptions.body = options[param.name];\n            }\n        });\n        return apiOptions;\n    };\n    Client.prototype.apiCall = function (apiOptions, Class) {\n        return this.platform.apiCall(apiOptions).then(function (res) {\n            //TODO Support multipart\n            //TODO Think how to pass headers&stuff to outside\n            if (Class && !res.isMultipart()) {\n                return new Class(res.json);\n            }\n            return res;\n        });\n    };\n    return Client;\n})();\nexports.Client = Client;\nfunction $get(context) {\n    return context.createSingleton('Client', function () {\n        return new Client(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar getextensioninforesponse = __webpack_require__(44);\nvar serviceinforesponse = __webpack_require__(58);\nvar accountstatusinfo = __webpack_require__(63);\nvar GetAccountInfoResponse = (function (_super) {\n    __extends(GetAccountInfoResponse, _super);\n    function GetAccountInfoResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'mainNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'opeartor', Class: getextensioninforesponse.GetExtensionInfoResponse, isArray: false, isRequired: false },\n            { property: 'partnerId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'serviceInfo', Class: serviceinforesponse.ServiceInfoResponse, isArray: false, isRequired: false },\n            { property: 'setupWizardState', Class: GetAccountInfoResponseSetupWizardState, isArray: false, isRequired: false },\n            { property: 'status', Class: GetAccountInfoResponseStatus, isArray: false, isRequired: false },\n            { property: 'statusInfo', Class: accountstatusinfo.AccountStatusInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return GetAccountInfoResponse;\n})(model.Model);\nexports.GetAccountInfoResponse = GetAccountInfoResponse;\n(function (GetAccountInfoResponseSetupWizardState) {\n    GetAccountInfoResponseSetupWizardState[GetAccountInfoResponseSetupWizardState[\"NotStarted\"] = 'NotStarted'] = \"NotStarted\";\n    GetAccountInfoResponseSetupWizardState[GetAccountInfoResponseSetupWizardState[\"Incomplete\"] = 'Incomplete'] = \"Incomplete\";\n    GetAccountInfoResponseSetupWizardState[GetAccountInfoResponseSetupWizardState[\"Completed\"] = 'Completed'] = \"Completed\";\n})(exports.GetAccountInfoResponseSetupWizardState || (exports.GetAccountInfoResponseSetupWizardState = {}));\nvar GetAccountInfoResponseSetupWizardState = exports.GetAccountInfoResponseSetupWizardState;\n(function (GetAccountInfoResponseStatus) {\n    GetAccountInfoResponseStatus[GetAccountInfoResponseStatus[\"Confirmed\"] = 'Confirmed'] = \"Confirmed\";\n    GetAccountInfoResponseStatus[GetAccountInfoResponseStatus[\"Disabled\"] = 'Disabled'] = \"Disabled\";\n})(exports.GetAccountInfoResponseStatus || (exports.GetAccountInfoResponseStatus = {}));\nvar GetAccountInfoResponseStatus = exports.GetAccountInfoResponseStatus;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetAccountInfoResponse\",\n *     \"imports\": [\n *         \"getextensioninforesponse.GetExtensionInfoResponse\",\n *         \"serviceinforesponse.ServiceInfoResponse\",\n *         \"accountstatusinfo.AccountStatusInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of an account\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of an account\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Main phone number of the current account\",\n *             \"$name\": \"mainNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/GetExtensionInfoResponse\",\n *             \"description\": \"Operator's extension information. This extension will receive all calls and messages intended for the operator\",\n *             \"$name\": \"opeartor\",\n *             \"isRequired\": false,\n *             \"type\": \"getextensioninforesponse.GetExtensionInfoResponse\"\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Additional account identifier, developed and applied by the client\",\n *             \"$name\": \"partnerId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ServiceInfoResponse\",\n *             \"description\": \"Account service information, including brand, service plan and billing plan\",\n *             \"$name\": \"serviceInfo\",\n *             \"isRequired\": false,\n *             \"type\": \"serviceinforesponse.ServiceInfoResponse\"\n *         },\n *         {\n *             \"type\": \"GetAccountInfoResponseSetupWizardState\",\n *             \"enum\": [\n *                 \"NotStarted\",\n *                 \"Incomplete\",\n *                 \"Completed\"\n *             ],\n *             \"description\": \"Specifies account configuration wizard state (web service setup). The default value is 'NotStarted'\",\n *             \"$name\": \"setupWizardState\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetAccountInfoResponseStatus\",\n *             \"enum\": [\n *                 \"Confirmed\",\n *                 \"Disabled\"\n *             ],\n *             \"description\": \"Status of the current account\",\n *             \"$name\": \"status\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/AccountStatusInfo\",\n *             \"description\": \"Status information (reason, comment, lifetime). Returned for 'Disabled' status only\",\n *             \"$name\": \"statusInfo\",\n *             \"isRequired\": false,\n *             \"type\": \"accountstatusinfo.AccountStatusInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Model = (function () {\n    function Model(data) {\n        var _this = this;\n        this._propertyMappings = [];\n        if (data) {\n            this._propertyMappings.forEach(function (mapping) {\n                var Class = mapping.Class, prop = mapping.property;\n                if (mapping.isRequired && !data.hasOwnProperty(prop))\n                    throw new Error('Required property \"' + prop + '\" not defined');\n                if (!Class) {\n                    _this[prop] = data[prop];\n                }\n                else if (mapping.isArray) {\n                    _this[prop] = _this[prop].map(function (propData) {\n                        return new Class(propData);\n                    });\n                }\n                else {\n                    _this[prop] = new Class(_this[prop]);\n                }\n            });\n        }\n    }\n    return Model;\n})();\nexports.Model = Model;\nfunction $get(data) {\n    return new Model(data);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar contactinfo = __webpack_require__(45);\nvar departmentinfo = __webpack_require__(47);\nvar extensionpermissions = __webpack_require__(48);\nvar regionalsettingsinfo = __webpack_require__(50);\nvar extensionservicefeatureinfo = __webpack_require__(56);\nvar extensionstatusinfo = __webpack_require__(57);\nvar GetExtensionInfoResponse = (function (_super) {\n    __extends(GetExtensionInfoResponse, _super);\n    function GetExtensionInfoResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'contact', Class: contactinfo.ContactInfo, isArray: false, isRequired: false },\n            { property: 'departments', Class: departmentinfo.DepartmentInfo, isArray: false, isRequired: false },\n            { property: 'extensionNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'partnerId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'permissions', Class: extensionpermissions.ExtensionPermissions, isArray: false, isRequired: false },\n            { property: 'regionalSettings', Class: regionalsettingsinfo.RegionalSettingsInfo, isArray: false, isRequired: false },\n            { property: 'serviceFeatures', Class: extensionservicefeatureinfo.ExtensionServiceFeatureInfo, isArray: true, isRequired: false },\n            { property: 'setupWizardState', Class: GetExtensionInfoResponseSetupWizardState, isArray: false, isRequired: false },\n            { property: 'status', Class: GetExtensionInfoResponseStatus, isArray: false, isRequired: false },\n            { property: 'statusInfo', Class: extensionstatusinfo.ExtensionStatusInfo, isArray: false, isRequired: false },\n            { property: 'type', Class: GetExtensionInfoResponseType, isArray: false, isRequired: false }\n        ];\n    }\n    return GetExtensionInfoResponse;\n})(model.Model);\nexports.GetExtensionInfoResponse = GetExtensionInfoResponse;\n(function (GetExtensionInfoResponseSetupWizardState) {\n    GetExtensionInfoResponseSetupWizardState[GetExtensionInfoResponseSetupWizardState[\"NotStarted\"] = 'NotStarted'] = \"NotStarted\";\n    GetExtensionInfoResponseSetupWizardState[GetExtensionInfoResponseSetupWizardState[\"Incomplete\"] = 'Incomplete'] = \"Incomplete\";\n    GetExtensionInfoResponseSetupWizardState[GetExtensionInfoResponseSetupWizardState[\"Completed\"] = 'Completed'] = \"Completed\";\n})(exports.GetExtensionInfoResponseSetupWizardState || (exports.GetExtensionInfoResponseSetupWizardState = {}));\nvar GetExtensionInfoResponseSetupWizardState = exports.GetExtensionInfoResponseSetupWizardState;\n(function (GetExtensionInfoResponseStatus) {\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"Enabled\"] = 'Enabled'] = \"Enabled\";\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"Disabled\"] = 'Disabled'] = \"Disabled\";\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"NotActivated\"] = 'NotActivated'] = \"NotActivated\";\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"Unassigned\"] = 'Unassigned'] = \"Unassigned\";\n})(exports.GetExtensionInfoResponseStatus || (exports.GetExtensionInfoResponseStatus = {}));\nvar GetExtensionInfoResponseStatus = exports.GetExtensionInfoResponseStatus;\n(function (GetExtensionInfoResponseType) {\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"User\"] = 'User'] = \"User\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"FaxUser\"] = 'Fax User'] = \"FaxUser\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"VirtualUser\"] = 'VirtualUser'] = \"VirtualUser\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"DigitalUser\"] = 'DigitalUser'] = \"DigitalUser\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"Department\"] = 'Department'] = \"Department\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"Announcement\"] = 'Announcement'] = \"Announcement\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"SharedLinesGroup\"] = 'SharedLinesGroup'] = \"SharedLinesGroup\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"PagingOnly\"] = 'PagingOnly'] = \"PagingOnly\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"IvrMenu\"] = 'IvrMenu'] = \"IvrMenu\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"ApplicationExtension\"] = 'ApplicationExtension'] = \"ApplicationExtension\";\n})(exports.GetExtensionInfoResponseType || (exports.GetExtensionInfoResponseType = {}));\nvar GetExtensionInfoResponseType = exports.GetExtensionInfoResponseType;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetExtensionInfoResponse\",\n *     \"imports\": [\n *         \"contactinfo.ContactInfo\",\n *         \"departmentinfo.DepartmentInfo\",\n *         \"extensionpermissions.ExtensionPermissions\",\n *         \"regionalsettingsinfo.RegionalSettingsInfo\",\n *         \"extensionservicefeatureinfo.ExtensionServiceFeatureInfo\",\n *         \"extensionstatusinfo.ExtensionStatusInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of an extension\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of an extension\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ContactInfo\",\n *             \"description\": \"Contact detailed information\",\n *             \"$name\": \"contact\",\n *             \"isRequired\": false,\n *             \"type\": \"contactinfo.ContactInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/DepartmentInfo\",\n *             \"description\": \"Information on department extension(s), to which the requested extension belongs. Returned only for user extensions, members of department, requested by single extensionId\",\n *             \"$name\": \"departments\",\n *             \"isRequired\": false,\n *             \"type\": \"departmentinfo.DepartmentInfo\"\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Number of department extension\",\n *             \"$name\": \"extensionNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension user name\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding accountId/extensionId for each partnerId of a client application. In request URIs partnerIds are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding accountIds and extensionIds. In all request and response bodies these values are reflected via  partnerId  attributes of account and extension\",\n *             \"$name\": \"partnerId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ExtensionPermissions\",\n *             \"description\": \"Extension permissions, corresponding to the Service Web permissions 'Admin' and 'InternationalCalling'\",\n *             \"$name\": \"permissions\",\n *             \"isRequired\": false,\n *             \"type\": \"extensionpermissions.ExtensionPermissions\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RegionalSettingsInfo\",\n *             \"description\": \"Extension region data (timezone, home country, language)\",\n *             \"$name\": \"regionalSettings\",\n *             \"isRequired\": false,\n *             \"type\": \"regionalsettingsinfo.RegionalSettingsInfo\"\n *         },\n *         {\n *             \"type\": \"extensionservicefeatureinfo.ExtensionServiceFeatureInfo[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/ExtensionServiceFeatureInfo\"\n *             },\n *             \"$name\": \"serviceFeatures\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionInfoResponseSetupWizardState\",\n *             \"enum\": [\n *                 \"NotStarted\",\n *                 \"Incomplete\",\n *                 \"Completed\"\n *             ],\n *             \"description\": \"Specifies extension configuration wizard state (web service setup). The default value is 'NotStarted'\",\n *             \"$name\": \"setupWizardState\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionInfoResponseStatus\",\n *             \"enum\": [\n *                 \"Enabled\",\n *                 \"Disabled\",\n *                 \"NotActivated\",\n *                 \"Unassigned\"\n *             ],\n *             \"description\": \"Extension current state\",\n *             \"$name\": \"status\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ExtensionStatusInfo\",\n *             \"description\": \"Status information (reason, comment). Returned for 'Disabled' status only\",\n *             \"$name\": \"statusInfo\",\n *             \"isRequired\": false,\n *             \"type\": \"extensionstatusinfo.ExtensionStatusInfo\"\n *         },\n *         {\n *             \"type\": \"GetExtensionInfoResponseType\",\n *             \"enum\": [\n *                 \"User\",\n *                 \"Fax User\",\n *                 \"VirtualUser\",\n *                 \"DigitalUser\",\n *                 \"Department\",\n *                 \"Announcement\",\n *                 \"Voicemail\",\n *                 \"SharedLinesGroup\",\n *                 \"PagingOnly\",\n *                 \"IvrMenu\",\n *                 \"ApplicationExtension\"\n *             ],\n *             \"description\": \"Extension type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar contactaddressinfo = __webpack_require__(46);\nvar ContactInfo = (function (_super) {\n    __extends(ContactInfo, _super);\n    function ContactInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'firstName', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'lastName', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'company', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'email', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'businessPhone', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'businessAddress', Class: contactaddressinfo.ContactAddressInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ContactInfo;\n})(model.Model);\nexports.ContactInfo = ContactInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ContactInfo\",\n *     \"imports\": [\n *         \"contactaddressinfo.ContactAddressInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"For User extension type only. Extension user first name\",\n *             \"$name\": \"firstName\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"For User extension type only. Extension user last name\",\n *             \"$name\": \"lastName\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension user company name\",\n *             \"$name\": \"company\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Email of extension user\",\n *             \"$name\": \"email\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension user contact phone number\",\n *             \"$name\": \"businessPhone\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ContactAddressInfo\",\n *             \"description\": \"Business address of extension user company\",\n *             \"$name\": \"businessAddress\",\n *             \"isRequired\": false,\n *             \"type\": \"contactaddressinfo.ContactAddressInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar ContactAddressInfo = (function (_super) {\n    __extends(ContactAddressInfo, _super);\n    function ContactAddressInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'country', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'state', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'city', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'street', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'zip', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return ContactAddressInfo;\n})(model.Model);\nexports.ContactAddressInfo = ContactAddressInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ContactAddressInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Country name of extension user company\",\n *             \"$name\": \"country\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"State/province name of extension user company\",\n *             \"$name\": \"state\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"City name of extension user company\",\n *             \"$name\": \"city\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Street address of extension user company\",\n *             \"$name\": \"street\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Zip code of extension user company\",\n *             \"$name\": \"zip\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar DepartmentInfo = (function (_super) {\n    __extends(DepartmentInfo, _super);\n    function DepartmentInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'extensionNumber', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return DepartmentInfo;\n})(model.Model);\nexports.DepartmentInfo = DepartmentInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"DepartmentInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a department extension\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a department extension\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Number of a department extension\",\n *             \"$name\": \"extensionNumber\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar permissioninfo = __webpack_require__(49);\nvar ExtensionPermissions = (function (_super) {\n    __extends(ExtensionPermissions, _super);\n    function ExtensionPermissions(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'admin', Class: permissioninfo.PermissionInfo, isArray: false, isRequired: false },\n            { property: 'internationalCalling', Class: permissioninfo.PermissionInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionPermissions;\n})(model.Model);\nexports.ExtensionPermissions = ExtensionPermissions;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionPermissions\",\n *     \"imports\": [\n *         \"permissioninfo.PermissionInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"$ref\": \"#/definitions/PermissionInfo\",\n *             \"description\": \"Admin permission\",\n *             \"$name\": \"admin\",\n *             \"isRequired\": false,\n *             \"type\": \"permissioninfo.PermissionInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/PermissionInfo\",\n *             \"description\": \"International Calling permission\",\n *             \"$name\": \"internationalCalling\",\n *             \"isRequired\": false,\n *             \"type\": \"permissioninfo.PermissionInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar PermissionInfo = (function (_super) {\n    __extends(PermissionInfo, _super);\n    function PermissionInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'enabled', Class: null /* boolean */, isArray: false, isRequired: false }\n        ];\n    }\n    return PermissionInfo;\n})(model.Model);\nexports.PermissionInfo = PermissionInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"PermissionInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Specifies if a permission is enabled or not\",\n *             \"$name\": \"enabled\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar countryinfo = __webpack_require__(52);\nvar timezoneinfo = __webpack_require__(53);\nvar languageinfo = __webpack_require__(51);\nvar greetinglanguageinfo = __webpack_require__(54);\nvar formattinglocaleinfo = __webpack_require__(55);\nvar RegionalSettingsInfo = (function (_super) {\n    __extends(RegionalSettingsInfo, _super);\n    function RegionalSettingsInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'homeCountry', Class: countryinfo.CountryInfo, isArray: false, isRequired: false },\n            { property: 'timezone', Class: timezoneinfo.TimezoneInfo, isArray: false, isRequired: false },\n            { property: 'language', Class: languageinfo.LanguageInfo, isArray: false, isRequired: false },\n            { property: 'greetingLanguage', Class: greetinglanguageinfo.GreetingLanguageInfo, isArray: false, isRequired: false },\n            { property: 'formattingLocale', Class: formattinglocaleinfo.FormattingLocaleInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return RegionalSettingsInfo;\n})(model.Model);\nexports.RegionalSettingsInfo = RegionalSettingsInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"RegionalSettingsInfo\",\n *     \"imports\": [\n *         \"countryinfo.CountryInfo\",\n *         \"timezoneinfo.TimezoneInfo\",\n *         \"languageinfo.LanguageInfo\",\n *         \"greetinglanguageinfo.GreetingLanguageInfo\",\n *         \"formattinglocaleinfo.FormattingLocaleInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"$ref\": \"#/definitions/CountryInfo\",\n *             \"description\": \"Extension country information\",\n *             \"$name\": \"homeCountry\",\n *             \"isRequired\": false,\n *             \"type\": \"countryinfo.CountryInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/TimezoneInfo\",\n *             \"description\": \"Extension timezone information\",\n *             \"$name\": \"timezone\",\n *             \"isRequired\": false,\n *             \"type\": \"timezoneinfo.TimezoneInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/LanguageInfo\",\n *             \"description\": \"User interface language data\",\n *             \"$name\": \"language\",\n *             \"isRequired\": false,\n *             \"type\": \"languageinfo.LanguageInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/GreetingLanguageInfo\",\n *             \"description\": \"Information on language used for telephony greetings\",\n *             \"$name\": \"greetingLanguage\",\n *             \"isRequired\": false,\n *             \"type\": \"greetinglanguageinfo.GreetingLanguageInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/FormattingLocaleInfo\",\n *             \"description\": \"Formatting language preferences for numbers, dates and currencies\",\n *             \"$name\": \"formattingLocale\",\n *             \"isRequired\": false,\n *             \"type\": \"formattinglocaleinfo.FormattingLocaleInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar LanguageInfo = (function (_super) {\n    __extends(LanguageInfo, _super);\n    function LanguageInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'greeting', Class: null /* boolean */, isArray: false, isRequired: false },\n            { property: 'formattingLocale', Class: null /* boolean */, isArray: false, isRequired: false },\n            { property: 'localeCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'ui', Class: null /* boolean */, isArray: false, isRequired: false }\n        ];\n    }\n    return LanguageInfo;\n})(model.Model);\nexports.LanguageInfo = LanguageInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"LanguageInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a language\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a language\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Indicates whether a language is available as greeting language\",\n *             \"$name\": \"greeting\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Indicates whether a language is available as formatting locale\",\n *             \"$name\": \"formattingLocale\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Localization code of a language\",\n *             \"$name\": \"localeCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Official name of a language\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Indicates whether a language is available as UI language\",\n *             \"$name\": \"ui\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar CountryInfo = (function (_super) {\n    __extends(CountryInfo, _super);\n    function CountryInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'callingCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'isoCode', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return CountryInfo;\n})(model.Model);\nexports.CountryInfo = CountryInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CountryInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a home country\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Home country URI\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Home country calling code defined by ITU-T recommendations E.123 and E.164, see Calling Codes\",\n *             \"$name\": \"callingCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Home country code according to the ISO standard, see ISO 3166\",\n *             \"$name\": \"isoCode\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar TimezoneInfo = (function (_super) {\n    __extends(TimezoneInfo, _super);\n    function TimezoneInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'description', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return TimezoneInfo;\n})(model.Model);\nexports.TimezoneInfo = TimezoneInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"TimezoneInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a timezone\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a timezone\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Short name of a timezone\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Meaningful description of the timezone\",\n *             \"$name\": \"description\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar GreetingLanguageInfo = (function (_super) {\n    __extends(GreetingLanguageInfo, _super);\n    function GreetingLanguageInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'localeCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return GreetingLanguageInfo;\n})(model.Model);\nexports.GreetingLanguageInfo = GreetingLanguageInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GreetingLanguageInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a greeting language\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Localization code of a greeting language\",\n *             \"$name\": \"localeCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Official name of a greeting language\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar FormattingLocaleInfo = (function (_super) {\n    __extends(FormattingLocaleInfo, _super);\n    function FormattingLocaleInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'localeCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return FormattingLocaleInfo;\n})(model.Model);\nexports.FormattingLocaleInfo = FormattingLocaleInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"FormattingLocaleInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a formatting language\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Localization code of a formatting language\",\n *             \"$name\": \"localeCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Official name of a formatting language\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar ExtensionServiceFeatureInfo = (function (_super) {\n    __extends(ExtensionServiceFeatureInfo, _super);\n    function ExtensionServiceFeatureInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'enabled', Class: null /* boolean */, isArray: false, isRequired: false },\n            { property: 'featureName', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'reason', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionServiceFeatureInfo;\n})(model.Model);\nexports.ExtensionServiceFeatureInfo = ExtensionServiceFeatureInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionServiceFeatureInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Feature status; shows feature availability for an extension\",\n *             \"$name\": \"enabled\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Feature name, see all available values in Service Feature List\",\n *             \"$name\": \"featureName\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Reason of limitation for a particular service feature. Returned only if the enabled parameter value is 'False', see Service Feature Limitations and Reasons. When retrieving service features for an extension, the reasons for the limitations, if any, are returned in response\",\n *             \"$name\": \"reason\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar ExtensionStatusInfo = (function (_super) {\n    __extends(ExtensionStatusInfo, _super);\n    function ExtensionStatusInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'comment', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'reason', Class: ExtensionStatusInfoReason, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionStatusInfo;\n})(model.Model);\nexports.ExtensionStatusInfo = ExtensionStatusInfo;\n(function (ExtensionStatusInfoReason) {\n    ExtensionStatusInfoReason[ExtensionStatusInfoReason[\"Voluntarily\"] = 'Voluntarily'] = \"Voluntarily\";\n    ExtensionStatusInfoReason[ExtensionStatusInfoReason[\"Involuntarily\"] = 'Involuntarily'] = \"Involuntarily\";\n})(exports.ExtensionStatusInfoReason || (exports.ExtensionStatusInfoReason = {}));\nvar ExtensionStatusInfoReason = exports.ExtensionStatusInfoReason;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionStatusInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"A free-form user comment, describing the status change reason\",\n *             \"$name\": \"comment\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"ExtensionStatusInfoReason\",\n *             \"enum\": [\n *                 \"Voluntarily\",\n *                 \"Involuntarily\"\n *             ],\n *             \"description\": \"Type of suspension\",\n *             \"$name\": \"reason\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar billingplaninfo = __webpack_require__(59);\nvar brandinfo = __webpack_require__(60);\nvar serviceplaninfo = __webpack_require__(61);\nvar targetserviceplaninfo = __webpack_require__(62);\nvar ServiceInfoResponse = (function (_super) {\n    __extends(ServiceInfoResponse, _super);\n    function ServiceInfoResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'billingPlan', Class: billingplaninfo.BillingPlanInfo, isArray: false, isRequired: false },\n            { property: 'brand', Class: brandinfo.BrandInfo, isArray: false, isRequired: false },\n            { property: 'servicePlan', Class: serviceplaninfo.ServicePlanInfo, isArray: false, isRequired: false },\n            { property: 'targetServicePlan', Class: targetserviceplaninfo.TargetServicePlanInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ServiceInfoResponse;\n})(model.Model);\nexports.ServiceInfoResponse = ServiceInfoResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ServiceInfoResponse\",\n *     \"imports\": [\n *         \"billingplaninfo.BillingPlanInfo\",\n *         \"brandinfo.BrandInfo\",\n *         \"serviceplaninfo.ServicePlanInfo\",\n *         \"targetserviceplaninfo.TargetServicePlanInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a service info resource\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/BillingPlanInfo\",\n *             \"description\": \"Information on account billing plan\",\n *             \"$name\": \"billingPlan\",\n *             \"isRequired\": false,\n *             \"type\": \"billingplaninfo.BillingPlanInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/BrandInfo\",\n *             \"description\": \"Information on account brand\",\n *             \"$name\": \"brand\",\n *             \"isRequired\": false,\n *             \"type\": \"brandinfo.BrandInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ServicePlanInfo\",\n *             \"description\": \"Information on account service plan\",\n *             \"$name\": \"servicePlan\",\n *             \"isRequired\": false,\n *             \"type\": \"serviceplaninfo.ServicePlanInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/TargetServicePlanInfo\",\n *             \"description\": \"Information on account target service plan\",\n *             \"$name\": \"targetServicePlan\",\n *             \"isRequired\": false,\n *             \"type\": \"targetserviceplaninfo.TargetServicePlanInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar BillingPlanInfo = (function (_super) {\n    __extends(BillingPlanInfo, _super);\n    function BillingPlanInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'durationUnit', Class: BillingPlanInfoDurationUnit, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'type', Class: BillingPlanInfoType, isArray: false, isRequired: false }\n        ];\n    }\n    return BillingPlanInfo;\n})(model.Model);\nexports.BillingPlanInfo = BillingPlanInfo;\n(function (BillingPlanInfoDurationUnit) {\n    BillingPlanInfoDurationUnit[BillingPlanInfoDurationUnit[\"Month\"] = 'Month'] = \"Month\";\n    BillingPlanInfoDurationUnit[BillingPlanInfoDurationUnit[\"Day\"] = 'Day'] = \"Day\";\n})(exports.BillingPlanInfoDurationUnit || (exports.BillingPlanInfoDurationUnit = {}));\nvar BillingPlanInfoDurationUnit = exports.BillingPlanInfoDurationUnit;\n(function (BillingPlanInfoType) {\n    BillingPlanInfoType[BillingPlanInfoType[\"Initial\"] = 'Initial'] = \"Initial\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Regular\"] = 'Regular'] = \"Regular\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Trial\"] = 'Trial'] = \"Trial\";\n    BillingPlanInfoType[BillingPlanInfoType[\"TrialNoCC\"] = 'TrialNoCC'] = \"TrialNoCC\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Free\"] = 'Free'] = \"Free\";\n})(exports.BillingPlanInfoType || (exports.BillingPlanInfoType = {}));\nvar BillingPlanInfoType = exports.BillingPlanInfoType;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"BillingPlanInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a billing plan\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Billing plan name\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"BillingPlanInfoDurationUnit\",\n *             \"enum\": [\n *                 \"Month\",\n *                 \"Day\"\n *             ],\n *             \"description\": \"Duration period\",\n *             \"$name\": \"durationUnit\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Number of duration units\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"BillingPlanInfoType\",\n *             \"enum\": [\n *                 \"Initial\",\n *                 \"Regular\",\n *                 \"Suspended\",\n *                 \"Trial\",\n *                 \"TrialNoCC\",\n *                 \"Free\"\n *             ],\n *             \"description\": \"Billing plan type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar countryinfo = __webpack_require__(52);\nvar BrandInfo = (function (_super) {\n    __extends(BrandInfo, _super);\n    function BrandInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'homeCountry', Class: countryinfo.CountryInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return BrandInfo;\n})(model.Model);\nexports.BrandInfo = BrandInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"BrandInfo\",\n *     \"imports\": [\n *         \"countryinfo.CountryInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a brand\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Brand name, for example  RingCentral UK ,  ClearFax \",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CountryInfo\",\n *             \"description\": \"Home country information\",\n *             \"$name\": \"homeCountry\",\n *             \"isRequired\": false,\n *             \"type\": \"countryinfo.CountryInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar ServicePlanInfo = (function (_super) {\n    __extends(ServicePlanInfo, _super);\n    function ServicePlanInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'edition', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return ServicePlanInfo;\n})(model.Model);\nexports.ServicePlanInfo = ServicePlanInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ServicePlanInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a service plan\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Name of a service plan\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Edition of a service plan\",\n *             \"$name\": \"edition\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar TargetServicePlanInfo = (function (_super) {\n    __extends(TargetServicePlanInfo, _super);\n    function TargetServicePlanInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return TargetServicePlanInfo;\n})(model.Model);\nexports.TargetServicePlanInfo = TargetServicePlanInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"TargetServicePlanInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a target service plan\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Name of a target service plan\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar AccountStatusInfo = (function (_super) {\n    __extends(AccountStatusInfo, _super);\n    function AccountStatusInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'reason', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'comment', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'lifetime', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return AccountStatusInfo;\n})(model.Model);\nexports.AccountStatusInfo = AccountStatusInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"AccountStatusInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Foo\",\n *             \"$name\": \"reason\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Foo\",\n *             \"$name\": \"comment\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Foo\",\n *             \"$name\": \"lifetime\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar client = __webpack_require__(41);\nvar accountactivecallsresponse = __webpack_require__(73);\nvar extensionactivecallsresponse = __webpack_require__(74);\nvar extensioncalllogresponse = __webpack_require__(65);\nvar getextensioncalllogrecordresponse = __webpack_require__(75);\nvar getcallrecordingresponse = __webpack_require__(76);\nvar CallLog = (function (_super) {\n    __extends(CallLog, _super);\n    function CallLog() {\n        _super.apply(this, arguments);\n    }\n    CallLog.prototype.accountActiveCalls = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/active-calls',\n            'method': 'get'\n        }, ResponseClass = accountactivecallsresponse.AccountActiveCallsResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"direction\",\n                \"type\": \"IAccountActiveCallsDirection\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Inbound\",\n                    \"Outbound\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"IAccountActiveCallsType\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Voice\",\n                    \"Fax\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"page\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n                \"required\": false\n            },\n            {\n                \"name\": \"perPage\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountExtensionActiveCalls = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/extension/{extensionId}/active-calls',\n            'method': 'get'\n        }, ResponseClass = extensionactivecallsresponse.ExtensionActiveCallsResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"direction\",\n                \"type\": \"IAccountExtensionActiveCallsDirection\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Inbound\",\n                    \"Outbound\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"IAccountExtensionActiveCallsType\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Voice\",\n                    \"Fax\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"page\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n                \"required\": false\n            },\n            {\n                \"name\": \"perPage\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountExtensionCallLogs = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log',\n            'method': 'get'\n        }, ResponseClass = extensioncalllogresponse.ExtensionCallLogResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"extensionId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"extensionNumber\",\n                \"type\": \"string\",\n                \"in\": \"query\",\n                \"description\": \"Extension number of a user. If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter\",\n                \"required\": false\n            },\n            {\n                \"name\": \"phoneNumber\",\n                \"type\": \"string\",\n                \"in\": \"query\",\n                \"description\": \"Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionNumber filter\",\n                \"required\": false\n            },\n            {\n                \"name\": \"direction\",\n                \"type\": \"IAccountExtensionCallLogsDirection\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Inbound\",\n                    \"Outbound\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"IAccountExtensionCallLogsType\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Voice\",\n                    \"Fax\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"view\",\n                \"type\": \"IAccountExtensionCallLogsView\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Simple\",\n                    \"Detailed\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The default value is 'Simple' for both account and extension call log\",\n                \"required\": false\n            },\n            {\n                \"name\": \"withRecording\",\n                \"type\": \"IAccountExtensionCallLogsWithRecording\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"True\",\n                    \"False\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"'True' if only recorded calls have to be returned\",\n                \"required\": false\n            },\n            {\n                \"name\": \"dateTo\",\n                \"type\": \"Date\",\n                \"in\": \"query\",\n                \"description\": \"Specifies the ending timestamp for result records. Default: current time\",\n                \"required\": false\n            },\n            {\n                \"name\": \"dateFrom\",\n                \"type\": \"Date\",\n                \"in\": \"query\",\n                \"description\": \"The start timestamp for result records. Default value is equal to dateTo minus 1 week\",\n                \"required\": false\n            },\n            {\n                \"name\": \"page\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n                \"required\": false\n            },\n            {\n                \"name\": \"perPage\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountExtensionCallLog = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}',\n            'method': 'get'\n        }, ResponseClass = getextensioncalllogrecordresponse.GetExtensionCallLogRecordResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"extensionId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"callRecordId\",\n                \"type\": \"number\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a call log record\",\n                \"required\": true\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountRecording = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/recording/{recordingId}',\n            'method': 'get'\n        }, ResponseClass = getcallrecordingresponse.GetCallRecordingResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"recordingId\",\n                \"type\": \"number\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of recording (returned in Call Log)\",\n                \"required\": true\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    return CallLog;\n})(client.Client);\nexports.CallLog = CallLog;\n(function (IAccountActiveCallsDirection) {\n    IAccountActiveCallsDirection[IAccountActiveCallsDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    IAccountActiveCallsDirection[IAccountActiveCallsDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.IAccountActiveCallsDirection || (exports.IAccountActiveCallsDirection = {}));\nvar IAccountActiveCallsDirection = exports.IAccountActiveCallsDirection;\n(function (IAccountActiveCallsType) {\n    IAccountActiveCallsType[IAccountActiveCallsType[\"Voice\"] = 'Voice'] = \"Voice\";\n    IAccountActiveCallsType[IAccountActiveCallsType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.IAccountActiveCallsType || (exports.IAccountActiveCallsType = {}));\nvar IAccountActiveCallsType = exports.IAccountActiveCallsType;\n(function (IAccountExtensionActiveCallsDirection) {\n    IAccountExtensionActiveCallsDirection[IAccountExtensionActiveCallsDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    IAccountExtensionActiveCallsDirection[IAccountExtensionActiveCallsDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.IAccountExtensionActiveCallsDirection || (exports.IAccountExtensionActiveCallsDirection = {}));\nvar IAccountExtensionActiveCallsDirection = exports.IAccountExtensionActiveCallsDirection;\n(function (IAccountExtensionActiveCallsType) {\n    IAccountExtensionActiveCallsType[IAccountExtensionActiveCallsType[\"Voice\"] = 'Voice'] = \"Voice\";\n    IAccountExtensionActiveCallsType[IAccountExtensionActiveCallsType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.IAccountExtensionActiveCallsType || (exports.IAccountExtensionActiveCallsType = {}));\nvar IAccountExtensionActiveCallsType = exports.IAccountExtensionActiveCallsType;\n(function (IAccountExtensionCallLogsDirection) {\n    IAccountExtensionCallLogsDirection[IAccountExtensionCallLogsDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    IAccountExtensionCallLogsDirection[IAccountExtensionCallLogsDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.IAccountExtensionCallLogsDirection || (exports.IAccountExtensionCallLogsDirection = {}));\nvar IAccountExtensionCallLogsDirection = exports.IAccountExtensionCallLogsDirection;\n(function (IAccountExtensionCallLogsType) {\n    IAccountExtensionCallLogsType[IAccountExtensionCallLogsType[\"Voice\"] = 'Voice'] = \"Voice\";\n    IAccountExtensionCallLogsType[IAccountExtensionCallLogsType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.IAccountExtensionCallLogsType || (exports.IAccountExtensionCallLogsType = {}));\nvar IAccountExtensionCallLogsType = exports.IAccountExtensionCallLogsType;\n(function (IAccountExtensionCallLogsView) {\n    IAccountExtensionCallLogsView[IAccountExtensionCallLogsView[\"Simple\"] = 'Simple'] = \"Simple\";\n    IAccountExtensionCallLogsView[IAccountExtensionCallLogsView[\"Detailed\"] = 'Detailed'] = \"Detailed\";\n})(exports.IAccountExtensionCallLogsView || (exports.IAccountExtensionCallLogsView = {}));\nvar IAccountExtensionCallLogsView = exports.IAccountExtensionCallLogsView;\n(function (IAccountExtensionCallLogsWithRecording) {\n    IAccountExtensionCallLogsWithRecording[IAccountExtensionCallLogsWithRecording[\"True\"] = 'True'] = \"True\";\n    IAccountExtensionCallLogsWithRecording[IAccountExtensionCallLogsWithRecording[\"False\"] = 'False'] = \"False\";\n})(exports.IAccountExtensionCallLogsWithRecording || (exports.IAccountExtensionCallLogsWithRecording = {}));\nvar IAccountExtensionCallLogsWithRecording = exports.IAccountExtensionCallLogsWithRecording;\nfunction $get(context) {\n    return context.createSingleton('CallLog', function () {\n        return new CallLog(context);\n    });\n}\nexports.$get = $get;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * [\n *     {\n *         \"operationId\": \"accountActiveCalls\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Account Active Calls\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.13 (Release 6.5)</p><p>Returns records of all calls that are in progress, ordered by start time in descending order.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"direction\",\n *                 \"type\": \"IAccountActiveCallsDirection\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Inbound\",\n *                     \"Outbound\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"type\",\n *                 \"type\": \"IAccountActiveCallsType\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Voice\",\n *                     \"Fax\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"page\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"perPage\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/AccountActiveCallsResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/active-calls\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"accountactivecallsresponse.AccountActiveCallsResponse\",\n *         \"imports\": [\n *             \"accountactivecallsresponse.AccountActiveCallsResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountExtensionActiveCalls\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Active Calls\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.13 (Release 6.5)</p><p>Returns records of all extension calls that are in progress, ordered by start time in descending order.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"direction\",\n *                 \"type\": \"IAccountExtensionActiveCallsDirection\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Inbound\",\n *                     \"Outbound\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"type\",\n *                 \"type\": \"IAccountExtensionActiveCallsType\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Voice\",\n *                     \"Fax\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"page\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"perPage\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/ExtensionActiveCallsResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/extension/{extensionId}/active-calls\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"extensionactivecallsresponse.ExtensionActiveCallsResponse\",\n *         \"imports\": [\n *             \"extensionactivecallsresponse.ExtensionActiveCallsResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountExtensionCallLogs\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Call Log Records by Filter\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.3 (Release 5.11)</p><p>Returns call log records filtered by the specified parameters.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"extensionId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"extensionNumber\",\n *                 \"type\": \"string\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Extension number of a user. If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"phoneNumber\",\n *                 \"type\": \"string\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionNumber filter\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"direction\",\n *                 \"type\": \"IAccountExtensionCallLogsDirection\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Inbound\",\n *                     \"Outbound\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"type\",\n *                 \"type\": \"IAccountExtensionCallLogsType\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Voice\",\n *                     \"Fax\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"view\",\n *                 \"type\": \"IAccountExtensionCallLogsView\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Simple\",\n *                     \"Detailed\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The default value is 'Simple' for both account and extension call log\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"withRecording\",\n *                 \"type\": \"IAccountExtensionCallLogsWithRecording\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"True\",\n *                     \"False\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"'True' if only recorded calls have to be returned\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"dateTo\",\n *                 \"type\": \"Date\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Specifies the ending timestamp for result records. Default: current time\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"dateFrom\",\n *                 \"type\": \"Date\",\n *                 \"in\": \"query\",\n *                 \"description\": \"The start timestamp for result records. Default value is equal to dateTo minus 1 week\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"page\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"perPage\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/ExtensionCallLogResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"extensioncalllogresponse.ExtensionCallLogResponse\",\n *         \"imports\": [\n *             \"extensioncalllogresponse.ExtensionCallLogResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountExtensionCallLog\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Call Log Record\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.3 (Release 5.11)</p><p>Returns individual call log record by callRecordId(s).</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"extensionId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"callRecordId\",\n *                 \"type\": \"number\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a call log record\",\n *                 \"required\": true\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetExtensionCallLogRecordResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"getextensioncalllogrecordresponse.GetExtensionCallLogRecordResponse\",\n *         \"imports\": [\n *             \"getextensioncalllogrecordresponse.GetExtensionCallLogRecordResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountRecording\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Call Recording\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.18</p><p>Returns call recording metadata.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallRecording</td><td>Downloading call recording content</td></tr><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"recordingId\",\n *                 \"type\": \"number\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of recording (returned in Call Log)\",\n *                 \"required\": true\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetCallRecordingResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/recording/{recordingId}\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"getcallrecordingresponse.GetCallRecordingResponse\",\n *         \"imports\": [\n *             \"getcallrecordingresponse.GetCallRecordingResponse\"\n *         ]\n *     }\n * ]\n */ \n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar calllogrecord = __webpack_require__(66);\nvar paginginfo = __webpack_require__(70);\nvar navigationinfo = __webpack_require__(71);\nvar ExtensionCallLogResponse = (function (_super) {\n    __extends(ExtensionCallLogResponse, _super);\n    function ExtensionCallLogResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'records', Class: calllogrecord.CallLogRecord, isArray: true, isRequired: true },\n            { property: 'paging', Class: paginginfo.PagingInfo, isArray: false, isRequired: true },\n            { property: 'navigation', Class: navigationinfo.NavigationInfo, isArray: false, isRequired: true }\n        ];\n    }\n    return ExtensionCallLogResponse;\n})(model.Model);\nexports.ExtensionCallLogResponse = ExtensionCallLogResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionCallLogResponse\",\n *     \"imports\": [\n *         \"calllogrecord.CallLogRecord\",\n *         \"paginginfo.PagingInfo\",\n *         \"navigationinfo.NavigationInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"calllogrecord.CallLogRecord[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/CallLogRecord\"\n *             },\n *             \"$name\": \"records\",\n *             \"isRequired\": true\n *         },\n *         {\n *             \"$ref\": \"#/definitions/PagingInfo\",\n *             \"description\": \"Information on paging\",\n *             \"$name\": \"paging\",\n *             \"isRequired\": true,\n *             \"type\": \"paginginfo.PagingInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/NavigationInfo\",\n *             \"description\": \"Information on navigation\",\n *             \"$name\": \"navigation\",\n *             \"isRequired\": true,\n *             \"type\": \"navigationinfo.NavigationInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar calllogcallerinfo = __webpack_require__(67);\nvar recordinginfo = __webpack_require__(68);\nvar calllogrecordleginfo = __webpack_require__(69);\nvar CallLogRecord = (function (_super) {\n    __extends(CallLogRecord, _super);\n    function CallLogRecord(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'sessionId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'from', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'to', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'type', Class: CallLogRecordType, isArray: false, isRequired: false },\n            { property: 'direction', Class: CallLogRecordDirection, isArray: false, isRequired: false },\n            { property: 'action', Class: CallLogRecordAction, isArray: false, isRequired: false },\n            { property: 'result', Class: CallLogRecordResult, isArray: false, isRequired: false },\n            { property: 'startTime', Class: Date, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'transport', Class: CallLogRecordTransport, isArray: false, isRequired: false },\n            { property: 'message', Class: null /* any */, isArray: false, isRequired: false },\n            { property: 'recording', Class: recordinginfo.RecordingInfo, isArray: false, isRequired: false },\n            { property: 'billing', Class: CallLogRecordBilling, isArray: false, isRequired: false },\n            { property: 'legs', Class: calllogrecordleginfo.CallLogRecordLegInfo, isArray: true, isRequired: true }\n        ];\n    }\n    return CallLogRecord;\n})(model.Model);\nexports.CallLogRecord = CallLogRecord;\n(function (CallLogRecordType) {\n    CallLogRecordType[CallLogRecordType[\"Voice\"] = 'Voice'] = \"Voice\";\n    CallLogRecordType[CallLogRecordType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.CallLogRecordType || (exports.CallLogRecordType = {}));\nvar CallLogRecordType = exports.CallLogRecordType;\n(function (CallLogRecordDirection) {\n    CallLogRecordDirection[CallLogRecordDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    CallLogRecordDirection[CallLogRecordDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.CallLogRecordDirection || (exports.CallLogRecordDirection = {}));\nvar CallLogRecordDirection = exports.CallLogRecordDirection;\n(function (CallLogRecordAction) {\n    CallLogRecordAction[CallLogRecordAction[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordAction[CallLogRecordAction[\"PhoneCall\"] = 'Phone Call'] = \"PhoneCall\";\n    CallLogRecordAction[CallLogRecordAction[\"PhoneLogin\"] = 'Phone Login'] = \"PhoneLogin\";\n    CallLogRecordAction[CallLogRecordAction[\"IncomingFax\"] = 'Incoming Fax'] = \"IncomingFax\";\n    CallLogRecordAction[CallLogRecordAction[\"AcceptCall\"] = 'Accept Call'] = \"AcceptCall\";\n    CallLogRecordAction[CallLogRecordAction[\"FindMe\"] = 'FindMe'] = \"FindMe\";\n    CallLogRecordAction[CallLogRecordAction[\"FollowMe\"] = 'FollowMe'] = \"FollowMe\";\n    CallLogRecordAction[CallLogRecordAction[\"OutgoingFax\"] = 'Outgoing Fax'] = \"OutgoingFax\";\n    CallLogRecordAction[CallLogRecordAction[\"CallReturn\"] = 'Call Return'] = \"CallReturn\";\n    CallLogRecordAction[CallLogRecordAction[\"CallingCard\"] = 'Calling Card'] = \"CallingCard\";\n    CallLogRecordAction[CallLogRecordAction[\"RingDirectly\"] = 'Ring Directly'] = \"RingDirectly\";\n    CallLogRecordAction[CallLogRecordAction[\"RingOutWeb\"] = 'RingOut Web'] = \"RingOutWeb\";\n    CallLogRecordAction[CallLogRecordAction[\"VoIPCall\"] = 'VoIP Call'] = \"VoIPCall\";\n    CallLogRecordAction[CallLogRecordAction[\"RingOutPC\"] = 'RingOut PC'] = \"RingOutPC\";\n    CallLogRecordAction[CallLogRecordAction[\"RingMe\"] = 'RingMe'] = \"RingMe\";\n    CallLogRecordAction[CallLogRecordAction[\"Transfer\"] = 'Transfer'] = \"Transfer\";\n    CallLogRecordAction[CallLogRecordAction['411Info'] = '411 Info'] = '411Info';\n    CallLogRecordAction[CallLogRecordAction[\"Emergency\"] = 'Emergency'] = \"Emergency\";\n    CallLogRecordAction[CallLogRecordAction['E911Update'] = 'E911 Update'] = 'E911Update';\n    CallLogRecordAction[CallLogRecordAction[\"Support\"] = 'Support'] = \"Support\";\n    CallLogRecordAction[CallLogRecordAction[\"RingOutMobile\"] = 'RingOut Mobile'] = \"RingOutMobile\";\n})(exports.CallLogRecordAction || (exports.CallLogRecordAction = {}));\nvar CallLogRecordAction = exports.CallLogRecordAction;\n(function (CallLogRecordResult) {\n    CallLogRecordResult[CallLogRecordResult[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordResult[CallLogRecordResult[\"ResultInProgress\"] = 'ResultInProgress'] = \"ResultInProgress\";\n    CallLogRecordResult[CallLogRecordResult[\"Missed\"] = 'Missed'] = \"Missed\";\n    CallLogRecordResult[CallLogRecordResult[\"Callaccepted\"] = 'Call accepted'] = \"Callaccepted\";\n    CallLogRecordResult[CallLogRecordResult[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    CallLogRecordResult[CallLogRecordResult[\"Rejected\"] = 'Rejected'] = \"Rejected\";\n    CallLogRecordResult[CallLogRecordResult[\"Reply\"] = 'Reply'] = \"Reply\";\n    CallLogRecordResult[CallLogRecordResult[\"Received\"] = 'Received'] = \"Received\";\n    CallLogRecordResult[CallLogRecordResult[\"ReceiveError\"] = 'Receive Error'] = \"ReceiveError\";\n    CallLogRecordResult[CallLogRecordResult[\"FaxonDemand\"] = 'Fax on Demand'] = \"FaxonDemand\";\n    CallLogRecordResult[CallLogRecordResult[\"PartialReceive\"] = 'Partial Receive'] = \"PartialReceive\";\n    CallLogRecordResult[CallLogRecordResult[\"Blocked\"] = 'Blocked'] = \"Blocked\";\n    CallLogRecordResult[CallLogRecordResult['Callсonnected'] = 'Call сonnected'] = 'Callсonnected';\n    CallLogRecordResult[CallLogRecordResult[\"NoAnswer\"] = 'No Answer'] = \"NoAnswer\";\n    CallLogRecordResult[CallLogRecordResult[\"Busy\"] = 'Busy'] = \"Busy\";\n    CallLogRecordResult[CallLogRecordResult[\"SendError\"] = 'Send Error'] = \"SendError\";\n    CallLogRecordResult[CallLogRecordResult[\"Sent\"] = 'Sent'] = \"Sent\";\n    CallLogRecordResult[CallLogRecordResult[\"Nofaxmachine\"] = 'No fax machine'] = \"Nofaxmachine\";\n    CallLogRecordResult[CallLogRecordResult[\"ResultEmpty\"] = 'ResultEmpty'] = \"ResultEmpty\";\n    CallLogRecordResult[CallLogRecordResult[\"Account\"] = 'Account'] = \"Account\";\n    CallLogRecordResult[CallLogRecordResult[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    CallLogRecordResult[CallLogRecordResult[\"CallFailed\"] = 'Call Failed'] = \"CallFailed\";\n    CallLogRecordResult[CallLogRecordResult[\"CallFailure\"] = 'Call Failure'] = \"CallFailure\";\n    CallLogRecordResult[CallLogRecordResult[\"InternalError\"] = 'Internal Error'] = \"InternalError\";\n    CallLogRecordResult[CallLogRecordResult[\"IPPhoneoffline\"] = 'IP Phone offline'] = \"IPPhoneoffline\";\n    CallLogRecordResult[CallLogRecordResult[\"RestrictedNumber\"] = 'Restricted Number'] = \"RestrictedNumber\";\n    CallLogRecordResult[CallLogRecordResult[\"WrongNumber\"] = 'Wrong Number'] = \"WrongNumber\";\n    CallLogRecordResult[CallLogRecordResult[\"Stopped\"] = 'Stopped'] = \"Stopped\";\n    CallLogRecordResult[CallLogRecordResult[\"Hangup\"] = 'Hang up'] = \"Hangup\";\n    CallLogRecordResult[CallLogRecordResult[\"PoorLineQuality\"] = 'Poor Line Quality'] = \"PoorLineQuality\";\n    CallLogRecordResult[CallLogRecordResult[\"PartiallySent\"] = 'Partially Sent'] = \"PartiallySent\";\n    CallLogRecordResult[CallLogRecordResult[\"InternationalDisabled\"] = 'International Disabled'] = \"InternationalDisabled\";\n    CallLogRecordResult[CallLogRecordResult[\"InternationalRestriction\"] = 'International Restriction'] = \"InternationalRestriction\";\n    CallLogRecordResult[CallLogRecordResult[\"Abandoned\"] = 'Abandoned'] = \"Abandoned\";\n    CallLogRecordResult[CallLogRecordResult[\"Declined\"] = 'Declined'] = \"Declined\";\n    CallLogRecordResult[CallLogRecordResult[\"FaxReceiptError\"] = 'Fax Receipt Error'] = \"FaxReceiptError\";\n    CallLogRecordResult[CallLogRecordResult[\"FaxSendError\"] = 'Fax Send Error'] = \"FaxSendError\";\n})(exports.CallLogRecordResult || (exports.CallLogRecordResult = {}));\nvar CallLogRecordResult = exports.CallLogRecordResult;\n(function (CallLogRecordTransport) {\n    CallLogRecordTransport[CallLogRecordTransport[\"PSTN\"] = 'PSTN'] = \"PSTN\";\n    CallLogRecordTransport[CallLogRecordTransport[\"VoIP\"] = 'VoIP'] = \"VoIP\";\n})(exports.CallLogRecordTransport || (exports.CallLogRecordTransport = {}));\nvar CallLogRecordTransport = exports.CallLogRecordTransport;\n(function (CallLogRecordBilling) {\n    CallLogRecordBilling[CallLogRecordBilling[\"costIncluded\"] = 'costIncluded'] = \"costIncluded\";\n    CallLogRecordBilling[CallLogRecordBilling[\"costPurchased\"] = 'costPurchased'] = \"costPurchased\";\n})(exports.CallLogRecordBilling || (exports.CallLogRecordBilling = {}));\nvar CallLogRecordBilling = exports.CallLogRecordBilling;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CallLogRecord\",\n *     \"imports\": [\n *         \"calllogcallerinfo.CallLogCallerInfo\",\n *         \"recordinginfo.RecordingInfo\",\n *         \"calllogrecordleginfo.CallLogRecordLegInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a cal log record\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a call log record\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a call session\",\n *             \"$name\": \"sessionId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Caller information\",\n *             \"$name\": \"from\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Callee information\",\n *             \"$name\": \"to\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordType\",\n *             \"enum\": [\n *                 \"Voice\",\n *                 \"Fax\"\n *             ],\n *             \"description\": \"Call type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordDirection\",\n *             \"enum\": [\n *                 \"Inbound\",\n *                 \"Outbound\"\n *             ],\n *             \"description\": \"Call direction\",\n *             \"$name\": \"direction\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordAction\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"Phone Call\",\n *                 \"Phone Login\",\n *                 \"Incoming Fax\",\n *                 \"Accept Call\",\n *                 \"FindMe\",\n *                 \"FollowMe\",\n *                 \"Outgoing Fax\",\n *                 \"Call Return\",\n *                 \"Calling Card\",\n *                 \"Ring Directly\",\n *                 \"RingOut Web\",\n *                 \"VoIP Call\",\n *                 \"RingOut PC\",\n *                 \"RingMe\",\n *                 \"Transfer\",\n *                 \"411 Info\",\n *                 \"Emergency\",\n *                 \"E911 Update\",\n *                 \"Support\",\n *                 \"RingOut Mobile\"\n *             ],\n *             \"description\": \"Action description of the call operation.\",\n *             \"$name\": \"action\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordResult\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"ResultInProgress\",\n *                 \"Missed\",\n *                 \"Call accepted\",\n *                 \"Voicemail\",\n *                 \"Rejected\",\n *                 \"Reply\",\n *                 \"Received\",\n *                 \"Receive Error\",\n *                 \"Fax on Demand\",\n *                 \"Partial Receive\",\n *                 \"Blocked\",\n *                 \"Call сonnected\",\n *                 \"No Answer\",\n *                 \"Busy\",\n *                 \"Send Error\",\n *                 \"Sent\",\n *                 \"No fax machine\",\n *                 \"ResultEmpty\",\n *                 \"Account\",\n *                 \"Suspended\",\n *                 \"Call Failed\",\n *                 \"Call Failure\",\n *                 \"Internal Error\",\n *                 \"IP Phone offline\",\n *                 \"Restricted Number\",\n *                 \"Wrong Number\",\n *                 \"Stopped\",\n *                 \"Hang up\",\n *                 \"Poor Line Quality\",\n *                 \"Partially Sent\",\n *                 \"International Disabled\",\n *                 \"International Restriction\",\n *                 \"Abandoned\",\n *                 \"Declined\",\n *                 \"Fax Receipt Error\",\n *                 \"Fax Send Error\"\n *             ],\n *             \"description\": \"Status description of the call operation.\",\n *             \"$name\": \"result\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"Date\",\n *             \"description\": \"Call start time\",\n *             \"$name\": \"startTime\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Call duration in seconds\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordTransport\",\n *             \"enum\": [\n *                 \"PSTN\",\n *                 \"VoIP\"\n *             ],\n *             \"description\": \"Call transport\",\n *             \"$name\": \"transport\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"any\",\n *             \"description\": \"Message attachment\",\n *             \"$name\": \"message\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RecordingInfo\",\n *             \"description\": \"Call recording data. Returned if the call is recorded\",\n *             \"$name\": \"recording\",\n *             \"isRequired\": false,\n *             \"type\": \"recordinginfo.RecordingInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordBilling\",\n *             \"enum\": [\n *                 \"costIncluded\",\n *                 \"costPurchased\"\n *             ],\n *             \"description\": \"Information on costs\",\n *             \"$name\": \"billing\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"calllogrecordleginfo.CallLogRecordLegInfo[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/CallLogRecordLegInfo\"\n *             },\n *             \"$name\": \"legs\",\n *             \"isRequired\": true\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar CallLogCallerInfo = (function (_super) {\n    __extends(CallLogCallerInfo, _super);\n    function CallLogCallerInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'phoneNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'extensionNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'location', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return CallLogCallerInfo;\n})(model.Model);\nexports.CallLogCallerInfo = CallLogCallerInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CallLogCallerInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS\",\n *             \"$name\": \"phoneNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message\",\n *             \"$name\": \"extensionNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)\",\n *             \"$name\": \"location\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar RecordingInfo = (function (_super) {\n    __extends(RecordingInfo, _super);\n    function RecordingInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'type', Class: RecordingInfoType, isArray: false, isRequired: false },\n            { property: 'contentUri', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return RecordingInfo;\n})(model.Model);\nexports.RecordingInfo = RecordingInfo;\n(function (RecordingInfoType) {\n    RecordingInfoType[RecordingInfoType[\"Automatic\"] = 'Automatic'] = \"Automatic\";\n    RecordingInfoType[RecordingInfoType[\"OnDemand\"] = 'OnDemand'] = \"OnDemand\";\n})(exports.RecordingInfoType || (exports.RecordingInfoType = {}));\nvar RecordingInfoType = exports.RecordingInfoType;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"RecordingInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Internal identifier of the call recording\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Link to the call recording metadata resource\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"RecordingInfoType\",\n *             \"enum\": [\n *                 \"Automatic\",\n *                 \"OnDemand\"\n *             ],\n *             \"description\": \"Indicates recording mode used\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Link to the call recording binary content\",\n *             \"$name\": \"contentUri\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar calllogcallerinfo = __webpack_require__(67);\nvar recordinginfo = __webpack_require__(68);\nvar CallLogRecordLegInfo = (function (_super) {\n    __extends(CallLogRecordLegInfo, _super);\n    function CallLogRecordLegInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'startTime', Class: Date, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'type', Class: CallLogRecordLegInfoType, isArray: false, isRequired: false },\n            { property: 'direction', Class: CallLogRecordLegInfoDirection, isArray: false, isRequired: false },\n            { property: 'action', Class: CallLogRecordLegInfoAction, isArray: false, isRequired: false },\n            { property: 'result', Class: CallLogRecordLegInfoResult, isArray: false, isRequired: false },\n            { property: 'from', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'to', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'transport', Class: CallLogRecordLegInfoTransport, isArray: false, isRequired: false },\n            { property: 'message', Class: null /* any */, isArray: false, isRequired: false },\n            { property: 'recording', Class: recordinginfo.RecordingInfo, isArray: false, isRequired: false },\n            { property: 'billing', Class: CallLogRecordLegInfoBilling, isArray: false, isRequired: false },\n            { property: 'legType', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return CallLogRecordLegInfo;\n})(model.Model);\nexports.CallLogRecordLegInfo = CallLogRecordLegInfo;\n(function (CallLogRecordLegInfoType) {\n    CallLogRecordLegInfoType[CallLogRecordLegInfoType[\"Voice\"] = 'Voice'] = \"Voice\";\n    CallLogRecordLegInfoType[CallLogRecordLegInfoType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.CallLogRecordLegInfoType || (exports.CallLogRecordLegInfoType = {}));\nvar CallLogRecordLegInfoType = exports.CallLogRecordLegInfoType;\n(function (CallLogRecordLegInfoDirection) {\n    CallLogRecordLegInfoDirection[CallLogRecordLegInfoDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    CallLogRecordLegInfoDirection[CallLogRecordLegInfoDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.CallLogRecordLegInfoDirection || (exports.CallLogRecordLegInfoDirection = {}));\nvar CallLogRecordLegInfoDirection = exports.CallLogRecordLegInfoDirection;\n(function (CallLogRecordLegInfoAction) {\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"PhoneCall\"] = 'Phone Call'] = \"PhoneCall\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"PhoneLogin\"] = 'Phone Login'] = \"PhoneLogin\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"IncomingFax\"] = 'Incoming Fax'] = \"IncomingFax\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"AcceptCall\"] = 'Accept Call'] = \"AcceptCall\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"FindMe\"] = 'FindMe'] = \"FindMe\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"FollowMe\"] = 'FollowMe'] = \"FollowMe\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"OutgoingFax\"] = 'Outgoing Fax'] = \"OutgoingFax\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"CallReturn\"] = 'Call Return'] = \"CallReturn\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"CallingCard\"] = 'Calling Card'] = \"CallingCard\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingDirectly\"] = 'Ring Directly'] = \"RingDirectly\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingOutWeb\"] = 'RingOut Web'] = \"RingOutWeb\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"VoIPCall\"] = 'VoIP Call'] = \"VoIPCall\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingOutPC\"] = 'RingOut PC'] = \"RingOutPC\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingMe\"] = 'RingMe'] = \"RingMe\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Transfer\"] = 'Transfer'] = \"Transfer\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction['411Info'] = '411 Info'] = '411Info';\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Emergency\"] = 'Emergency'] = \"Emergency\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction['E911Update'] = 'E911 Update'] = 'E911Update';\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Support\"] = 'Support'] = \"Support\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingOutMobile\"] = 'RingOut Mobile'] = \"RingOutMobile\";\n})(exports.CallLogRecordLegInfoAction || (exports.CallLogRecordLegInfoAction = {}));\nvar CallLogRecordLegInfoAction = exports.CallLogRecordLegInfoAction;\n(function (CallLogRecordLegInfoResult) {\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"ResultInProgress\"] = 'ResultInProgress'] = \"ResultInProgress\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Missed\"] = 'Missed'] = \"Missed\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Callaccepted\"] = 'Call accepted'] = \"Callaccepted\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Rejected\"] = 'Rejected'] = \"Rejected\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Reply\"] = 'Reply'] = \"Reply\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Received\"] = 'Received'] = \"Received\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"ReceiveError\"] = 'Receive Error'] = \"ReceiveError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"FaxonDemand\"] = 'Fax on Demand'] = \"FaxonDemand\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"PartialReceive\"] = 'Partial Receive'] = \"PartialReceive\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Blocked\"] = 'Blocked'] = \"Blocked\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult['Callсonnected'] = 'Call сonnected'] = 'Callсonnected';\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"NoAnswer\"] = 'No Answer'] = \"NoAnswer\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Busy\"] = 'Busy'] = \"Busy\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"SendError\"] = 'Send Error'] = \"SendError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Sent\"] = 'Sent'] = \"Sent\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Nofaxmachine\"] = 'No fax machine'] = \"Nofaxmachine\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"ResultEmpty\"] = 'ResultEmpty'] = \"ResultEmpty\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Account\"] = 'Account'] = \"Account\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"CallFailed\"] = 'Call Failed'] = \"CallFailed\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"CallFailure\"] = 'Call Failure'] = \"CallFailure\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"InternalError\"] = 'Internal Error'] = \"InternalError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"IPPhoneoffline\"] = 'IP Phone offline'] = \"IPPhoneoffline\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"RestrictedNumber\"] = 'Restricted Number'] = \"RestrictedNumber\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"WrongNumber\"] = 'Wrong Number'] = \"WrongNumber\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Stopped\"] = 'Stopped'] = \"Stopped\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Hangup\"] = 'Hang up'] = \"Hangup\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"PoorLineQuality\"] = 'Poor Line Quality'] = \"PoorLineQuality\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"PartiallySent\"] = 'Partially Sent'] = \"PartiallySent\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"InternationalDisabled\"] = 'International Disabled'] = \"InternationalDisabled\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"InternationalRestriction\"] = 'International Restriction'] = \"InternationalRestriction\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Abandoned\"] = 'Abandoned'] = \"Abandoned\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Declined\"] = 'Declined'] = \"Declined\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"FaxReceiptError\"] = 'Fax Receipt Error'] = \"FaxReceiptError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"FaxSendError\"] = 'Fax Send Error'] = \"FaxSendError\";\n})(exports.CallLogRecordLegInfoResult || (exports.CallLogRecordLegInfoResult = {}));\nvar CallLogRecordLegInfoResult = exports.CallLogRecordLegInfoResult;\n(function (CallLogRecordLegInfoTransport) {\n    CallLogRecordLegInfoTransport[CallLogRecordLegInfoTransport[\"PSTN\"] = 'PSTN'] = \"PSTN\";\n    CallLogRecordLegInfoTransport[CallLogRecordLegInfoTransport[\"VoIP\"] = 'VoIP'] = \"VoIP\";\n})(exports.CallLogRecordLegInfoTransport || (exports.CallLogRecordLegInfoTransport = {}));\nvar CallLogRecordLegInfoTransport = exports.CallLogRecordLegInfoTransport;\n(function (CallLogRecordLegInfoBilling) {\n    CallLogRecordLegInfoBilling[CallLogRecordLegInfoBilling[\"costIncluded\"] = 'costIncluded'] = \"costIncluded\";\n    CallLogRecordLegInfoBilling[CallLogRecordLegInfoBilling[\"costPurchased\"] = 'costPurchased'] = \"costPurchased\";\n})(exports.CallLogRecordLegInfoBilling || (exports.CallLogRecordLegInfoBilling = {}));\nvar CallLogRecordLegInfoBilling = exports.CallLogRecordLegInfoBilling;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CallLogRecordLegInfo\",\n *     \"imports\": [\n *         \"calllogcallerinfo.CallLogCallerInfo\",\n *         \"recordinginfo.RecordingInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"Date\",\n *             \"description\": \"Call start time\",\n *             \"$name\": \"startTime\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Call duration in seconds\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoType\",\n *             \"enum\": [\n *                 \"Voice\",\n *                 \"Fax\"\n *             ],\n *             \"description\": \"Call type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoDirection\",\n *             \"enum\": [\n *                 \"Inbound\",\n *                 \"Outbound\"\n *             ],\n *             \"description\": \"Call direction\",\n *             \"$name\": \"direction\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoAction\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"Phone Call\",\n *                 \"Phone Login\",\n *                 \"Incoming Fax\",\n *                 \"Accept Call\",\n *                 \"FindMe\",\n *                 \"FollowMe\",\n *                 \"Outgoing Fax\",\n *                 \"Call Return\",\n *                 \"Calling Card\",\n *                 \"Ring Directly\",\n *                 \"RingOut Web\",\n *                 \"VoIP Call\",\n *                 \"RingOut PC\",\n *                 \"RingMe\",\n *                 \"Transfer\",\n *                 \"411 Info\",\n *                 \"Emergency\",\n *                 \"E911 Update\",\n *                 \"Support\",\n *                 \"RingOut Mobile\"\n *             ],\n *             \"description\": \"Action description of the call operation.\",\n *             \"$name\": \"action\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoResult\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"ResultInProgress\",\n *                 \"Missed\",\n *                 \"Call accepted\",\n *                 \"Voicemail\",\n *                 \"Rejected\",\n *                 \"Reply\",\n *                 \"Received\",\n *                 \"Receive Error\",\n *                 \"Fax on Demand\",\n *                 \"Partial Receive\",\n *                 \"Blocked\",\n *                 \"Call сonnected\",\n *                 \"No Answer\",\n *                 \"Busy\",\n *                 \"Send Error\",\n *                 \"Sent\",\n *                 \"No fax machine\",\n *                 \"ResultEmpty\",\n *                 \"Account\",\n *                 \"Suspended\",\n *                 \"Call Failed\",\n *                 \"Call Failure\",\n *                 \"Internal Error\",\n *                 \"IP Phone offline\",\n *                 \"Restricted Number\",\n *                 \"Wrong Number\",\n *                 \"Stopped\",\n *                 \"Hang up\",\n *                 \"Poor Line Quality\",\n *                 \"Partially Sent\",\n *                 \"International Disabled\",\n *                 \"International Restriction\",\n *                 \"Abandoned\",\n *                 \"Declined\",\n *                 \"Fax Receipt Error\",\n *                 \"Fax Send Error\"\n *             ],\n *             \"description\": \"Status description of the call operation.\",\n *             \"$name\": \"result\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Caller information\",\n *             \"$name\": \"from\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Callee information\",\n *             \"$name\": \"to\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoTransport\",\n *             \"enum\": [\n *                 \"PSTN\",\n *                 \"VoIP\"\n *             ],\n *             \"description\": \"Call transport\",\n *             \"$name\": \"transport\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"any\",\n *             \"description\": \"Message attachment\",\n *             \"$name\": \"message\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RecordingInfo\",\n *             \"description\": \"Call recording data. Returned if the call is recorded\",\n *             \"$name\": \"recording\",\n *             \"isRequired\": false,\n *             \"type\": \"recordinginfo.RecordingInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoBilling\",\n *             \"enum\": [\n *                 \"costIncluded\",\n *                 \"costPurchased\"\n *             ],\n *             \"description\": \"Information on costs\",\n *             \"$name\": \"billing\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Leg type\",\n *             \"$name\": \"legType\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar PagingInfo = (function (_super) {\n    __extends(PagingInfo, _super);\n    function PagingInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'page', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'perPage', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'pageStart', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'pageEnd', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'totalPages', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'totalElements', Class: null /* number */, isArray: false, isRequired: false }\n        ];\n    }\n    return PagingInfo;\n})(model.Model);\nexports.PagingInfo = PagingInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"PagingInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)\",\n *             \"$name\": \"page\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied\",\n *             \"$name\": \"perPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty\",\n *             \"$name\": \"pageStart\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty\",\n *             \"$name\": \"pageEnd\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The total number of pages in a dataset. May be omitted for some resources due to performance reasons\",\n *             \"$name\": \"totalPages\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The total number of elements in a dataset. May be omitted for some resource due to performance reasons\",\n *             \"$name\": \"totalElements\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar navigationinfopage = __webpack_require__(72);\nvar NavigationInfo = (function (_super) {\n    __extends(NavigationInfo, _super);\n    function NavigationInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'firstPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false },\n            { property: 'nextPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false },\n            { property: 'previousPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false },\n            { property: 'lastPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false }\n        ];\n    }\n    return NavigationInfo;\n})(model.Model);\nexports.NavigationInfo = NavigationInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"NavigationInfo\",\n *     \"imports\": [\n *         \"navigationinfopage.NavigationInfoPage\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the first page of the list\",\n *             \"$name\": \"firstPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the next page of the list\",\n *             \"$name\": \"nextPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the previous page of the list\",\n *             \"$name\": \"previousPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the last page of the list\",\n *             \"$name\": \"lastPage\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar NavigationInfoPage = (function (_super) {\n    __extends(NavigationInfoPage, _super);\n    function NavigationInfoPage(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return NavigationInfoPage;\n})(model.Model);\nexports.NavigationInfoPage = NavigationInfoPage;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"NavigationInfoPage\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar calllogrecord = __webpack_require__(66);\nvar paginginfo = __webpack_require__(70);\nvar navigationinfo = __webpack_require__(71);\nvar AccountActiveCallsResponse = (function (_super) {\n    __extends(AccountActiveCallsResponse, _super);\n    function AccountActiveCallsResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'records', Class: calllogrecord.CallLogRecord, isArray: true, isRequired: true },\n            { property: 'paging', Class: paginginfo.PagingInfo, isArray: false, isRequired: true },\n            { property: 'navigation', Class: navigationinfo.NavigationInfo, isArray: false, isRequired: true }\n        ];\n    }\n    return AccountActiveCallsResponse;\n})(model.Model);\nexports.AccountActiveCallsResponse = AccountActiveCallsResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"AccountActiveCallsResponse\",\n *     \"imports\": [\n *         \"calllogrecord.CallLogRecord\",\n *         \"paginginfo.PagingInfo\",\n *         \"navigationinfo.NavigationInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"calllogrecord.CallLogRecord[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/CallLogRecord\"\n *             },\n *             \"$name\": \"records\",\n *             \"isRequired\": true\n *         },\n *         {\n *             \"$ref\": \"#/definitions/PagingInfo\",\n *             \"description\": \"Information on paging\",\n *             \"$name\": \"paging\",\n *             \"isRequired\": true,\n *             \"type\": \"paginginfo.PagingInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/NavigationInfo\",\n *             \"description\": \"Information on navigation\",\n *             \"$name\": \"navigation\",\n *             \"isRequired\": true,\n *             \"type\": \"navigationinfo.NavigationInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar navigationinfo = __webpack_require__(71);\nvar ExtensionActiveCallsResponse = (function (_super) {\n    __extends(ExtensionActiveCallsResponse, _super);\n    function ExtensionActiveCallsResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'perPage', Class: navigationinfo.NavigationInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionActiveCallsResponse;\n})(model.Model);\nexports.ExtensionActiveCallsResponse = ExtensionActiveCallsResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionActiveCallsResponse\",\n *     \"imports\": [\n *         \"navigationinfo.NavigationInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"$ref\": \"#/definitions/NavigationInfo\",\n *             \"description\": \"Standard collection metadata\",\n *             \"$name\": \"perPage\",\n *             \"isRequired\": false,\n *             \"type\": \"navigationinfo.NavigationInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar calllogcallerinfo = __webpack_require__(67);\nvar recordinginfo = __webpack_require__(68);\nvar GetExtensionCallLogRecordResponse = (function (_super) {\n    __extends(GetExtensionCallLogRecordResponse, _super);\n    function GetExtensionCallLogRecordResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'sessionId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'from', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'to', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'type', Class: GetExtensionCallLogRecordResponseType, isArray: false, isRequired: false },\n            { property: 'direction', Class: GetExtensionCallLogRecordResponseDirection, isArray: false, isRequired: false },\n            { property: 'action', Class: GetExtensionCallLogRecordResponseAction, isArray: false, isRequired: false },\n            { property: 'result', Class: GetExtensionCallLogRecordResponseResult, isArray: false, isRequired: false },\n            { property: 'startTime', Class: Date, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'recording', Class: recordinginfo.RecordingInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return GetExtensionCallLogRecordResponse;\n})(model.Model);\nexports.GetExtensionCallLogRecordResponse = GetExtensionCallLogRecordResponse;\n(function (GetExtensionCallLogRecordResponseType) {\n    GetExtensionCallLogRecordResponseType[GetExtensionCallLogRecordResponseType[\"Voice\"] = 'Voice'] = \"Voice\";\n    GetExtensionCallLogRecordResponseType[GetExtensionCallLogRecordResponseType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.GetExtensionCallLogRecordResponseType || (exports.GetExtensionCallLogRecordResponseType = {}));\nvar GetExtensionCallLogRecordResponseType = exports.GetExtensionCallLogRecordResponseType;\n(function (GetExtensionCallLogRecordResponseDirection) {\n    GetExtensionCallLogRecordResponseDirection[GetExtensionCallLogRecordResponseDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    GetExtensionCallLogRecordResponseDirection[GetExtensionCallLogRecordResponseDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.GetExtensionCallLogRecordResponseDirection || (exports.GetExtensionCallLogRecordResponseDirection = {}));\nvar GetExtensionCallLogRecordResponseDirection = exports.GetExtensionCallLogRecordResponseDirection;\n(function (GetExtensionCallLogRecordResponseAction) {\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"PhoneCall\"] = 'Phone Call'] = \"PhoneCall\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"PhoneLogin\"] = 'Phone Login'] = \"PhoneLogin\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"IncomingFax\"] = 'Incoming Fax'] = \"IncomingFax\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"AcceptCall\"] = 'Accept Call'] = \"AcceptCall\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"FindMe\"] = 'FindMe'] = \"FindMe\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"FollowMe\"] = 'FollowMe'] = \"FollowMe\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"OutgoingFax\"] = 'Outgoing Fax'] = \"OutgoingFax\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"CallReturn\"] = 'Call Return'] = \"CallReturn\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"CallingCard\"] = 'Calling Card'] = \"CallingCard\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingDirectly\"] = 'Ring Directly'] = \"RingDirectly\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingOutWeb\"] = 'RingOut Web'] = \"RingOutWeb\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"VoIPCall\"] = 'VoIP Call'] = \"VoIPCall\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingOutPC\"] = 'RingOut PC'] = \"RingOutPC\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingMe\"] = 'RingMe'] = \"RingMe\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Transfer\"] = 'Transfer'] = \"Transfer\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction['411Info'] = '411 Info'] = '411Info';\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Emergency\"] = 'Emergency'] = \"Emergency\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction['E911Update'] = 'E911 Update'] = 'E911Update';\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Support\"] = 'Support'] = \"Support\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingOutMobile\"] = 'RingOut Mobile'] = \"RingOutMobile\";\n})(exports.GetExtensionCallLogRecordResponseAction || (exports.GetExtensionCallLogRecordResponseAction = {}));\nvar GetExtensionCallLogRecordResponseAction = exports.GetExtensionCallLogRecordResponseAction;\n(function (GetExtensionCallLogRecordResponseResult) {\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"ResultInProgress\"] = 'ResultInProgress'] = \"ResultInProgress\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Missed\"] = 'Missed'] = \"Missed\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Callaccepted\"] = 'Call accepted'] = \"Callaccepted\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Rejected\"] = 'Rejected'] = \"Rejected\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Reply\"] = 'Reply'] = \"Reply\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Received\"] = 'Received'] = \"Received\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"ReceiveError\"] = 'Receive Error'] = \"ReceiveError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"FaxonDemand\"] = 'Fax on Demand'] = \"FaxonDemand\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"PartialReceive\"] = 'Partial Receive'] = \"PartialReceive\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Blocked\"] = 'Blocked'] = \"Blocked\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult['Callсonnected'] = 'Call сonnected'] = 'Callсonnected';\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"NoAnswer\"] = 'No Answer'] = \"NoAnswer\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Busy\"] = 'Busy'] = \"Busy\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"SendError\"] = 'Send Error'] = \"SendError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Sent\"] = 'Sent'] = \"Sent\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Nofaxmachine\"] = 'No fax machine'] = \"Nofaxmachine\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"ResultEmpty\"] = 'ResultEmpty'] = \"ResultEmpty\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Account\"] = 'Account'] = \"Account\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"CallFailed\"] = 'Call Failed'] = \"CallFailed\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"CallFailure\"] = 'Call Failure'] = \"CallFailure\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"InternalError\"] = 'Internal Error'] = \"InternalError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"IPPhoneoffline\"] = 'IP Phone offline'] = \"IPPhoneoffline\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"RestrictedNumber\"] = 'Restricted Number'] = \"RestrictedNumber\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"WrongNumber\"] = 'Wrong Number'] = \"WrongNumber\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Stopped\"] = 'Stopped'] = \"Stopped\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Hangup\"] = 'Hang up'] = \"Hangup\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"PoorLineQuality\"] = 'Poor Line Quality'] = \"PoorLineQuality\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"PartiallySent\"] = 'Partially Sent'] = \"PartiallySent\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"InternationalDisabled\"] = 'International Disabled'] = \"InternationalDisabled\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"InternationalRestriction\"] = 'International Restriction'] = \"InternationalRestriction\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Abandoned\"] = 'Abandoned'] = \"Abandoned\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Declined\"] = 'Declined'] = \"Declined\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"FaxReceiptError\"] = 'Fax Receipt Error'] = \"FaxReceiptError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"FaxSendError\"] = 'Fax Send Error'] = \"FaxSendError\";\n})(exports.GetExtensionCallLogRecordResponseResult || (exports.GetExtensionCallLogRecordResponseResult = {}));\nvar GetExtensionCallLogRecordResponseResult = exports.GetExtensionCallLogRecordResponseResult;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetExtensionCallLogRecordResponse\",\n *     \"imports\": [\n *         \"calllogcallerinfo.CallLogCallerInfo\",\n *         \"recordinginfo.RecordingInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a cal log record\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a call log record\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a call session\",\n *             \"$name\": \"sessionId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Caller information\",\n *             \"$name\": \"from\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Callee information\",\n *             \"$name\": \"to\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseType\",\n *             \"enum\": [\n *                 \"Voice\",\n *                 \"Fax\"\n *             ],\n *             \"description\": \"Call type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseDirection\",\n *             \"enum\": [\n *                 \"Inbound\",\n *                 \"Outbound\"\n *             ],\n *             \"description\": \"Call direction\",\n *             \"$name\": \"direction\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseAction\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"Phone Call\",\n *                 \"Phone Login\",\n *                 \"Incoming Fax\",\n *                 \"Accept Call\",\n *                 \"FindMe\",\n *                 \"FollowMe\",\n *                 \"Outgoing Fax\",\n *                 \"Call Return\",\n *                 \"Calling Card\",\n *                 \"Ring Directly\",\n *                 \"RingOut Web\",\n *                 \"VoIP Call\",\n *                 \"RingOut PC\",\n *                 \"RingMe\",\n *                 \"Transfer\",\n *                 \"411 Info\",\n *                 \"Emergency\",\n *                 \"E911 Update\",\n *                 \"Support\",\n *                 \"RingOut Mobile\"\n *             ],\n *             \"description\": \"Action description of the call operation.\",\n *             \"$name\": \"action\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseResult\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"ResultInProgress\",\n *                 \"Missed\",\n *                 \"Call accepted\",\n *                 \"Voicemail\",\n *                 \"Rejected\",\n *                 \"Reply\",\n *                 \"Received\",\n *                 \"Receive Error\",\n *                 \"Fax on Demand\",\n *                 \"Partial Receive\",\n *                 \"Blocked\",\n *                 \"Call сonnected\",\n *                 \"No Answer\",\n *                 \"Busy\",\n *                 \"Send Error\",\n *                 \"Sent\",\n *                 \"No fax machine\",\n *                 \"ResultEmpty\",\n *                 \"Account\",\n *                 \"Suspended\",\n *                 \"Call Failed\",\n *                 \"Call Failure\",\n *                 \"Internal Error\",\n *                 \"IP Phone offline\",\n *                 \"Restricted Number\",\n *                 \"Wrong Number\",\n *                 \"Stopped\",\n *                 \"Hang up\",\n *                 \"Poor Line Quality\",\n *                 \"Partially Sent\",\n *                 \"International Disabled\",\n *                 \"International Restriction\",\n *                 \"Abandoned\",\n *                 \"Declined\",\n *                 \"Fax Receipt Error\",\n *                 \"Fax Send Error\"\n *             ],\n *             \"description\": \"Status description of the call operation.\",\n *             \"$name\": \"result\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"Date\",\n *             \"description\": \"Call start time\",\n *             \"$name\": \"startTime\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Call duration in seconds\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RecordingInfo\",\n *             \"description\": \"Call recording data. Returned if the call is recorded\",\n *             \"$name\": \"recording\",\n *             \"isRequired\": false,\n *             \"type\": \"recordinginfo.RecordingInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = __webpack_require__(43);\nvar GetCallRecordingResponse = (function (_super) {\n    __extends(GetCallRecordingResponse, _super);\n    function GetCallRecordingResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'contentUri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'contentType', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false }\n        ];\n    }\n    return GetCallRecordingResponse;\n})(model.Model);\nexports.GetCallRecordingResponse = GetCallRecordingResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetCallRecordingResponse\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Internal identifier of the call recording\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Link to the call recording binary content\",\n *             \"$name\": \"contentUri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Call recording file format. Supported format is audio/x-wav\",\n *             \"$name\": \"contentType\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Recorded call duration\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate) {(function(global){\n\n//\n// Check for native Promise and it has correct interface\n//\n\nvar NativePromise = global['Promise'];\nvar nativePromiseSupported =\n  NativePromise &&\n  // Some of these methods are missing from\n  // Firefox/Chrome experimental implementations\n  'resolve' in NativePromise &&\n  'reject' in NativePromise &&\n  'all' in NativePromise &&\n  'race' in NativePromise &&\n  // Older version of the spec had a resolver object\n  // as the arg rather than a function\n  (function(){\n    var resolve;\n    new NativePromise(function(r){ resolve = r; });\n    return typeof resolve === 'function';\n  })();\n\n\n//\n// export if necessary\n//\n\nif (typeof exports !== 'undefined' && exports)\n{\n  // node.js\n  exports.Promise = Promise || NativePromise;\n}\nelse\n{\n  // in browser add to global\n  if (!nativePromiseSupported)\n    global['Promise'] = Promise;\n}\n\n\n//\n// Polyfill\n//\n\nvar PENDING = 'pending';\nvar SEALED = 'sealed';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function(){};\n\n// async calls\nvar asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush(){\n  // run promise callbacks\n  for (var i = 0; i < asyncQueue.length; i++)\n    asyncQueue[i][0](asyncQueue[i][1]);\n\n  // reset async asyncQueue\n  asyncQueue = [];\n  asyncTimer = false;\n}\n\nfunction asyncCall(callback, arg){\n  asyncQueue.push([callback, arg]);\n\n  if (!asyncTimer)\n  {\n    asyncTimer = true;\n    asyncSetTimer(asyncFlush, 0);\n  }\n}\n\n\nfunction invokeResolver(resolver, promise) {\n  function resolvePromise(value) {\n    resolve(promise, value);\n  }\n\n  function rejectPromise(reason) {\n    reject(promise, reason);\n  }\n\n  try {\n    resolver(resolvePromise, rejectPromise);\n  } catch(e) {\n    rejectPromise(e);\n  }\n}\n\nfunction invokeCallback(subscriber){\n  var owner = subscriber.owner;\n  var settled = owner.state_;\n  var value = owner.data_;  \n  var callback = subscriber[settled];\n  var promise = subscriber.then;\n\n  if (typeof callback === 'function')\n  {\n    settled = FULFILLED;\n    try {\n      value = callback(value);\n    } catch(e) {\n      reject(promise, e);\n    }\n  }\n\n  if (!handleThenable(promise, value))\n  {\n    if (settled === FULFILLED)\n      resolve(promise, value);\n\n    if (settled === REJECTED)\n      reject(promise, value);\n  }\n}\n\nfunction handleThenable(promise, value) {\n  var resolved;\n\n  try {\n    if (promise === value)\n      throw new TypeError('A promises callback cannot return that same promise.');\n\n    if (value && (typeof value === 'function' || typeof value === 'object'))\n    {\n      var then = value.then;  // then should be retrived only once\n\n      if (typeof then === 'function')\n      {\n        then.call(value, function(val){\n          if (!resolved)\n          {\n            resolved = true;\n\n            if (value !== val)\n              resolve(promise, val);\n            else\n              fulfill(promise, val);\n          }\n        }, function(reason){\n          if (!resolved)\n          {\n            resolved = true;\n\n            reject(promise, reason);\n          }\n        });\n\n        return true;\n      }\n    }\n  } catch (e) {\n    if (!resolved)\n      reject(promise, e);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolve(promise, value){\n  if (promise === value || !handleThenable(promise, value))\n    fulfill(promise, value);\n}\n\nfunction fulfill(promise, value){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = value;\n\n    asyncCall(publishFulfillment, promise);\n  }\n}\n\nfunction reject(promise, reason){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = reason;\n\n    asyncCall(publishRejection, promise);\n  }\n}\n\nfunction publish(promise) {\n  promise.then_ = promise.then_.forEach(invokeCallback);\n}\n\nfunction publishFulfillment(promise){\n  promise.state_ = FULFILLED;\n  publish(promise);\n}\n\nfunction publishRejection(promise){\n  promise.state_ = REJECTED;\n  publish(promise);\n}\n\n/**\n* @class\n*/\nfunction Promise(resolver){\n  if (typeof resolver !== 'function')\n    throw new TypeError('Promise constructor takes a function argument');\n\n  if (this instanceof Promise === false)\n    throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\n  this.then_ = [];\n\n  invokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n  constructor: Promise,\n\n  state_: PENDING,\n  then_: null,\n  data_: undefined,\n\n  then: function(onFulfillment, onRejection){\n    var subscriber = {\n      owner: this,\n      then: new this.constructor(NOOP),\n      fulfilled: onFulfillment,\n      rejected: onRejection\n    };\n\n    if (this.state_ === FULFILLED || this.state_ === REJECTED)\n    {\n      // already resolved, call callback async\n      asyncCall(invokeCallback, subscriber);\n    }\n    else\n    {\n      // subscribe\n      this.then_.push(subscriber);\n    }\n\n    return subscriber.then;\n  },\n\n  'catch': function(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nPromise.all = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.all().');\n\n  return new Class(function(resolve, reject){\n    var results = [];\n    var remaining = 0;\n\n    function resolver(index){\n      remaining++;\n      return function(value){\n        results[index] = value;\n        if (!--remaining)\n          resolve(results);\n      };\n    }\n\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolver(i), reject);\n      else\n        results[i] = promise;\n    }\n\n    if (!remaining)\n      resolve(results);\n  });\n};\n\nPromise.race = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.race().');\n\n  return new Class(function(resolve, reject) {\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolve, reject);\n      else\n        resolve(promise);\n    }\n  });\n};\n\nPromise.resolve = function(value){\n  var Class = this;\n\n  if (value && typeof value === 'object' && value.constructor === Class)\n    return value;\n\n  return new Class(function(resolve){\n    resolve(value);\n  });\n};\n\nPromise.reject = function(reason){\n  var Class = this;\n\n  return new Class(function(resolve, reject){\n    reject(reason);\n  });\n};\n\n})(new Function('return this')());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(78).setImmediate))\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(79).nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(78).setImmediate, __webpack_require__(78).clearImmediate))\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// Version: 3.7.11\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.11'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']   || 'demo'\n    ,   SUBSCRIBE_KEY = setup['subscribe_key'] || 'demo'\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID     = ''\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ]\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n                ]\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        var new_message = decrypt(messages[a],cipher_key);\n                        try {\n                            decrypted_messages['push'](JSON['parse'](new_message));\n                        } catch (e) {\n                            decrypted_messages['push']((new_message));\n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            //SUB_RESTORE = 1;    REVISIT !!!!\n\n            if (channel) {\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each( channel.split(','), function(ch) {\n                    var CB_CALLED = true;\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE']( ch, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                    \n                } );\n            }\n\n            if (channel_group) {\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    var CB_CALLED = true;\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE_GROUP']( chg, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                } );\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, SECOND );\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\n\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.11'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(81)(module)))\n\n/***/ },\n/* 81 */\n/***/ function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_82__;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_83__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_83__;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk-bundle.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 25b1cbe2aa878c280d0d\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = require('./core/pubnub/PubnubMock');\nvar xhrMock = require('./core/xhr/XhrMock');\nvar xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar accountClient = require('./client/clients/Account');\nvar callLogClient = require('./client/clients/CallLog');\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    // Client\n    RCSDK.prototype.getAccount = function () { return accountClient.$get(this.getContext()); };\n    RCSDK.prototype.getCallLog = function () { return callLogClient.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (require('xhr' + '2'))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/RCSDK.ts\n ** module id = 0\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Country.ts\n ** module id = 1\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Helper.ts\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Utils.ts\n ** module id = 3\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('../Observable');\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/pubnub/PubnubMock.ts\n ** module id = 4\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Observable.ts\n ** module id = 5\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Log.ts\n ** module id = 6\n ** module chunks = 0\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse'); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrMock.ts\n ** module id = 7\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrResponse.ts\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/AjaxObserver.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Cache.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Context.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/List.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/PageVisibility.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Platform.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Request.ts\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Headers.ts\n ** module id = 16\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Response.ts\n ** module id = 17\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar platform = require('./Platform');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Subscription.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Validator.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Account.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/BlockedNumber.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Call.ts\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Presence.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Extension.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Contact.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ContactGroup.ts\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Conferencing.ts\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Device.ts\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/DeviceModel.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ForwardingNumber.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Language.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Location.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/State.ts\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Message.ts\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/PhoneNumber.ts\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Ringout.ts\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Service.ts\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ShippingMethod.ts\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Timezone.ts\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar client = require('../Client');\nvar getaccountinforesponse = require('../models/GetAccountInfoResponse');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.accountPost = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account',\n            'method': 'post'\n        }, ResponseClass = getaccountinforesponse.GetAccountInfoResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"body\",\n                \"type\": \"createaccountrequest.CreateAccountRequest\",\n                \"in\": \"body\",\n                \"description\": \"JSON body\",\n                \"required\": true\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    Account.prototype.account = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}',\n            'method': 'get'\n        }, ResponseClass = getaccountinforesponse.GetAccountInfoResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    return Account;\n})(client.Client);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * [\n *     {\n *         \"operationId\": \"accountPost\",\n *         \"tags\": [\n *             \"Account\"\n *         ],\n *         \"summary\": \"Create Account\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.10 (Release 6.2)</p><p>Creates the account in Initial state.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>Accounts</td><td>Managing accounts: creating new accounts, viewing and updating account information, deleting existing accounts</td></tr><tr><td class='code'>EditAccounts</td><td>Viewing and updating user account info (including name, business name, address and phone number/account number)</td></tr><tr><td class='code'>ReadAccounts</td><td>Viewing user account info (including name, business name, address and phone number/account number)</td></tr><tr><td class='code'>EditExtensions</td><td>Viewing and updating user extension info (includes extension name, number, email and phone number, assigned phone numbers, devices and other extension settings)</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Medium</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"body\",\n *                 \"type\": \"createaccountrequest.CreateAccountRequest\",\n *                 \"in\": \"body\",\n *                 \"description\": \"JSON body\",\n *                 \"required\": true\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetAccountInfoResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account\",\n *         \"method\": \"post\",\n *         \"responseSchema\": \"getaccountinforesponse.GetAccountInfoResponse\",\n *         \"imports\": [\n *             \"getaccountinforesponse.GetAccountInfoResponse\",\n *             \"createaccountrequest.CreateAccountRequest\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"account\",\n *         \"tags\": [\n *             \"Account\"\n *         ],\n *         \"summary\": \"Get Account Info\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.0</p><p>Returns basic information about a particular RingCentral customer account.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadAccounts</td><td>Viewing user account info (including name, business name, address and phone number/account number)</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Light</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetAccountInfoResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"getaccountinforesponse.GetAccountInfoResponse\",\n *         \"imports\": [\n *             \"getaccountinforesponse.GetAccountInfoResponse\"\n *         ]\n *     }\n * ]\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/clients/Account.ts\n ** module id = 40\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar platform = require('../core/Platform');\nvar Client = (function () {\n    function Client(context) {\n        this.context = context;\n        this.platform = platform.$get(context);\n    }\n    Client.prototype.parseOptions = function (apiOptions, //request.IAjaxOptions,\n        options, operationParameters) {\n        operationParameters.forEach(function (param) {\n            if (param.required && !param.default && !options.hasOwnProperty(param.name)) {\n                throw new Error('Required parameter \"' + param.name + '\" not found');\n            }\n            if (param.default && !options.hasOwnProperty(param.name)) {\n                options[param.name] = param.default;\n            }\n            if (param.in == 'path') {\n                apiOptions.url = apiOptions.url.replace('{' + param.name + '}', options[param.name]);\n            }\n            if (param.in == 'query' && options.hasOwnProperty(param.name)) {\n                apiOptions.query = apiOptions.query || {};\n                apiOptions.query[param.name] = options[param.name];\n            }\n            if (param.in == 'body') {\n                apiOptions.body = options[param.name];\n            }\n        });\n        return apiOptions;\n    };\n    Client.prototype.apiCall = function (apiOptions, Class) {\n        return this.platform.apiCall(apiOptions).then(function (res) {\n            //TODO Support multipart\n            //TODO Think how to pass headers&stuff to outside\n            if (Class && !res.isMultipart()) {\n                return new Class(res.json);\n            }\n            return res;\n        });\n    };\n    return Client;\n})();\nexports.Client = Client;\nfunction $get(context) {\n    return context.createSingleton('Client', function () {\n        return new Client(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/Client.ts\n ** module id = 41\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar getextensioninforesponse = require('./GetExtensionInfoResponse');\nvar serviceinforesponse = require('./ServiceInfoResponse');\nvar accountstatusinfo = require('./AccountStatusInfo');\nvar GetAccountInfoResponse = (function (_super) {\n    __extends(GetAccountInfoResponse, _super);\n    function GetAccountInfoResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'mainNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'opeartor', Class: getextensioninforesponse.GetExtensionInfoResponse, isArray: false, isRequired: false },\n            { property: 'partnerId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'serviceInfo', Class: serviceinforesponse.ServiceInfoResponse, isArray: false, isRequired: false },\n            { property: 'setupWizardState', Class: GetAccountInfoResponseSetupWizardState, isArray: false, isRequired: false },\n            { property: 'status', Class: GetAccountInfoResponseStatus, isArray: false, isRequired: false },\n            { property: 'statusInfo', Class: accountstatusinfo.AccountStatusInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return GetAccountInfoResponse;\n})(model.Model);\nexports.GetAccountInfoResponse = GetAccountInfoResponse;\n(function (GetAccountInfoResponseSetupWizardState) {\n    GetAccountInfoResponseSetupWizardState[GetAccountInfoResponseSetupWizardState[\"NotStarted\"] = 'NotStarted'] = \"NotStarted\";\n    GetAccountInfoResponseSetupWizardState[GetAccountInfoResponseSetupWizardState[\"Incomplete\"] = 'Incomplete'] = \"Incomplete\";\n    GetAccountInfoResponseSetupWizardState[GetAccountInfoResponseSetupWizardState[\"Completed\"] = 'Completed'] = \"Completed\";\n})(exports.GetAccountInfoResponseSetupWizardState || (exports.GetAccountInfoResponseSetupWizardState = {}));\nvar GetAccountInfoResponseSetupWizardState = exports.GetAccountInfoResponseSetupWizardState;\n(function (GetAccountInfoResponseStatus) {\n    GetAccountInfoResponseStatus[GetAccountInfoResponseStatus[\"Confirmed\"] = 'Confirmed'] = \"Confirmed\";\n    GetAccountInfoResponseStatus[GetAccountInfoResponseStatus[\"Disabled\"] = 'Disabled'] = \"Disabled\";\n})(exports.GetAccountInfoResponseStatus || (exports.GetAccountInfoResponseStatus = {}));\nvar GetAccountInfoResponseStatus = exports.GetAccountInfoResponseStatus;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetAccountInfoResponse\",\n *     \"imports\": [\n *         \"getextensioninforesponse.GetExtensionInfoResponse\",\n *         \"serviceinforesponse.ServiceInfoResponse\",\n *         \"accountstatusinfo.AccountStatusInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of an account\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of an account\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Main phone number of the current account\",\n *             \"$name\": \"mainNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/GetExtensionInfoResponse\",\n *             \"description\": \"Operator's extension information. This extension will receive all calls and messages intended for the operator\",\n *             \"$name\": \"opeartor\",\n *             \"isRequired\": false,\n *             \"type\": \"getextensioninforesponse.GetExtensionInfoResponse\"\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Additional account identifier, developed and applied by the client\",\n *             \"$name\": \"partnerId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ServiceInfoResponse\",\n *             \"description\": \"Account service information, including brand, service plan and billing plan\",\n *             \"$name\": \"serviceInfo\",\n *             \"isRequired\": false,\n *             \"type\": \"serviceinforesponse.ServiceInfoResponse\"\n *         },\n *         {\n *             \"type\": \"GetAccountInfoResponseSetupWizardState\",\n *             \"enum\": [\n *                 \"NotStarted\",\n *                 \"Incomplete\",\n *                 \"Completed\"\n *             ],\n *             \"description\": \"Specifies account configuration wizard state (web service setup). The default value is 'NotStarted'\",\n *             \"$name\": \"setupWizardState\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetAccountInfoResponseStatus\",\n *             \"enum\": [\n *                 \"Confirmed\",\n *                 \"Disabled\"\n *             ],\n *             \"description\": \"Status of the current account\",\n *             \"$name\": \"status\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/AccountStatusInfo\",\n *             \"description\": \"Status information (reason, comment, lifetime). Returned for 'Disabled' status only\",\n *             \"$name\": \"statusInfo\",\n *             \"isRequired\": false,\n *             \"type\": \"accountstatusinfo.AccountStatusInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/GetAccountInfoResponse.ts\n ** module id = 42\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Model = (function () {\n    function Model(data) {\n        var _this = this;\n        this._propertyMappings = [];\n        if (data) {\n            this._propertyMappings.forEach(function (mapping) {\n                var Class = mapping.Class, prop = mapping.property;\n                if (mapping.isRequired && !data.hasOwnProperty(prop))\n                    throw new Error('Required property \"' + prop + '\" not defined');\n                if (!Class) {\n                    _this[prop] = data[prop];\n                }\n                else if (mapping.isArray) {\n                    _this[prop] = _this[prop].map(function (propData) {\n                        return new Class(propData);\n                    });\n                }\n                else {\n                    _this[prop] = new Class(_this[prop]);\n                }\n            });\n        }\n    }\n    return Model;\n})();\nexports.Model = Model;\nfunction $get(data) {\n    return new Model(data);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/Model.ts\n ** module id = 43\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar contactinfo = require('./ContactInfo');\nvar departmentinfo = require('./DepartmentInfo');\nvar extensionpermissions = require('./ExtensionPermissions');\nvar regionalsettingsinfo = require('./RegionalSettingsInfo');\nvar extensionservicefeatureinfo = require('./ExtensionServiceFeatureInfo');\nvar extensionstatusinfo = require('./ExtensionStatusInfo');\nvar GetExtensionInfoResponse = (function (_super) {\n    __extends(GetExtensionInfoResponse, _super);\n    function GetExtensionInfoResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'contact', Class: contactinfo.ContactInfo, isArray: false, isRequired: false },\n            { property: 'departments', Class: departmentinfo.DepartmentInfo, isArray: false, isRequired: false },\n            { property: 'extensionNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'partnerId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'permissions', Class: extensionpermissions.ExtensionPermissions, isArray: false, isRequired: false },\n            { property: 'regionalSettings', Class: regionalsettingsinfo.RegionalSettingsInfo, isArray: false, isRequired: false },\n            { property: 'serviceFeatures', Class: extensionservicefeatureinfo.ExtensionServiceFeatureInfo, isArray: true, isRequired: false },\n            { property: 'setupWizardState', Class: GetExtensionInfoResponseSetupWizardState, isArray: false, isRequired: false },\n            { property: 'status', Class: GetExtensionInfoResponseStatus, isArray: false, isRequired: false },\n            { property: 'statusInfo', Class: extensionstatusinfo.ExtensionStatusInfo, isArray: false, isRequired: false },\n            { property: 'type', Class: GetExtensionInfoResponseType, isArray: false, isRequired: false }\n        ];\n    }\n    return GetExtensionInfoResponse;\n})(model.Model);\nexports.GetExtensionInfoResponse = GetExtensionInfoResponse;\n(function (GetExtensionInfoResponseSetupWizardState) {\n    GetExtensionInfoResponseSetupWizardState[GetExtensionInfoResponseSetupWizardState[\"NotStarted\"] = 'NotStarted'] = \"NotStarted\";\n    GetExtensionInfoResponseSetupWizardState[GetExtensionInfoResponseSetupWizardState[\"Incomplete\"] = 'Incomplete'] = \"Incomplete\";\n    GetExtensionInfoResponseSetupWizardState[GetExtensionInfoResponseSetupWizardState[\"Completed\"] = 'Completed'] = \"Completed\";\n})(exports.GetExtensionInfoResponseSetupWizardState || (exports.GetExtensionInfoResponseSetupWizardState = {}));\nvar GetExtensionInfoResponseSetupWizardState = exports.GetExtensionInfoResponseSetupWizardState;\n(function (GetExtensionInfoResponseStatus) {\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"Enabled\"] = 'Enabled'] = \"Enabled\";\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"Disabled\"] = 'Disabled'] = \"Disabled\";\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"NotActivated\"] = 'NotActivated'] = \"NotActivated\";\n    GetExtensionInfoResponseStatus[GetExtensionInfoResponseStatus[\"Unassigned\"] = 'Unassigned'] = \"Unassigned\";\n})(exports.GetExtensionInfoResponseStatus || (exports.GetExtensionInfoResponseStatus = {}));\nvar GetExtensionInfoResponseStatus = exports.GetExtensionInfoResponseStatus;\n(function (GetExtensionInfoResponseType) {\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"User\"] = 'User'] = \"User\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"FaxUser\"] = 'Fax User'] = \"FaxUser\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"VirtualUser\"] = 'VirtualUser'] = \"VirtualUser\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"DigitalUser\"] = 'DigitalUser'] = \"DigitalUser\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"Department\"] = 'Department'] = \"Department\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"Announcement\"] = 'Announcement'] = \"Announcement\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"SharedLinesGroup\"] = 'SharedLinesGroup'] = \"SharedLinesGroup\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"PagingOnly\"] = 'PagingOnly'] = \"PagingOnly\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"IvrMenu\"] = 'IvrMenu'] = \"IvrMenu\";\n    GetExtensionInfoResponseType[GetExtensionInfoResponseType[\"ApplicationExtension\"] = 'ApplicationExtension'] = \"ApplicationExtension\";\n})(exports.GetExtensionInfoResponseType || (exports.GetExtensionInfoResponseType = {}));\nvar GetExtensionInfoResponseType = exports.GetExtensionInfoResponseType;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetExtensionInfoResponse\",\n *     \"imports\": [\n *         \"contactinfo.ContactInfo\",\n *         \"departmentinfo.DepartmentInfo\",\n *         \"extensionpermissions.ExtensionPermissions\",\n *         \"regionalsettingsinfo.RegionalSettingsInfo\",\n *         \"extensionservicefeatureinfo.ExtensionServiceFeatureInfo\",\n *         \"extensionstatusinfo.ExtensionStatusInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of an extension\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of an extension\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ContactInfo\",\n *             \"description\": \"Contact detailed information\",\n *             \"$name\": \"contact\",\n *             \"isRequired\": false,\n *             \"type\": \"contactinfo.ContactInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/DepartmentInfo\",\n *             \"description\": \"Information on department extension(s), to which the requested extension belongs. Returned only for user extensions, members of department, requested by single extensionId\",\n *             \"$name\": \"departments\",\n *             \"isRequired\": false,\n *             \"type\": \"departmentinfo.DepartmentInfo\"\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Number of department extension\",\n *             \"$name\": \"extensionNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension user name\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"For Partner Applications Internal identifier of an extension created by partner. The RingCentral supports the mapping of accounts and stores the corresponding accountId/extensionId for each partnerId of a client application. In request URIs partnerIds are accepted instead of regular RingCentral native IDs as path parameters using pid = XXX clause. Though in response URIs contain the corresponding accountIds and extensionIds. In all request and response bodies these values are reflected via  partnerId  attributes of account and extension\",\n *             \"$name\": \"partnerId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ExtensionPermissions\",\n *             \"description\": \"Extension permissions, corresponding to the Service Web permissions 'Admin' and 'InternationalCalling'\",\n *             \"$name\": \"permissions\",\n *             \"isRequired\": false,\n *             \"type\": \"extensionpermissions.ExtensionPermissions\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RegionalSettingsInfo\",\n *             \"description\": \"Extension region data (timezone, home country, language)\",\n *             \"$name\": \"regionalSettings\",\n *             \"isRequired\": false,\n *             \"type\": \"regionalsettingsinfo.RegionalSettingsInfo\"\n *         },\n *         {\n *             \"type\": \"extensionservicefeatureinfo.ExtensionServiceFeatureInfo[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/ExtensionServiceFeatureInfo\"\n *             },\n *             \"$name\": \"serviceFeatures\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionInfoResponseSetupWizardState\",\n *             \"enum\": [\n *                 \"NotStarted\",\n *                 \"Incomplete\",\n *                 \"Completed\"\n *             ],\n *             \"description\": \"Specifies extension configuration wizard state (web service setup). The default value is 'NotStarted'\",\n *             \"$name\": \"setupWizardState\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionInfoResponseStatus\",\n *             \"enum\": [\n *                 \"Enabled\",\n *                 \"Disabled\",\n *                 \"NotActivated\",\n *                 \"Unassigned\"\n *             ],\n *             \"description\": \"Extension current state\",\n *             \"$name\": \"status\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ExtensionStatusInfo\",\n *             \"description\": \"Status information (reason, comment). Returned for 'Disabled' status only\",\n *             \"$name\": \"statusInfo\",\n *             \"isRequired\": false,\n *             \"type\": \"extensionstatusinfo.ExtensionStatusInfo\"\n *         },\n *         {\n *             \"type\": \"GetExtensionInfoResponseType\",\n *             \"enum\": [\n *                 \"User\",\n *                 \"Fax User\",\n *                 \"VirtualUser\",\n *                 \"DigitalUser\",\n *                 \"Department\",\n *                 \"Announcement\",\n *                 \"Voicemail\",\n *                 \"SharedLinesGroup\",\n *                 \"PagingOnly\",\n *                 \"IvrMenu\",\n *                 \"ApplicationExtension\"\n *             ],\n *             \"description\": \"Extension type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/GetExtensionInfoResponse.ts\n ** module id = 44\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar contactaddressinfo = require('./ContactAddressInfo');\nvar ContactInfo = (function (_super) {\n    __extends(ContactInfo, _super);\n    function ContactInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'firstName', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'lastName', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'company', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'email', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'businessPhone', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'businessAddress', Class: contactaddressinfo.ContactAddressInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ContactInfo;\n})(model.Model);\nexports.ContactInfo = ContactInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ContactInfo\",\n *     \"imports\": [\n *         \"contactaddressinfo.ContactAddressInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"For User extension type only. Extension user first name\",\n *             \"$name\": \"firstName\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"For User extension type only. Extension user last name\",\n *             \"$name\": \"lastName\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension user company name\",\n *             \"$name\": \"company\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Email of extension user\",\n *             \"$name\": \"email\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension user contact phone number\",\n *             \"$name\": \"businessPhone\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ContactAddressInfo\",\n *             \"description\": \"Business address of extension user company\",\n *             \"$name\": \"businessAddress\",\n *             \"isRequired\": false,\n *             \"type\": \"contactaddressinfo.ContactAddressInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ContactInfo.ts\n ** module id = 45\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar ContactAddressInfo = (function (_super) {\n    __extends(ContactAddressInfo, _super);\n    function ContactAddressInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'country', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'state', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'city', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'street', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'zip', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return ContactAddressInfo;\n})(model.Model);\nexports.ContactAddressInfo = ContactAddressInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ContactAddressInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Country name of extension user company\",\n *             \"$name\": \"country\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"State/province name of extension user company\",\n *             \"$name\": \"state\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"City name of extension user company\",\n *             \"$name\": \"city\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Street address of extension user company\",\n *             \"$name\": \"street\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Zip code of extension user company\",\n *             \"$name\": \"zip\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ContactAddressInfo.ts\n ** module id = 46\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar DepartmentInfo = (function (_super) {\n    __extends(DepartmentInfo, _super);\n    function DepartmentInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'extensionNumber', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return DepartmentInfo;\n})(model.Model);\nexports.DepartmentInfo = DepartmentInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"DepartmentInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a department extension\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a department extension\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Number of a department extension\",\n *             \"$name\": \"extensionNumber\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/DepartmentInfo.ts\n ** module id = 47\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar permissioninfo = require('./PermissionInfo');\nvar ExtensionPermissions = (function (_super) {\n    __extends(ExtensionPermissions, _super);\n    function ExtensionPermissions(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'admin', Class: permissioninfo.PermissionInfo, isArray: false, isRequired: false },\n            { property: 'internationalCalling', Class: permissioninfo.PermissionInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionPermissions;\n})(model.Model);\nexports.ExtensionPermissions = ExtensionPermissions;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionPermissions\",\n *     \"imports\": [\n *         \"permissioninfo.PermissionInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"$ref\": \"#/definitions/PermissionInfo\",\n *             \"description\": \"Admin permission\",\n *             \"$name\": \"admin\",\n *             \"isRequired\": false,\n *             \"type\": \"permissioninfo.PermissionInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/PermissionInfo\",\n *             \"description\": \"International Calling permission\",\n *             \"$name\": \"internationalCalling\",\n *             \"isRequired\": false,\n *             \"type\": \"permissioninfo.PermissionInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ExtensionPermissions.ts\n ** module id = 48\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar PermissionInfo = (function (_super) {\n    __extends(PermissionInfo, _super);\n    function PermissionInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'enabled', Class: null /* boolean */, isArray: false, isRequired: false }\n        ];\n    }\n    return PermissionInfo;\n})(model.Model);\nexports.PermissionInfo = PermissionInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"PermissionInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Specifies if a permission is enabled or not\",\n *             \"$name\": \"enabled\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/PermissionInfo.ts\n ** module id = 49\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar countryinfo = require('./CountryInfo');\nvar timezoneinfo = require('./TimezoneInfo');\nvar languageinfo = require('./LanguageInfo');\nvar greetinglanguageinfo = require('./GreetingLanguageInfo');\nvar formattinglocaleinfo = require('./FormattingLocaleInfo');\nvar RegionalSettingsInfo = (function (_super) {\n    __extends(RegionalSettingsInfo, _super);\n    function RegionalSettingsInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'homeCountry', Class: countryinfo.CountryInfo, isArray: false, isRequired: false },\n            { property: 'timezone', Class: timezoneinfo.TimezoneInfo, isArray: false, isRequired: false },\n            { property: 'language', Class: languageinfo.LanguageInfo, isArray: false, isRequired: false },\n            { property: 'greetingLanguage', Class: greetinglanguageinfo.GreetingLanguageInfo, isArray: false, isRequired: false },\n            { property: 'formattingLocale', Class: formattinglocaleinfo.FormattingLocaleInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return RegionalSettingsInfo;\n})(model.Model);\nexports.RegionalSettingsInfo = RegionalSettingsInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"RegionalSettingsInfo\",\n *     \"imports\": [\n *         \"countryinfo.CountryInfo\",\n *         \"timezoneinfo.TimezoneInfo\",\n *         \"languageinfo.LanguageInfo\",\n *         \"greetinglanguageinfo.GreetingLanguageInfo\",\n *         \"formattinglocaleinfo.FormattingLocaleInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"$ref\": \"#/definitions/CountryInfo\",\n *             \"description\": \"Extension country information\",\n *             \"$name\": \"homeCountry\",\n *             \"isRequired\": false,\n *             \"type\": \"countryinfo.CountryInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/TimezoneInfo\",\n *             \"description\": \"Extension timezone information\",\n *             \"$name\": \"timezone\",\n *             \"isRequired\": false,\n *             \"type\": \"timezoneinfo.TimezoneInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/LanguageInfo\",\n *             \"description\": \"User interface language data\",\n *             \"$name\": \"language\",\n *             \"isRequired\": false,\n *             \"type\": \"languageinfo.LanguageInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/GreetingLanguageInfo\",\n *             \"description\": \"Information on language used for telephony greetings\",\n *             \"$name\": \"greetingLanguage\",\n *             \"isRequired\": false,\n *             \"type\": \"greetinglanguageinfo.GreetingLanguageInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/FormattingLocaleInfo\",\n *             \"description\": \"Formatting language preferences for numbers, dates and currencies\",\n *             \"$name\": \"formattingLocale\",\n *             \"isRequired\": false,\n *             \"type\": \"formattinglocaleinfo.FormattingLocaleInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/RegionalSettingsInfo.ts\n ** module id = 50\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar LanguageInfo = (function (_super) {\n    __extends(LanguageInfo, _super);\n    function LanguageInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'greeting', Class: null /* boolean */, isArray: false, isRequired: false },\n            { property: 'formattingLocale', Class: null /* boolean */, isArray: false, isRequired: false },\n            { property: 'localeCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'ui', Class: null /* boolean */, isArray: false, isRequired: false }\n        ];\n    }\n    return LanguageInfo;\n})(model.Model);\nexports.LanguageInfo = LanguageInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"LanguageInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a language\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a language\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Indicates whether a language is available as greeting language\",\n *             \"$name\": \"greeting\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Indicates whether a language is available as formatting locale\",\n *             \"$name\": \"formattingLocale\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Localization code of a language\",\n *             \"$name\": \"localeCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Official name of a language\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Indicates whether a language is available as UI language\",\n *             \"$name\": \"ui\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/LanguageInfo.ts\n ** module id = 51\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar CountryInfo = (function (_super) {\n    __extends(CountryInfo, _super);\n    function CountryInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'callingCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'isoCode', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return CountryInfo;\n})(model.Model);\nexports.CountryInfo = CountryInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CountryInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a home country\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Home country URI\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Home country calling code defined by ITU-T recommendations E.123 and E.164, see Calling Codes\",\n *             \"$name\": \"callingCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Home country code according to the ISO standard, see ISO 3166\",\n *             \"$name\": \"isoCode\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/CountryInfo.ts\n ** module id = 52\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar TimezoneInfo = (function (_super) {\n    __extends(TimezoneInfo, _super);\n    function TimezoneInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'description', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return TimezoneInfo;\n})(model.Model);\nexports.TimezoneInfo = TimezoneInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"TimezoneInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a timezone\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a timezone\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Short name of a timezone\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Meaningful description of the timezone\",\n *             \"$name\": \"description\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/TimezoneInfo.ts\n ** module id = 53\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar GreetingLanguageInfo = (function (_super) {\n    __extends(GreetingLanguageInfo, _super);\n    function GreetingLanguageInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'localeCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return GreetingLanguageInfo;\n})(model.Model);\nexports.GreetingLanguageInfo = GreetingLanguageInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GreetingLanguageInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a greeting language\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Localization code of a greeting language\",\n *             \"$name\": \"localeCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Official name of a greeting language\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/GreetingLanguageInfo.ts\n ** module id = 54\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar FormattingLocaleInfo = (function (_super) {\n    __extends(FormattingLocaleInfo, _super);\n    function FormattingLocaleInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'localeCode', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return FormattingLocaleInfo;\n})(model.Model);\nexports.FormattingLocaleInfo = FormattingLocaleInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"FormattingLocaleInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a formatting language\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Localization code of a formatting language\",\n *             \"$name\": \"localeCode\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Official name of a formatting language\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/FormattingLocaleInfo.ts\n ** module id = 55\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar ExtensionServiceFeatureInfo = (function (_super) {\n    __extends(ExtensionServiceFeatureInfo, _super);\n    function ExtensionServiceFeatureInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'enabled', Class: null /* boolean */, isArray: false, isRequired: false },\n            { property: 'featureName', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'reason', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionServiceFeatureInfo;\n})(model.Model);\nexports.ExtensionServiceFeatureInfo = ExtensionServiceFeatureInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionServiceFeatureInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"boolean\",\n *             \"description\": \"Feature status; shows feature availability for an extension\",\n *             \"$name\": \"enabled\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Feature name, see all available values in Service Feature List\",\n *             \"$name\": \"featureName\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Reason of limitation for a particular service feature. Returned only if the enabled parameter value is 'False', see Service Feature Limitations and Reasons. When retrieving service features for an extension, the reasons for the limitations, if any, are returned in response\",\n *             \"$name\": \"reason\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ExtensionServiceFeatureInfo.ts\n ** module id = 56\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar ExtensionStatusInfo = (function (_super) {\n    __extends(ExtensionStatusInfo, _super);\n    function ExtensionStatusInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'comment', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'reason', Class: ExtensionStatusInfoReason, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionStatusInfo;\n})(model.Model);\nexports.ExtensionStatusInfo = ExtensionStatusInfo;\n(function (ExtensionStatusInfoReason) {\n    ExtensionStatusInfoReason[ExtensionStatusInfoReason[\"Voluntarily\"] = 'Voluntarily'] = \"Voluntarily\";\n    ExtensionStatusInfoReason[ExtensionStatusInfoReason[\"Involuntarily\"] = 'Involuntarily'] = \"Involuntarily\";\n})(exports.ExtensionStatusInfoReason || (exports.ExtensionStatusInfoReason = {}));\nvar ExtensionStatusInfoReason = exports.ExtensionStatusInfoReason;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionStatusInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"A free-form user comment, describing the status change reason\",\n *             \"$name\": \"comment\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"ExtensionStatusInfoReason\",\n *             \"enum\": [\n *                 \"Voluntarily\",\n *                 \"Involuntarily\"\n *             ],\n *             \"description\": \"Type of suspension\",\n *             \"$name\": \"reason\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ExtensionStatusInfo.ts\n ** module id = 57\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar billingplaninfo = require('./BillingPlanInfo');\nvar brandinfo = require('./BrandInfo');\nvar serviceplaninfo = require('./ServicePlanInfo');\nvar targetserviceplaninfo = require('./TargetServicePlanInfo');\nvar ServiceInfoResponse = (function (_super) {\n    __extends(ServiceInfoResponse, _super);\n    function ServiceInfoResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'billingPlan', Class: billingplaninfo.BillingPlanInfo, isArray: false, isRequired: false },\n            { property: 'brand', Class: brandinfo.BrandInfo, isArray: false, isRequired: false },\n            { property: 'servicePlan', Class: serviceplaninfo.ServicePlanInfo, isArray: false, isRequired: false },\n            { property: 'targetServicePlan', Class: targetserviceplaninfo.TargetServicePlanInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ServiceInfoResponse;\n})(model.Model);\nexports.ServiceInfoResponse = ServiceInfoResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ServiceInfoResponse\",\n *     \"imports\": [\n *         \"billingplaninfo.BillingPlanInfo\",\n *         \"brandinfo.BrandInfo\",\n *         \"serviceplaninfo.ServicePlanInfo\",\n *         \"targetserviceplaninfo.TargetServicePlanInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a service info resource\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/BillingPlanInfo\",\n *             \"description\": \"Information on account billing plan\",\n *             \"$name\": \"billingPlan\",\n *             \"isRequired\": false,\n *             \"type\": \"billingplaninfo.BillingPlanInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/BrandInfo\",\n *             \"description\": \"Information on account brand\",\n *             \"$name\": \"brand\",\n *             \"isRequired\": false,\n *             \"type\": \"brandinfo.BrandInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/ServicePlanInfo\",\n *             \"description\": \"Information on account service plan\",\n *             \"$name\": \"servicePlan\",\n *             \"isRequired\": false,\n *             \"type\": \"serviceplaninfo.ServicePlanInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/TargetServicePlanInfo\",\n *             \"description\": \"Information on account target service plan\",\n *             \"$name\": \"targetServicePlan\",\n *             \"isRequired\": false,\n *             \"type\": \"targetserviceplaninfo.TargetServicePlanInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ServiceInfoResponse.ts\n ** module id = 58\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar BillingPlanInfo = (function (_super) {\n    __extends(BillingPlanInfo, _super);\n    function BillingPlanInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'durationUnit', Class: BillingPlanInfoDurationUnit, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'type', Class: BillingPlanInfoType, isArray: false, isRequired: false }\n        ];\n    }\n    return BillingPlanInfo;\n})(model.Model);\nexports.BillingPlanInfo = BillingPlanInfo;\n(function (BillingPlanInfoDurationUnit) {\n    BillingPlanInfoDurationUnit[BillingPlanInfoDurationUnit[\"Month\"] = 'Month'] = \"Month\";\n    BillingPlanInfoDurationUnit[BillingPlanInfoDurationUnit[\"Day\"] = 'Day'] = \"Day\";\n})(exports.BillingPlanInfoDurationUnit || (exports.BillingPlanInfoDurationUnit = {}));\nvar BillingPlanInfoDurationUnit = exports.BillingPlanInfoDurationUnit;\n(function (BillingPlanInfoType) {\n    BillingPlanInfoType[BillingPlanInfoType[\"Initial\"] = 'Initial'] = \"Initial\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Regular\"] = 'Regular'] = \"Regular\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Trial\"] = 'Trial'] = \"Trial\";\n    BillingPlanInfoType[BillingPlanInfoType[\"TrialNoCC\"] = 'TrialNoCC'] = \"TrialNoCC\";\n    BillingPlanInfoType[BillingPlanInfoType[\"Free\"] = 'Free'] = \"Free\";\n})(exports.BillingPlanInfoType || (exports.BillingPlanInfoType = {}));\nvar BillingPlanInfoType = exports.BillingPlanInfoType;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"BillingPlanInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a billing plan\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Billing plan name\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"BillingPlanInfoDurationUnit\",\n *             \"enum\": [\n *                 \"Month\",\n *                 \"Day\"\n *             ],\n *             \"description\": \"Duration period\",\n *             \"$name\": \"durationUnit\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Number of duration units\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"BillingPlanInfoType\",\n *             \"enum\": [\n *                 \"Initial\",\n *                 \"Regular\",\n *                 \"Suspended\",\n *                 \"Trial\",\n *                 \"TrialNoCC\",\n *                 \"Free\"\n *             ],\n *             \"description\": \"Billing plan type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/BillingPlanInfo.ts\n ** module id = 59\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar countryinfo = require('./CountryInfo');\nvar BrandInfo = (function (_super) {\n    __extends(BrandInfo, _super);\n    function BrandInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'homeCountry', Class: countryinfo.CountryInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return BrandInfo;\n})(model.Model);\nexports.BrandInfo = BrandInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"BrandInfo\",\n *     \"imports\": [\n *         \"countryinfo.CountryInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a brand\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Brand name, for example  RingCentral UK ,  ClearFax \",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CountryInfo\",\n *             \"description\": \"Home country information\",\n *             \"$name\": \"homeCountry\",\n *             \"isRequired\": false,\n *             \"type\": \"countryinfo.CountryInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/BrandInfo.ts\n ** module id = 60\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar ServicePlanInfo = (function (_super) {\n    __extends(ServicePlanInfo, _super);\n    function ServicePlanInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'edition', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return ServicePlanInfo;\n})(model.Model);\nexports.ServicePlanInfo = ServicePlanInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ServicePlanInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a service plan\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Name of a service plan\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Edition of a service plan\",\n *             \"$name\": \"edition\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ServicePlanInfo.ts\n ** module id = 61\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar TargetServicePlanInfo = (function (_super) {\n    __extends(TargetServicePlanInfo, _super);\n    function TargetServicePlanInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return TargetServicePlanInfo;\n})(model.Model);\nexports.TargetServicePlanInfo = TargetServicePlanInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"TargetServicePlanInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a target service plan\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Name of a target service plan\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/TargetServicePlanInfo.ts\n ** module id = 62\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar AccountStatusInfo = (function (_super) {\n    __extends(AccountStatusInfo, _super);\n    function AccountStatusInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'reason', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'comment', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'lifetime', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return AccountStatusInfo;\n})(model.Model);\nexports.AccountStatusInfo = AccountStatusInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"AccountStatusInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Foo\",\n *             \"$name\": \"reason\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Foo\",\n *             \"$name\": \"comment\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Foo\",\n *             \"$name\": \"lifetime\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/AccountStatusInfo.ts\n ** module id = 63\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar client = require('../Client');\nvar accountactivecallsresponse = require('../models/AccountActiveCallsResponse');\nvar extensionactivecallsresponse = require('../models/ExtensionActiveCallsResponse');\nvar extensioncalllogresponse = require('../models/ExtensionCallLogResponse');\nvar getextensioncalllogrecordresponse = require('../models/GetExtensionCallLogRecordResponse');\nvar getcallrecordingresponse = require('../models/GetCallRecordingResponse');\nvar CallLog = (function (_super) {\n    __extends(CallLog, _super);\n    function CallLog() {\n        _super.apply(this, arguments);\n    }\n    CallLog.prototype.accountActiveCalls = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/active-calls',\n            'method': 'get'\n        }, ResponseClass = accountactivecallsresponse.AccountActiveCallsResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"direction\",\n                \"type\": \"IAccountActiveCallsDirection\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Inbound\",\n                    \"Outbound\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"IAccountActiveCallsType\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Voice\",\n                    \"Fax\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"page\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n                \"required\": false\n            },\n            {\n                \"name\": \"perPage\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountExtensionActiveCalls = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/extension/{extensionId}/active-calls',\n            'method': 'get'\n        }, ResponseClass = extensionactivecallsresponse.ExtensionActiveCallsResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"direction\",\n                \"type\": \"IAccountExtensionActiveCallsDirection\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Inbound\",\n                    \"Outbound\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"IAccountExtensionActiveCallsType\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Voice\",\n                    \"Fax\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"page\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n                \"required\": false\n            },\n            {\n                \"name\": \"perPage\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountExtensionCallLogs = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log',\n            'method': 'get'\n        }, ResponseClass = extensioncalllogresponse.ExtensionCallLogResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"extensionId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"extensionNumber\",\n                \"type\": \"string\",\n                \"in\": \"query\",\n                \"description\": \"Extension number of a user. If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter\",\n                \"required\": false\n            },\n            {\n                \"name\": \"phoneNumber\",\n                \"type\": \"string\",\n                \"in\": \"query\",\n                \"description\": \"Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionNumber filter\",\n                \"required\": false\n            },\n            {\n                \"name\": \"direction\",\n                \"type\": \"IAccountExtensionCallLogsDirection\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Inbound\",\n                    \"Outbound\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"IAccountExtensionCallLogsType\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Voice\",\n                    \"Fax\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n                \"required\": false\n            },\n            {\n                \"name\": \"view\",\n                \"type\": \"IAccountExtensionCallLogsView\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"Simple\",\n                    \"Detailed\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"The default value is 'Simple' for both account and extension call log\",\n                \"required\": false\n            },\n            {\n                \"name\": \"withRecording\",\n                \"type\": \"IAccountExtensionCallLogsWithRecording\",\n                \"items\": {\n                    \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"allowEmptyValue\": true,\n                \"enum\": [\n                    \"True\",\n                    \"False\"\n                ],\n                \"in\": \"query\",\n                \"description\": \"'True' if only recorded calls have to be returned\",\n                \"required\": false\n            },\n            {\n                \"name\": \"dateTo\",\n                \"type\": \"Date\",\n                \"in\": \"query\",\n                \"description\": \"Specifies the ending timestamp for result records. Default: current time\",\n                \"required\": false\n            },\n            {\n                \"name\": \"dateFrom\",\n                \"type\": \"Date\",\n                \"in\": \"query\",\n                \"description\": \"The start timestamp for result records. Default value is equal to dateTo minus 1 week\",\n                \"required\": false\n            },\n            {\n                \"name\": \"page\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n                \"required\": false\n            },\n            {\n                \"name\": \"perPage\",\n                \"type\": \"number\",\n                \"in\": \"query\",\n                \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n                \"required\": false\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountExtensionCallLog = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}',\n            'method': 'get'\n        }, ResponseClass = getextensioncalllogrecordresponse.GetExtensionCallLogRecordResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"extensionId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"callRecordId\",\n                \"type\": \"number\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a call log record\",\n                \"required\": true\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    CallLog.prototype.accountRecording = function (options) {\n        var apiOptions = {\n            'url': '/restapi/v1.0/account/{accountId}/recording/{recordingId}',\n            'method': 'get'\n        }, ResponseClass = getcallrecordingresponse.GetCallRecordingResponse;\n        apiOptions = this.parseOptions(apiOptions, options, [\n            {\n                \"name\": \"accountId\",\n                \"default\": \"~\",\n                \"type\": \"string\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n                \"required\": false\n            },\n            {\n                \"name\": \"recordingId\",\n                \"type\": \"number\",\n                \"in\": \"path\",\n                \"description\": \"Internal identifier of recording (returned in Call Log)\",\n                \"required\": true\n            }\n        ]);\n        return this.apiCall(apiOptions, ResponseClass);\n    };\n    return CallLog;\n})(client.Client);\nexports.CallLog = CallLog;\n(function (IAccountActiveCallsDirection) {\n    IAccountActiveCallsDirection[IAccountActiveCallsDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    IAccountActiveCallsDirection[IAccountActiveCallsDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.IAccountActiveCallsDirection || (exports.IAccountActiveCallsDirection = {}));\nvar IAccountActiveCallsDirection = exports.IAccountActiveCallsDirection;\n(function (IAccountActiveCallsType) {\n    IAccountActiveCallsType[IAccountActiveCallsType[\"Voice\"] = 'Voice'] = \"Voice\";\n    IAccountActiveCallsType[IAccountActiveCallsType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.IAccountActiveCallsType || (exports.IAccountActiveCallsType = {}));\nvar IAccountActiveCallsType = exports.IAccountActiveCallsType;\n(function (IAccountExtensionActiveCallsDirection) {\n    IAccountExtensionActiveCallsDirection[IAccountExtensionActiveCallsDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    IAccountExtensionActiveCallsDirection[IAccountExtensionActiveCallsDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.IAccountExtensionActiveCallsDirection || (exports.IAccountExtensionActiveCallsDirection = {}));\nvar IAccountExtensionActiveCallsDirection = exports.IAccountExtensionActiveCallsDirection;\n(function (IAccountExtensionActiveCallsType) {\n    IAccountExtensionActiveCallsType[IAccountExtensionActiveCallsType[\"Voice\"] = 'Voice'] = \"Voice\";\n    IAccountExtensionActiveCallsType[IAccountExtensionActiveCallsType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.IAccountExtensionActiveCallsType || (exports.IAccountExtensionActiveCallsType = {}));\nvar IAccountExtensionActiveCallsType = exports.IAccountExtensionActiveCallsType;\n(function (IAccountExtensionCallLogsDirection) {\n    IAccountExtensionCallLogsDirection[IAccountExtensionCallLogsDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    IAccountExtensionCallLogsDirection[IAccountExtensionCallLogsDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.IAccountExtensionCallLogsDirection || (exports.IAccountExtensionCallLogsDirection = {}));\nvar IAccountExtensionCallLogsDirection = exports.IAccountExtensionCallLogsDirection;\n(function (IAccountExtensionCallLogsType) {\n    IAccountExtensionCallLogsType[IAccountExtensionCallLogsType[\"Voice\"] = 'Voice'] = \"Voice\";\n    IAccountExtensionCallLogsType[IAccountExtensionCallLogsType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.IAccountExtensionCallLogsType || (exports.IAccountExtensionCallLogsType = {}));\nvar IAccountExtensionCallLogsType = exports.IAccountExtensionCallLogsType;\n(function (IAccountExtensionCallLogsView) {\n    IAccountExtensionCallLogsView[IAccountExtensionCallLogsView[\"Simple\"] = 'Simple'] = \"Simple\";\n    IAccountExtensionCallLogsView[IAccountExtensionCallLogsView[\"Detailed\"] = 'Detailed'] = \"Detailed\";\n})(exports.IAccountExtensionCallLogsView || (exports.IAccountExtensionCallLogsView = {}));\nvar IAccountExtensionCallLogsView = exports.IAccountExtensionCallLogsView;\n(function (IAccountExtensionCallLogsWithRecording) {\n    IAccountExtensionCallLogsWithRecording[IAccountExtensionCallLogsWithRecording[\"True\"] = 'True'] = \"True\";\n    IAccountExtensionCallLogsWithRecording[IAccountExtensionCallLogsWithRecording[\"False\"] = 'False'] = \"False\";\n})(exports.IAccountExtensionCallLogsWithRecording || (exports.IAccountExtensionCallLogsWithRecording = {}));\nvar IAccountExtensionCallLogsWithRecording = exports.IAccountExtensionCallLogsWithRecording;\nfunction $get(context) {\n    return context.createSingleton('CallLog', function () {\n        return new CallLog(context);\n    });\n}\nexports.$get = $get;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * [\n *     {\n *         \"operationId\": \"accountActiveCalls\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Account Active Calls\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.13 (Release 6.5)</p><p>Returns records of all calls that are in progress, ordered by start time in descending order.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"direction\",\n *                 \"type\": \"IAccountActiveCallsDirection\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Inbound\",\n *                     \"Outbound\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"type\",\n *                 \"type\": \"IAccountActiveCallsType\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Voice\",\n *                     \"Fax\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"page\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"perPage\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/AccountActiveCallsResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/active-calls\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"accountactivecallsresponse.AccountActiveCallsResponse\",\n *         \"imports\": [\n *             \"accountactivecallsresponse.AccountActiveCallsResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountExtensionActiveCalls\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Active Calls\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.13 (Release 6.5)</p><p>Returns records of all extension calls that are in progress, ordered by start time in descending order.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"direction\",\n *                 \"type\": \"IAccountExtensionActiveCallsDirection\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Inbound\",\n *                     \"Outbound\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"type\",\n *                 \"type\": \"IAccountExtensionActiveCallsType\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Voice\",\n *                     \"Fax\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"page\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"perPage\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/ExtensionActiveCallsResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/extension/{extensionId}/active-calls\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"extensionactivecallsresponse.ExtensionActiveCallsResponse\",\n *         \"imports\": [\n *             \"extensionactivecallsresponse.ExtensionActiveCallsResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountExtensionCallLogs\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Call Log Records by Filter\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.3 (Release 5.11)</p><p>Returns call log records filtered by the specified parameters.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"extensionId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"extensionNumber\",\n *                 \"type\": \"string\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Extension number of a user. If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"phoneNumber\",\n *                 \"type\": \"string\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionNumber filter\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"direction\",\n *                 \"type\": \"IAccountExtensionCallLogsDirection\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Inbound\",\n *                     \"Outbound\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"type\",\n *                 \"type\": \"IAccountExtensionCallLogsType\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Voice\",\n *                     \"Fax\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"view\",\n *                 \"type\": \"IAccountExtensionCallLogsView\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"Simple\",\n *                     \"Detailed\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"The default value is 'Simple' for both account and extension call log\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"withRecording\",\n *                 \"type\": \"IAccountExtensionCallLogsWithRecording\",\n *                 \"items\": {\n *                     \"type\": \"string\"\n *                 },\n *                 \"collectionFormat\": \"multi\",\n *                 \"allowEmptyValue\": true,\n *                 \"enum\": [\n *                     \"True\",\n *                     \"False\"\n *                 ],\n *                 \"in\": \"query\",\n *                 \"description\": \"'True' if only recorded calls have to be returned\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"dateTo\",\n *                 \"type\": \"Date\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Specifies the ending timestamp for result records. Default: current time\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"dateFrom\",\n *                 \"type\": \"Date\",\n *                 \"in\": \"query\",\n *                 \"description\": \"The start timestamp for result records. Default value is equal to dateTo minus 1 week\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"page\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"perPage\",\n *                 \"type\": \"number\",\n *                 \"in\": \"query\",\n *                 \"description\": \"Indicates the page size (number of items). If not specified, the value is '100' by default.\",\n *                 \"required\": false\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/ExtensionCallLogResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"extensioncalllogresponse.ExtensionCallLogResponse\",\n *         \"imports\": [\n *             \"extensioncalllogresponse.ExtensionCallLogResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountExtensionCallLog\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Call Log Record\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.3 (Release 5.11)</p><p>Returns individual call log record by callRecordId(s).</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"extensionId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"callRecordId\",\n *                 \"type\": \"number\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a call log record\",\n *                 \"required\": true\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetExtensionCallLogRecordResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/extension/{extensionId}/call-log/{callRecordId}\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"getextensioncalllogrecordresponse.GetExtensionCallLogRecordResponse\",\n *         \"imports\": [\n *             \"getextensioncalllogrecordresponse.GetExtensionCallLogRecordResponse\"\n *         ]\n *     },\n *     {\n *         \"operationId\": \"accountRecording\",\n *         \"tags\": [\n *             \"Call Log\"\n *         ],\n *         \"summary\": \"Get Call Recording\",\n *         \"description\": \"<p style='font-style:italic;'>Since 1.0.18</p><p>Returns call recording metadata.</p><h4>Required Permissions</h4><table class='fullwidth'><thead><tr><th>Permission</th><th>Description</th></tr></thead><tbody><tr><td class='code'>ReadCallRecording</td><td>Downloading call recording content</td></tr><tr><td class='code'>ReadCallLog</td><td>Viewing user call logs</td></tr></tbody></table><h4>Usage Plan Group</h4><p>Heavy</p>\",\n *         \"consumes\": [\n *             \"application/json\"\n *         ],\n *         \"produces\": [\n *             \"application/json\"\n *         ],\n *         \"parameters\": [\n *             {\n *                 \"name\": \"accountId\",\n *                 \"default\": \"~\",\n *                 \"type\": \"string\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session\",\n *                 \"required\": false\n *             },\n *             {\n *                 \"name\": \"recordingId\",\n *                 \"type\": \"number\",\n *                 \"in\": \"path\",\n *                 \"description\": \"Internal identifier of recording (returned in Call Log)\",\n *                 \"required\": true\n *             }\n *         ],\n *         \"responses\": {\n *             \"200\": {\n *                 \"description\": \"Success\",\n *                 \"schema\": {\n *                     \"$ref\": \"#/definitions/GetCallRecordingResponse\"\n *                 }\n *             }\n *         },\n *         \"path\": \"/restapi/v1.0/account/{accountId}/recording/{recordingId}\",\n *         \"method\": \"get\",\n *         \"responseSchema\": \"getcallrecordingresponse.GetCallRecordingResponse\",\n *         \"imports\": [\n *             \"getcallrecordingresponse.GetCallRecordingResponse\"\n *         ]\n *     }\n * ]\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/clients/CallLog.ts\n ** module id = 64\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar calllogrecord = require('./CallLogRecord');\nvar paginginfo = require('./PagingInfo');\nvar navigationinfo = require('./NavigationInfo');\nvar ExtensionCallLogResponse = (function (_super) {\n    __extends(ExtensionCallLogResponse, _super);\n    function ExtensionCallLogResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'records', Class: calllogrecord.CallLogRecord, isArray: true, isRequired: true },\n            { property: 'paging', Class: paginginfo.PagingInfo, isArray: false, isRequired: true },\n            { property: 'navigation', Class: navigationinfo.NavigationInfo, isArray: false, isRequired: true }\n        ];\n    }\n    return ExtensionCallLogResponse;\n})(model.Model);\nexports.ExtensionCallLogResponse = ExtensionCallLogResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionCallLogResponse\",\n *     \"imports\": [\n *         \"calllogrecord.CallLogRecord\",\n *         \"paginginfo.PagingInfo\",\n *         \"navigationinfo.NavigationInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"calllogrecord.CallLogRecord[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/CallLogRecord\"\n *             },\n *             \"$name\": \"records\",\n *             \"isRequired\": true\n *         },\n *         {\n *             \"$ref\": \"#/definitions/PagingInfo\",\n *             \"description\": \"Information on paging\",\n *             \"$name\": \"paging\",\n *             \"isRequired\": true,\n *             \"type\": \"paginginfo.PagingInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/NavigationInfo\",\n *             \"description\": \"Information on navigation\",\n *             \"$name\": \"navigation\",\n *             \"isRequired\": true,\n *             \"type\": \"navigationinfo.NavigationInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ExtensionCallLogResponse.ts\n ** module id = 65\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar calllogcallerinfo = require('./CallLogCallerInfo');\nvar recordinginfo = require('./RecordingInfo');\nvar calllogrecordleginfo = require('./CallLogRecordLegInfo');\nvar CallLogRecord = (function (_super) {\n    __extends(CallLogRecord, _super);\n    function CallLogRecord(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'sessionId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'from', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'to', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'type', Class: CallLogRecordType, isArray: false, isRequired: false },\n            { property: 'direction', Class: CallLogRecordDirection, isArray: false, isRequired: false },\n            { property: 'action', Class: CallLogRecordAction, isArray: false, isRequired: false },\n            { property: 'result', Class: CallLogRecordResult, isArray: false, isRequired: false },\n            { property: 'startTime', Class: Date, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'transport', Class: CallLogRecordTransport, isArray: false, isRequired: false },\n            { property: 'message', Class: null /* any */, isArray: false, isRequired: false },\n            { property: 'recording', Class: recordinginfo.RecordingInfo, isArray: false, isRequired: false },\n            { property: 'billing', Class: CallLogRecordBilling, isArray: false, isRequired: false },\n            { property: 'legs', Class: calllogrecordleginfo.CallLogRecordLegInfo, isArray: true, isRequired: true }\n        ];\n    }\n    return CallLogRecord;\n})(model.Model);\nexports.CallLogRecord = CallLogRecord;\n(function (CallLogRecordType) {\n    CallLogRecordType[CallLogRecordType[\"Voice\"] = 'Voice'] = \"Voice\";\n    CallLogRecordType[CallLogRecordType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.CallLogRecordType || (exports.CallLogRecordType = {}));\nvar CallLogRecordType = exports.CallLogRecordType;\n(function (CallLogRecordDirection) {\n    CallLogRecordDirection[CallLogRecordDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    CallLogRecordDirection[CallLogRecordDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.CallLogRecordDirection || (exports.CallLogRecordDirection = {}));\nvar CallLogRecordDirection = exports.CallLogRecordDirection;\n(function (CallLogRecordAction) {\n    CallLogRecordAction[CallLogRecordAction[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordAction[CallLogRecordAction[\"PhoneCall\"] = 'Phone Call'] = \"PhoneCall\";\n    CallLogRecordAction[CallLogRecordAction[\"PhoneLogin\"] = 'Phone Login'] = \"PhoneLogin\";\n    CallLogRecordAction[CallLogRecordAction[\"IncomingFax\"] = 'Incoming Fax'] = \"IncomingFax\";\n    CallLogRecordAction[CallLogRecordAction[\"AcceptCall\"] = 'Accept Call'] = \"AcceptCall\";\n    CallLogRecordAction[CallLogRecordAction[\"FindMe\"] = 'FindMe'] = \"FindMe\";\n    CallLogRecordAction[CallLogRecordAction[\"FollowMe\"] = 'FollowMe'] = \"FollowMe\";\n    CallLogRecordAction[CallLogRecordAction[\"OutgoingFax\"] = 'Outgoing Fax'] = \"OutgoingFax\";\n    CallLogRecordAction[CallLogRecordAction[\"CallReturn\"] = 'Call Return'] = \"CallReturn\";\n    CallLogRecordAction[CallLogRecordAction[\"CallingCard\"] = 'Calling Card'] = \"CallingCard\";\n    CallLogRecordAction[CallLogRecordAction[\"RingDirectly\"] = 'Ring Directly'] = \"RingDirectly\";\n    CallLogRecordAction[CallLogRecordAction[\"RingOutWeb\"] = 'RingOut Web'] = \"RingOutWeb\";\n    CallLogRecordAction[CallLogRecordAction[\"VoIPCall\"] = 'VoIP Call'] = \"VoIPCall\";\n    CallLogRecordAction[CallLogRecordAction[\"RingOutPC\"] = 'RingOut PC'] = \"RingOutPC\";\n    CallLogRecordAction[CallLogRecordAction[\"RingMe\"] = 'RingMe'] = \"RingMe\";\n    CallLogRecordAction[CallLogRecordAction[\"Transfer\"] = 'Transfer'] = \"Transfer\";\n    CallLogRecordAction[CallLogRecordAction['411Info'] = '411 Info'] = '411Info';\n    CallLogRecordAction[CallLogRecordAction[\"Emergency\"] = 'Emergency'] = \"Emergency\";\n    CallLogRecordAction[CallLogRecordAction['E911Update'] = 'E911 Update'] = 'E911Update';\n    CallLogRecordAction[CallLogRecordAction[\"Support\"] = 'Support'] = \"Support\";\n    CallLogRecordAction[CallLogRecordAction[\"RingOutMobile\"] = 'RingOut Mobile'] = \"RingOutMobile\";\n})(exports.CallLogRecordAction || (exports.CallLogRecordAction = {}));\nvar CallLogRecordAction = exports.CallLogRecordAction;\n(function (CallLogRecordResult) {\n    CallLogRecordResult[CallLogRecordResult[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordResult[CallLogRecordResult[\"ResultInProgress\"] = 'ResultInProgress'] = \"ResultInProgress\";\n    CallLogRecordResult[CallLogRecordResult[\"Missed\"] = 'Missed'] = \"Missed\";\n    CallLogRecordResult[CallLogRecordResult[\"Callaccepted\"] = 'Call accepted'] = \"Callaccepted\";\n    CallLogRecordResult[CallLogRecordResult[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    CallLogRecordResult[CallLogRecordResult[\"Rejected\"] = 'Rejected'] = \"Rejected\";\n    CallLogRecordResult[CallLogRecordResult[\"Reply\"] = 'Reply'] = \"Reply\";\n    CallLogRecordResult[CallLogRecordResult[\"Received\"] = 'Received'] = \"Received\";\n    CallLogRecordResult[CallLogRecordResult[\"ReceiveError\"] = 'Receive Error'] = \"ReceiveError\";\n    CallLogRecordResult[CallLogRecordResult[\"FaxonDemand\"] = 'Fax on Demand'] = \"FaxonDemand\";\n    CallLogRecordResult[CallLogRecordResult[\"PartialReceive\"] = 'Partial Receive'] = \"PartialReceive\";\n    CallLogRecordResult[CallLogRecordResult[\"Blocked\"] = 'Blocked'] = \"Blocked\";\n    CallLogRecordResult[CallLogRecordResult['Callсonnected'] = 'Call сonnected'] = 'Callсonnected';\n    CallLogRecordResult[CallLogRecordResult[\"NoAnswer\"] = 'No Answer'] = \"NoAnswer\";\n    CallLogRecordResult[CallLogRecordResult[\"Busy\"] = 'Busy'] = \"Busy\";\n    CallLogRecordResult[CallLogRecordResult[\"SendError\"] = 'Send Error'] = \"SendError\";\n    CallLogRecordResult[CallLogRecordResult[\"Sent\"] = 'Sent'] = \"Sent\";\n    CallLogRecordResult[CallLogRecordResult[\"Nofaxmachine\"] = 'No fax machine'] = \"Nofaxmachine\";\n    CallLogRecordResult[CallLogRecordResult[\"ResultEmpty\"] = 'ResultEmpty'] = \"ResultEmpty\";\n    CallLogRecordResult[CallLogRecordResult[\"Account\"] = 'Account'] = \"Account\";\n    CallLogRecordResult[CallLogRecordResult[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    CallLogRecordResult[CallLogRecordResult[\"CallFailed\"] = 'Call Failed'] = \"CallFailed\";\n    CallLogRecordResult[CallLogRecordResult[\"CallFailure\"] = 'Call Failure'] = \"CallFailure\";\n    CallLogRecordResult[CallLogRecordResult[\"InternalError\"] = 'Internal Error'] = \"InternalError\";\n    CallLogRecordResult[CallLogRecordResult[\"IPPhoneoffline\"] = 'IP Phone offline'] = \"IPPhoneoffline\";\n    CallLogRecordResult[CallLogRecordResult[\"RestrictedNumber\"] = 'Restricted Number'] = \"RestrictedNumber\";\n    CallLogRecordResult[CallLogRecordResult[\"WrongNumber\"] = 'Wrong Number'] = \"WrongNumber\";\n    CallLogRecordResult[CallLogRecordResult[\"Stopped\"] = 'Stopped'] = \"Stopped\";\n    CallLogRecordResult[CallLogRecordResult[\"Hangup\"] = 'Hang up'] = \"Hangup\";\n    CallLogRecordResult[CallLogRecordResult[\"PoorLineQuality\"] = 'Poor Line Quality'] = \"PoorLineQuality\";\n    CallLogRecordResult[CallLogRecordResult[\"PartiallySent\"] = 'Partially Sent'] = \"PartiallySent\";\n    CallLogRecordResult[CallLogRecordResult[\"InternationalDisabled\"] = 'International Disabled'] = \"InternationalDisabled\";\n    CallLogRecordResult[CallLogRecordResult[\"InternationalRestriction\"] = 'International Restriction'] = \"InternationalRestriction\";\n    CallLogRecordResult[CallLogRecordResult[\"Abandoned\"] = 'Abandoned'] = \"Abandoned\";\n    CallLogRecordResult[CallLogRecordResult[\"Declined\"] = 'Declined'] = \"Declined\";\n    CallLogRecordResult[CallLogRecordResult[\"FaxReceiptError\"] = 'Fax Receipt Error'] = \"FaxReceiptError\";\n    CallLogRecordResult[CallLogRecordResult[\"FaxSendError\"] = 'Fax Send Error'] = \"FaxSendError\";\n})(exports.CallLogRecordResult || (exports.CallLogRecordResult = {}));\nvar CallLogRecordResult = exports.CallLogRecordResult;\n(function (CallLogRecordTransport) {\n    CallLogRecordTransport[CallLogRecordTransport[\"PSTN\"] = 'PSTN'] = \"PSTN\";\n    CallLogRecordTransport[CallLogRecordTransport[\"VoIP\"] = 'VoIP'] = \"VoIP\";\n})(exports.CallLogRecordTransport || (exports.CallLogRecordTransport = {}));\nvar CallLogRecordTransport = exports.CallLogRecordTransport;\n(function (CallLogRecordBilling) {\n    CallLogRecordBilling[CallLogRecordBilling[\"costIncluded\"] = 'costIncluded'] = \"costIncluded\";\n    CallLogRecordBilling[CallLogRecordBilling[\"costPurchased\"] = 'costPurchased'] = \"costPurchased\";\n})(exports.CallLogRecordBilling || (exports.CallLogRecordBilling = {}));\nvar CallLogRecordBilling = exports.CallLogRecordBilling;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CallLogRecord\",\n *     \"imports\": [\n *         \"calllogcallerinfo.CallLogCallerInfo\",\n *         \"recordinginfo.RecordingInfo\",\n *         \"calllogrecordleginfo.CallLogRecordLegInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a cal log record\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a call log record\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a call session\",\n *             \"$name\": \"sessionId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Caller information\",\n *             \"$name\": \"from\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Callee information\",\n *             \"$name\": \"to\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordType\",\n *             \"enum\": [\n *                 \"Voice\",\n *                 \"Fax\"\n *             ],\n *             \"description\": \"Call type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordDirection\",\n *             \"enum\": [\n *                 \"Inbound\",\n *                 \"Outbound\"\n *             ],\n *             \"description\": \"Call direction\",\n *             \"$name\": \"direction\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordAction\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"Phone Call\",\n *                 \"Phone Login\",\n *                 \"Incoming Fax\",\n *                 \"Accept Call\",\n *                 \"FindMe\",\n *                 \"FollowMe\",\n *                 \"Outgoing Fax\",\n *                 \"Call Return\",\n *                 \"Calling Card\",\n *                 \"Ring Directly\",\n *                 \"RingOut Web\",\n *                 \"VoIP Call\",\n *                 \"RingOut PC\",\n *                 \"RingMe\",\n *                 \"Transfer\",\n *                 \"411 Info\",\n *                 \"Emergency\",\n *                 \"E911 Update\",\n *                 \"Support\",\n *                 \"RingOut Mobile\"\n *             ],\n *             \"description\": \"Action description of the call operation.\",\n *             \"$name\": \"action\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordResult\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"ResultInProgress\",\n *                 \"Missed\",\n *                 \"Call accepted\",\n *                 \"Voicemail\",\n *                 \"Rejected\",\n *                 \"Reply\",\n *                 \"Received\",\n *                 \"Receive Error\",\n *                 \"Fax on Demand\",\n *                 \"Partial Receive\",\n *                 \"Blocked\",\n *                 \"Call сonnected\",\n *                 \"No Answer\",\n *                 \"Busy\",\n *                 \"Send Error\",\n *                 \"Sent\",\n *                 \"No fax machine\",\n *                 \"ResultEmpty\",\n *                 \"Account\",\n *                 \"Suspended\",\n *                 \"Call Failed\",\n *                 \"Call Failure\",\n *                 \"Internal Error\",\n *                 \"IP Phone offline\",\n *                 \"Restricted Number\",\n *                 \"Wrong Number\",\n *                 \"Stopped\",\n *                 \"Hang up\",\n *                 \"Poor Line Quality\",\n *                 \"Partially Sent\",\n *                 \"International Disabled\",\n *                 \"International Restriction\",\n *                 \"Abandoned\",\n *                 \"Declined\",\n *                 \"Fax Receipt Error\",\n *                 \"Fax Send Error\"\n *             ],\n *             \"description\": \"Status description of the call operation.\",\n *             \"$name\": \"result\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"Date\",\n *             \"description\": \"Call start time\",\n *             \"$name\": \"startTime\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Call duration in seconds\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordTransport\",\n *             \"enum\": [\n *                 \"PSTN\",\n *                 \"VoIP\"\n *             ],\n *             \"description\": \"Call transport\",\n *             \"$name\": \"transport\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"any\",\n *             \"description\": \"Message attachment\",\n *             \"$name\": \"message\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RecordingInfo\",\n *             \"description\": \"Call recording data. Returned if the call is recorded\",\n *             \"$name\": \"recording\",\n *             \"isRequired\": false,\n *             \"type\": \"recordinginfo.RecordingInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordBilling\",\n *             \"enum\": [\n *                 \"costIncluded\",\n *                 \"costPurchased\"\n *             ],\n *             \"description\": \"Information on costs\",\n *             \"$name\": \"billing\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"calllogrecordleginfo.CallLogRecordLegInfo[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/CallLogRecordLegInfo\"\n *             },\n *             \"$name\": \"legs\",\n *             \"isRequired\": true\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/CallLogRecord.ts\n ** module id = 66\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar CallLogCallerInfo = (function (_super) {\n    __extends(CallLogCallerInfo, _super);\n    function CallLogCallerInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'phoneNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'extensionNumber', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'location', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'name', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return CallLogCallerInfo;\n})(model.Model);\nexports.CallLogCallerInfo = CallLogCallerInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CallLogCallerInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Phone number of a party. Usually it is a plain number including country and area code like 18661234567. But sometimes it could be returned from database with some formatting applied, for example (866)123-4567. This property is filled in all cases where parties communicate by means of global phone numbers, for example when calling to direct numbers or sending/receiving SMS\",\n *             \"$name\": \"phoneNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Extension short number (usually 3 or 4 digits). This property is filled when parties communicate by means of short internal numbers, for example when calling to other extension or sending/receiving Company Pager message\",\n *             \"$name\": \"extensionNumber\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Contains party location (city, state) if one can be determined from phoneNumber. This property is filled only when phoneNumber is not empty and server can calculate location information from it (for example, this information is unavailable for US toll-free numbers)\",\n *             \"$name\": \"location\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Symbolic name associated with a party. If the phone does not belong to the known extension, only the location is returned, the name is not determined then\",\n *             \"$name\": \"name\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/CallLogCallerInfo.ts\n ** module id = 67\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar RecordingInfo = (function (_super) {\n    __extends(RecordingInfo, _super);\n    function RecordingInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'type', Class: RecordingInfoType, isArray: false, isRequired: false },\n            { property: 'contentUri', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return RecordingInfo;\n})(model.Model);\nexports.RecordingInfo = RecordingInfo;\n(function (RecordingInfoType) {\n    RecordingInfoType[RecordingInfoType[\"Automatic\"] = 'Automatic'] = \"Automatic\";\n    RecordingInfoType[RecordingInfoType[\"OnDemand\"] = 'OnDemand'] = \"OnDemand\";\n})(exports.RecordingInfoType || (exports.RecordingInfoType = {}));\nvar RecordingInfoType = exports.RecordingInfoType;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"RecordingInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Internal identifier of the call recording\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Link to the call recording metadata resource\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"RecordingInfoType\",\n *             \"enum\": [\n *                 \"Automatic\",\n *                 \"OnDemand\"\n *             ],\n *             \"description\": \"Indicates recording mode used\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Link to the call recording binary content\",\n *             \"$name\": \"contentUri\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/RecordingInfo.ts\n ** module id = 68\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar calllogcallerinfo = require('./CallLogCallerInfo');\nvar recordinginfo = require('./RecordingInfo');\nvar CallLogRecordLegInfo = (function (_super) {\n    __extends(CallLogRecordLegInfo, _super);\n    function CallLogRecordLegInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'startTime', Class: Date, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'type', Class: CallLogRecordLegInfoType, isArray: false, isRequired: false },\n            { property: 'direction', Class: CallLogRecordLegInfoDirection, isArray: false, isRequired: false },\n            { property: 'action', Class: CallLogRecordLegInfoAction, isArray: false, isRequired: false },\n            { property: 'result', Class: CallLogRecordLegInfoResult, isArray: false, isRequired: false },\n            { property: 'from', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'to', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'transport', Class: CallLogRecordLegInfoTransport, isArray: false, isRequired: false },\n            { property: 'message', Class: null /* any */, isArray: false, isRequired: false },\n            { property: 'recording', Class: recordinginfo.RecordingInfo, isArray: false, isRequired: false },\n            { property: 'billing', Class: CallLogRecordLegInfoBilling, isArray: false, isRequired: false },\n            { property: 'legType', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return CallLogRecordLegInfo;\n})(model.Model);\nexports.CallLogRecordLegInfo = CallLogRecordLegInfo;\n(function (CallLogRecordLegInfoType) {\n    CallLogRecordLegInfoType[CallLogRecordLegInfoType[\"Voice\"] = 'Voice'] = \"Voice\";\n    CallLogRecordLegInfoType[CallLogRecordLegInfoType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.CallLogRecordLegInfoType || (exports.CallLogRecordLegInfoType = {}));\nvar CallLogRecordLegInfoType = exports.CallLogRecordLegInfoType;\n(function (CallLogRecordLegInfoDirection) {\n    CallLogRecordLegInfoDirection[CallLogRecordLegInfoDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    CallLogRecordLegInfoDirection[CallLogRecordLegInfoDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.CallLogRecordLegInfoDirection || (exports.CallLogRecordLegInfoDirection = {}));\nvar CallLogRecordLegInfoDirection = exports.CallLogRecordLegInfoDirection;\n(function (CallLogRecordLegInfoAction) {\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"PhoneCall\"] = 'Phone Call'] = \"PhoneCall\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"PhoneLogin\"] = 'Phone Login'] = \"PhoneLogin\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"IncomingFax\"] = 'Incoming Fax'] = \"IncomingFax\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"AcceptCall\"] = 'Accept Call'] = \"AcceptCall\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"FindMe\"] = 'FindMe'] = \"FindMe\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"FollowMe\"] = 'FollowMe'] = \"FollowMe\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"OutgoingFax\"] = 'Outgoing Fax'] = \"OutgoingFax\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"CallReturn\"] = 'Call Return'] = \"CallReturn\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"CallingCard\"] = 'Calling Card'] = \"CallingCard\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingDirectly\"] = 'Ring Directly'] = \"RingDirectly\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingOutWeb\"] = 'RingOut Web'] = \"RingOutWeb\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"VoIPCall\"] = 'VoIP Call'] = \"VoIPCall\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingOutPC\"] = 'RingOut PC'] = \"RingOutPC\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingMe\"] = 'RingMe'] = \"RingMe\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Transfer\"] = 'Transfer'] = \"Transfer\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction['411Info'] = '411 Info'] = '411Info';\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Emergency\"] = 'Emergency'] = \"Emergency\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction['E911Update'] = 'E911 Update'] = 'E911Update';\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"Support\"] = 'Support'] = \"Support\";\n    CallLogRecordLegInfoAction[CallLogRecordLegInfoAction[\"RingOutMobile\"] = 'RingOut Mobile'] = \"RingOutMobile\";\n})(exports.CallLogRecordLegInfoAction || (exports.CallLogRecordLegInfoAction = {}));\nvar CallLogRecordLegInfoAction = exports.CallLogRecordLegInfoAction;\n(function (CallLogRecordLegInfoResult) {\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"ResultInProgress\"] = 'ResultInProgress'] = \"ResultInProgress\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Missed\"] = 'Missed'] = \"Missed\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Callaccepted\"] = 'Call accepted'] = \"Callaccepted\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Rejected\"] = 'Rejected'] = \"Rejected\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Reply\"] = 'Reply'] = \"Reply\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Received\"] = 'Received'] = \"Received\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"ReceiveError\"] = 'Receive Error'] = \"ReceiveError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"FaxonDemand\"] = 'Fax on Demand'] = \"FaxonDemand\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"PartialReceive\"] = 'Partial Receive'] = \"PartialReceive\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Blocked\"] = 'Blocked'] = \"Blocked\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult['Callсonnected'] = 'Call сonnected'] = 'Callсonnected';\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"NoAnswer\"] = 'No Answer'] = \"NoAnswer\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Busy\"] = 'Busy'] = \"Busy\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"SendError\"] = 'Send Error'] = \"SendError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Sent\"] = 'Sent'] = \"Sent\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Nofaxmachine\"] = 'No fax machine'] = \"Nofaxmachine\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"ResultEmpty\"] = 'ResultEmpty'] = \"ResultEmpty\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Account\"] = 'Account'] = \"Account\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"CallFailed\"] = 'Call Failed'] = \"CallFailed\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"CallFailure\"] = 'Call Failure'] = \"CallFailure\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"InternalError\"] = 'Internal Error'] = \"InternalError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"IPPhoneoffline\"] = 'IP Phone offline'] = \"IPPhoneoffline\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"RestrictedNumber\"] = 'Restricted Number'] = \"RestrictedNumber\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"WrongNumber\"] = 'Wrong Number'] = \"WrongNumber\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Stopped\"] = 'Stopped'] = \"Stopped\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Hangup\"] = 'Hang up'] = \"Hangup\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"PoorLineQuality\"] = 'Poor Line Quality'] = \"PoorLineQuality\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"PartiallySent\"] = 'Partially Sent'] = \"PartiallySent\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"InternationalDisabled\"] = 'International Disabled'] = \"InternationalDisabled\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"InternationalRestriction\"] = 'International Restriction'] = \"InternationalRestriction\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Abandoned\"] = 'Abandoned'] = \"Abandoned\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"Declined\"] = 'Declined'] = \"Declined\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"FaxReceiptError\"] = 'Fax Receipt Error'] = \"FaxReceiptError\";\n    CallLogRecordLegInfoResult[CallLogRecordLegInfoResult[\"FaxSendError\"] = 'Fax Send Error'] = \"FaxSendError\";\n})(exports.CallLogRecordLegInfoResult || (exports.CallLogRecordLegInfoResult = {}));\nvar CallLogRecordLegInfoResult = exports.CallLogRecordLegInfoResult;\n(function (CallLogRecordLegInfoTransport) {\n    CallLogRecordLegInfoTransport[CallLogRecordLegInfoTransport[\"PSTN\"] = 'PSTN'] = \"PSTN\";\n    CallLogRecordLegInfoTransport[CallLogRecordLegInfoTransport[\"VoIP\"] = 'VoIP'] = \"VoIP\";\n})(exports.CallLogRecordLegInfoTransport || (exports.CallLogRecordLegInfoTransport = {}));\nvar CallLogRecordLegInfoTransport = exports.CallLogRecordLegInfoTransport;\n(function (CallLogRecordLegInfoBilling) {\n    CallLogRecordLegInfoBilling[CallLogRecordLegInfoBilling[\"costIncluded\"] = 'costIncluded'] = \"costIncluded\";\n    CallLogRecordLegInfoBilling[CallLogRecordLegInfoBilling[\"costPurchased\"] = 'costPurchased'] = \"costPurchased\";\n})(exports.CallLogRecordLegInfoBilling || (exports.CallLogRecordLegInfoBilling = {}));\nvar CallLogRecordLegInfoBilling = exports.CallLogRecordLegInfoBilling;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"CallLogRecordLegInfo\",\n *     \"imports\": [\n *         \"calllogcallerinfo.CallLogCallerInfo\",\n *         \"recordinginfo.RecordingInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"Date\",\n *             \"description\": \"Call start time\",\n *             \"$name\": \"startTime\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Call duration in seconds\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoType\",\n *             \"enum\": [\n *                 \"Voice\",\n *                 \"Fax\"\n *             ],\n *             \"description\": \"Call type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoDirection\",\n *             \"enum\": [\n *                 \"Inbound\",\n *                 \"Outbound\"\n *             ],\n *             \"description\": \"Call direction\",\n *             \"$name\": \"direction\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoAction\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"Phone Call\",\n *                 \"Phone Login\",\n *                 \"Incoming Fax\",\n *                 \"Accept Call\",\n *                 \"FindMe\",\n *                 \"FollowMe\",\n *                 \"Outgoing Fax\",\n *                 \"Call Return\",\n *                 \"Calling Card\",\n *                 \"Ring Directly\",\n *                 \"RingOut Web\",\n *                 \"VoIP Call\",\n *                 \"RingOut PC\",\n *                 \"RingMe\",\n *                 \"Transfer\",\n *                 \"411 Info\",\n *                 \"Emergency\",\n *                 \"E911 Update\",\n *                 \"Support\",\n *                 \"RingOut Mobile\"\n *             ],\n *             \"description\": \"Action description of the call operation.\",\n *             \"$name\": \"action\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoResult\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"ResultInProgress\",\n *                 \"Missed\",\n *                 \"Call accepted\",\n *                 \"Voicemail\",\n *                 \"Rejected\",\n *                 \"Reply\",\n *                 \"Received\",\n *                 \"Receive Error\",\n *                 \"Fax on Demand\",\n *                 \"Partial Receive\",\n *                 \"Blocked\",\n *                 \"Call сonnected\",\n *                 \"No Answer\",\n *                 \"Busy\",\n *                 \"Send Error\",\n *                 \"Sent\",\n *                 \"No fax machine\",\n *                 \"ResultEmpty\",\n *                 \"Account\",\n *                 \"Suspended\",\n *                 \"Call Failed\",\n *                 \"Call Failure\",\n *                 \"Internal Error\",\n *                 \"IP Phone offline\",\n *                 \"Restricted Number\",\n *                 \"Wrong Number\",\n *                 \"Stopped\",\n *                 \"Hang up\",\n *                 \"Poor Line Quality\",\n *                 \"Partially Sent\",\n *                 \"International Disabled\",\n *                 \"International Restriction\",\n *                 \"Abandoned\",\n *                 \"Declined\",\n *                 \"Fax Receipt Error\",\n *                 \"Fax Send Error\"\n *             ],\n *             \"description\": \"Status description of the call operation.\",\n *             \"$name\": \"result\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Caller information\",\n *             \"$name\": \"from\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Callee information\",\n *             \"$name\": \"to\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoTransport\",\n *             \"enum\": [\n *                 \"PSTN\",\n *                 \"VoIP\"\n *             ],\n *             \"description\": \"Call transport\",\n *             \"$name\": \"transport\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"any\",\n *             \"description\": \"Message attachment\",\n *             \"$name\": \"message\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RecordingInfo\",\n *             \"description\": \"Call recording data. Returned if the call is recorded\",\n *             \"$name\": \"recording\",\n *             \"isRequired\": false,\n *             \"type\": \"recordinginfo.RecordingInfo\"\n *         },\n *         {\n *             \"type\": \"CallLogRecordLegInfoBilling\",\n *             \"enum\": [\n *                 \"costIncluded\",\n *                 \"costPurchased\"\n *             ],\n *             \"description\": \"Information on costs\",\n *             \"$name\": \"billing\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Leg type\",\n *             \"$name\": \"legType\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/CallLogRecordLegInfo.ts\n ** module id = 69\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar PagingInfo = (function (_super) {\n    __extends(PagingInfo, _super);\n    function PagingInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'page', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'perPage', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'pageStart', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'pageEnd', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'totalPages', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'totalElements', Class: null /* number */, isArray: false, isRequired: false }\n        ];\n    }\n    return PagingInfo;\n})(model.Model);\nexports.PagingInfo = PagingInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"PagingInfo\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)\",\n *             \"$name\": \"page\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied\",\n *             \"$name\": \"perPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty\",\n *             \"$name\": \"pageStart\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty\",\n *             \"$name\": \"pageEnd\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The total number of pages in a dataset. May be omitted for some resources due to performance reasons\",\n *             \"$name\": \"totalPages\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"The total number of elements in a dataset. May be omitted for some resource due to performance reasons\",\n *             \"$name\": \"totalElements\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/PagingInfo.ts\n ** module id = 70\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar navigationinfopage = require('./NavigationInfoPage');\nvar NavigationInfo = (function (_super) {\n    __extends(NavigationInfo, _super);\n    function NavigationInfo(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'firstPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false },\n            { property: 'nextPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false },\n            { property: 'previousPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false },\n            { property: 'lastPage', Class: navigationinfopage.NavigationInfoPage, isArray: false, isRequired: false }\n        ];\n    }\n    return NavigationInfo;\n})(model.Model);\nexports.NavigationInfo = NavigationInfo;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"NavigationInfo\",\n *     \"imports\": [\n *         \"navigationinfopage.NavigationInfoPage\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the first page of the list\",\n *             \"$name\": \"firstPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the next page of the list\",\n *             \"$name\": \"nextPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the previous page of the list\",\n *             \"$name\": \"previousPage\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"navigationinfopage.NavigationInfoPage\",\n *             \"description\": \"Canonical URI for the last page of the list\",\n *             \"$name\": \"lastPage\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/NavigationInfo.ts\n ** module id = 71\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar NavigationInfoPage = (function (_super) {\n    __extends(NavigationInfoPage, _super);\n    function NavigationInfoPage(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false }\n        ];\n    }\n    return NavigationInfoPage;\n})(model.Model);\nexports.NavigationInfoPage = NavigationInfoPage;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"NavigationInfoPage\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/NavigationInfoPage.ts\n ** module id = 72\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar calllogrecord = require('./CallLogRecord');\nvar paginginfo = require('./PagingInfo');\nvar navigationinfo = require('./NavigationInfo');\nvar AccountActiveCallsResponse = (function (_super) {\n    __extends(AccountActiveCallsResponse, _super);\n    function AccountActiveCallsResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'records', Class: calllogrecord.CallLogRecord, isArray: true, isRequired: true },\n            { property: 'paging', Class: paginginfo.PagingInfo, isArray: false, isRequired: true },\n            { property: 'navigation', Class: navigationinfo.NavigationInfo, isArray: false, isRequired: true }\n        ];\n    }\n    return AccountActiveCallsResponse;\n})(model.Model);\nexports.AccountActiveCallsResponse = AccountActiveCallsResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"AccountActiveCallsResponse\",\n *     \"imports\": [\n *         \"calllogrecord.CallLogRecord\",\n *         \"paginginfo.PagingInfo\",\n *         \"navigationinfo.NavigationInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"calllogrecord.CallLogRecord[]\",\n *             \"items\": {\n *                 \"$ref\": \"#/definitions/CallLogRecord\"\n *             },\n *             \"$name\": \"records\",\n *             \"isRequired\": true\n *         },\n *         {\n *             \"$ref\": \"#/definitions/PagingInfo\",\n *             \"description\": \"Information on paging\",\n *             \"$name\": \"paging\",\n *             \"isRequired\": true,\n *             \"type\": \"paginginfo.PagingInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/NavigationInfo\",\n *             \"description\": \"Information on navigation\",\n *             \"$name\": \"navigation\",\n *             \"isRequired\": true,\n *             \"type\": \"navigationinfo.NavigationInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/AccountActiveCallsResponse.ts\n ** module id = 73\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar navigationinfo = require('./NavigationInfo');\nvar ExtensionActiveCallsResponse = (function (_super) {\n    __extends(ExtensionActiveCallsResponse, _super);\n    function ExtensionActiveCallsResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'perPage', Class: navigationinfo.NavigationInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return ExtensionActiveCallsResponse;\n})(model.Model);\nexports.ExtensionActiveCallsResponse = ExtensionActiveCallsResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"ExtensionActiveCallsResponse\",\n *     \"imports\": [\n *         \"navigationinfo.NavigationInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"$ref\": \"#/definitions/NavigationInfo\",\n *             \"description\": \"Standard collection metadata\",\n *             \"$name\": \"perPage\",\n *             \"isRequired\": false,\n *             \"type\": \"navigationinfo.NavigationInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/ExtensionActiveCallsResponse.ts\n ** module id = 74\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar calllogcallerinfo = require('./CallLogCallerInfo');\nvar recordinginfo = require('./RecordingInfo');\nvar GetExtensionCallLogRecordResponse = (function (_super) {\n    __extends(GetExtensionCallLogRecordResponse, _super);\n    function GetExtensionCallLogRecordResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'uri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'sessionId', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'from', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'to', Class: calllogcallerinfo.CallLogCallerInfo, isArray: false, isRequired: false },\n            { property: 'type', Class: GetExtensionCallLogRecordResponseType, isArray: false, isRequired: false },\n            { property: 'direction', Class: GetExtensionCallLogRecordResponseDirection, isArray: false, isRequired: false },\n            { property: 'action', Class: GetExtensionCallLogRecordResponseAction, isArray: false, isRequired: false },\n            { property: 'result', Class: GetExtensionCallLogRecordResponseResult, isArray: false, isRequired: false },\n            { property: 'startTime', Class: Date, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'recording', Class: recordinginfo.RecordingInfo, isArray: false, isRequired: false }\n        ];\n    }\n    return GetExtensionCallLogRecordResponse;\n})(model.Model);\nexports.GetExtensionCallLogRecordResponse = GetExtensionCallLogRecordResponse;\n(function (GetExtensionCallLogRecordResponseType) {\n    GetExtensionCallLogRecordResponseType[GetExtensionCallLogRecordResponseType[\"Voice\"] = 'Voice'] = \"Voice\";\n    GetExtensionCallLogRecordResponseType[GetExtensionCallLogRecordResponseType[\"Fax\"] = 'Fax'] = \"Fax\";\n})(exports.GetExtensionCallLogRecordResponseType || (exports.GetExtensionCallLogRecordResponseType = {}));\nvar GetExtensionCallLogRecordResponseType = exports.GetExtensionCallLogRecordResponseType;\n(function (GetExtensionCallLogRecordResponseDirection) {\n    GetExtensionCallLogRecordResponseDirection[GetExtensionCallLogRecordResponseDirection[\"Inbound\"] = 'Inbound'] = \"Inbound\";\n    GetExtensionCallLogRecordResponseDirection[GetExtensionCallLogRecordResponseDirection[\"Outbound\"] = 'Outbound'] = \"Outbound\";\n})(exports.GetExtensionCallLogRecordResponseDirection || (exports.GetExtensionCallLogRecordResponseDirection = {}));\nvar GetExtensionCallLogRecordResponseDirection = exports.GetExtensionCallLogRecordResponseDirection;\n(function (GetExtensionCallLogRecordResponseAction) {\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"PhoneCall\"] = 'Phone Call'] = \"PhoneCall\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"PhoneLogin\"] = 'Phone Login'] = \"PhoneLogin\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"IncomingFax\"] = 'Incoming Fax'] = \"IncomingFax\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"AcceptCall\"] = 'Accept Call'] = \"AcceptCall\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"FindMe\"] = 'FindMe'] = \"FindMe\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"FollowMe\"] = 'FollowMe'] = \"FollowMe\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"OutgoingFax\"] = 'Outgoing Fax'] = \"OutgoingFax\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"CallReturn\"] = 'Call Return'] = \"CallReturn\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"CallingCard\"] = 'Calling Card'] = \"CallingCard\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingDirectly\"] = 'Ring Directly'] = \"RingDirectly\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingOutWeb\"] = 'RingOut Web'] = \"RingOutWeb\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"VoIPCall\"] = 'VoIP Call'] = \"VoIPCall\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingOutPC\"] = 'RingOut PC'] = \"RingOutPC\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingMe\"] = 'RingMe'] = \"RingMe\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Transfer\"] = 'Transfer'] = \"Transfer\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction['411Info'] = '411 Info'] = '411Info';\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Emergency\"] = 'Emergency'] = \"Emergency\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction['E911Update'] = 'E911 Update'] = 'E911Update';\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"Support\"] = 'Support'] = \"Support\";\n    GetExtensionCallLogRecordResponseAction[GetExtensionCallLogRecordResponseAction[\"RingOutMobile\"] = 'RingOut Mobile'] = \"RingOutMobile\";\n})(exports.GetExtensionCallLogRecordResponseAction || (exports.GetExtensionCallLogRecordResponseAction = {}));\nvar GetExtensionCallLogRecordResponseAction = exports.GetExtensionCallLogRecordResponseAction;\n(function (GetExtensionCallLogRecordResponseResult) {\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Unknown\"] = 'Unknown'] = \"Unknown\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"ResultInProgress\"] = 'ResultInProgress'] = \"ResultInProgress\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Missed\"] = 'Missed'] = \"Missed\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Callaccepted\"] = 'Call accepted'] = \"Callaccepted\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Voicemail\"] = 'Voicemail'] = \"Voicemail\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Rejected\"] = 'Rejected'] = \"Rejected\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Reply\"] = 'Reply'] = \"Reply\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Received\"] = 'Received'] = \"Received\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"ReceiveError\"] = 'Receive Error'] = \"ReceiveError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"FaxonDemand\"] = 'Fax on Demand'] = \"FaxonDemand\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"PartialReceive\"] = 'Partial Receive'] = \"PartialReceive\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Blocked\"] = 'Blocked'] = \"Blocked\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult['Callсonnected'] = 'Call сonnected'] = 'Callсonnected';\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"NoAnswer\"] = 'No Answer'] = \"NoAnswer\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Busy\"] = 'Busy'] = \"Busy\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"SendError\"] = 'Send Error'] = \"SendError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Sent\"] = 'Sent'] = \"Sent\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Nofaxmachine\"] = 'No fax machine'] = \"Nofaxmachine\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"ResultEmpty\"] = 'ResultEmpty'] = \"ResultEmpty\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Account\"] = 'Account'] = \"Account\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Suspended\"] = 'Suspended'] = \"Suspended\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"CallFailed\"] = 'Call Failed'] = \"CallFailed\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"CallFailure\"] = 'Call Failure'] = \"CallFailure\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"InternalError\"] = 'Internal Error'] = \"InternalError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"IPPhoneoffline\"] = 'IP Phone offline'] = \"IPPhoneoffline\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"RestrictedNumber\"] = 'Restricted Number'] = \"RestrictedNumber\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"WrongNumber\"] = 'Wrong Number'] = \"WrongNumber\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Stopped\"] = 'Stopped'] = \"Stopped\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Hangup\"] = 'Hang up'] = \"Hangup\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"PoorLineQuality\"] = 'Poor Line Quality'] = \"PoorLineQuality\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"PartiallySent\"] = 'Partially Sent'] = \"PartiallySent\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"InternationalDisabled\"] = 'International Disabled'] = \"InternationalDisabled\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"InternationalRestriction\"] = 'International Restriction'] = \"InternationalRestriction\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Abandoned\"] = 'Abandoned'] = \"Abandoned\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"Declined\"] = 'Declined'] = \"Declined\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"FaxReceiptError\"] = 'Fax Receipt Error'] = \"FaxReceiptError\";\n    GetExtensionCallLogRecordResponseResult[GetExtensionCallLogRecordResponseResult[\"FaxSendError\"] = 'Fax Send Error'] = \"FaxSendError\";\n})(exports.GetExtensionCallLogRecordResponseResult || (exports.GetExtensionCallLogRecordResponseResult = {}));\nvar GetExtensionCallLogRecordResponseResult = exports.GetExtensionCallLogRecordResponseResult;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetExtensionCallLogRecordResponse\",\n *     \"imports\": [\n *         \"calllogcallerinfo.CallLogCallerInfo\",\n *         \"recordinginfo.RecordingInfo\"\n *     ],\n *     \"properties\": [\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a cal log record\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Canonical URI of a call log record\",\n *             \"$name\": \"uri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Internal identifier of a call session\",\n *             \"$name\": \"sessionId\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Caller information\",\n *             \"$name\": \"from\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"$ref\": \"#/definitions/CallLogCallerInfo\",\n *             \"description\": \"Callee information\",\n *             \"$name\": \"to\",\n *             \"isRequired\": false,\n *             \"type\": \"calllogcallerinfo.CallLogCallerInfo\"\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseType\",\n *             \"enum\": [\n *                 \"Voice\",\n *                 \"Fax\"\n *             ],\n *             \"description\": \"Call type\",\n *             \"$name\": \"type\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseDirection\",\n *             \"enum\": [\n *                 \"Inbound\",\n *                 \"Outbound\"\n *             ],\n *             \"description\": \"Call direction\",\n *             \"$name\": \"direction\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseAction\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"Phone Call\",\n *                 \"Phone Login\",\n *                 \"Incoming Fax\",\n *                 \"Accept Call\",\n *                 \"FindMe\",\n *                 \"FollowMe\",\n *                 \"Outgoing Fax\",\n *                 \"Call Return\",\n *                 \"Calling Card\",\n *                 \"Ring Directly\",\n *                 \"RingOut Web\",\n *                 \"VoIP Call\",\n *                 \"RingOut PC\",\n *                 \"RingMe\",\n *                 \"Transfer\",\n *                 \"411 Info\",\n *                 \"Emergency\",\n *                 \"E911 Update\",\n *                 \"Support\",\n *                 \"RingOut Mobile\"\n *             ],\n *             \"description\": \"Action description of the call operation.\",\n *             \"$name\": \"action\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"GetExtensionCallLogRecordResponseResult\",\n *             \"enum\": [\n *                 \"Unknown\",\n *                 \"ResultInProgress\",\n *                 \"Missed\",\n *                 \"Call accepted\",\n *                 \"Voicemail\",\n *                 \"Rejected\",\n *                 \"Reply\",\n *                 \"Received\",\n *                 \"Receive Error\",\n *                 \"Fax on Demand\",\n *                 \"Partial Receive\",\n *                 \"Blocked\",\n *                 \"Call сonnected\",\n *                 \"No Answer\",\n *                 \"Busy\",\n *                 \"Send Error\",\n *                 \"Sent\",\n *                 \"No fax machine\",\n *                 \"ResultEmpty\",\n *                 \"Account\",\n *                 \"Suspended\",\n *                 \"Call Failed\",\n *                 \"Call Failure\",\n *                 \"Internal Error\",\n *                 \"IP Phone offline\",\n *                 \"Restricted Number\",\n *                 \"Wrong Number\",\n *                 \"Stopped\",\n *                 \"Hang up\",\n *                 \"Poor Line Quality\",\n *                 \"Partially Sent\",\n *                 \"International Disabled\",\n *                 \"International Restriction\",\n *                 \"Abandoned\",\n *                 \"Declined\",\n *                 \"Fax Receipt Error\",\n *                 \"Fax Send Error\"\n *             ],\n *             \"description\": \"Status description of the call operation.\",\n *             \"$name\": \"result\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"Date\",\n *             \"description\": \"Call start time\",\n *             \"$name\": \"startTime\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Call duration in seconds\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"$ref\": \"#/definitions/RecordingInfo\",\n *             \"description\": \"Call recording data. Returned if the call is recorded\",\n *             \"$name\": \"recording\",\n *             \"isRequired\": false,\n *             \"type\": \"recordinginfo.RecordingInfo\"\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/GetExtensionCallLogRecordResponse.ts\n ** module id = 75\n ** module chunks = 0\n **/","var __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar model = require('../Model');\nvar GetCallRecordingResponse = (function (_super) {\n    __extends(GetCallRecordingResponse, _super);\n    function GetCallRecordingResponse(data) {\n        _super.call(this, data);\n        this._propertyMappings = [\n            { property: 'id', Class: null /* number */, isArray: false, isRequired: false },\n            { property: 'contentUri', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'contentType', Class: null /* string */, isArray: false, isRequired: false },\n            { property: 'duration', Class: null /* number */, isArray: false, isRequired: false }\n        ];\n    }\n    return GetCallRecordingResponse;\n})(model.Model);\nexports.GetCallRecordingResponse = GetCallRecordingResponse;\n/**\n * Swagger definition JSON used for CodeGen:\n *\n * {\n *     \"name\": \"GetCallRecordingResponse\",\n *     \"imports\": [],\n *     \"properties\": [\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Internal identifier of the call recording\",\n *             \"$name\": \"id\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Link to the call recording binary content\",\n *             \"$name\": \"contentUri\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"string\",\n *             \"description\": \"Call recording file format. Supported format is audio/x-wav\",\n *             \"$name\": \"contentType\",\n *             \"isRequired\": false\n *         },\n *         {\n *             \"type\": \"number\",\n *             \"description\": \"Recorded call duration\",\n *             \"$name\": \"duration\",\n *             \"isRequired\": false\n *         }\n *     ]\n * }\n */ \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/models/GetCallRecordingResponse.ts\n ** module id = 76\n ** module chunks = 0\n **/","(function(global){\n\n//\n// Check for native Promise and it has correct interface\n//\n\nvar NativePromise = global['Promise'];\nvar nativePromiseSupported =\n  NativePromise &&\n  // Some of these methods are missing from\n  // Firefox/Chrome experimental implementations\n  'resolve' in NativePromise &&\n  'reject' in NativePromise &&\n  'all' in NativePromise &&\n  'race' in NativePromise &&\n  // Older version of the spec had a resolver object\n  // as the arg rather than a function\n  (function(){\n    var resolve;\n    new NativePromise(function(r){ resolve = r; });\n    return typeof resolve === 'function';\n  })();\n\n\n//\n// export if necessary\n//\n\nif (typeof exports !== 'undefined' && exports)\n{\n  // node.js\n  exports.Promise = Promise || NativePromise;\n}\nelse\n{\n  // in browser add to global\n  if (!nativePromiseSupported)\n    global['Promise'] = Promise;\n}\n\n\n//\n// Polyfill\n//\n\nvar PENDING = 'pending';\nvar SEALED = 'sealed';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function(){};\n\n// async calls\nvar asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush(){\n  // run promise callbacks\n  for (var i = 0; i < asyncQueue.length; i++)\n    asyncQueue[i][0](asyncQueue[i][1]);\n\n  // reset async asyncQueue\n  asyncQueue = [];\n  asyncTimer = false;\n}\n\nfunction asyncCall(callback, arg){\n  asyncQueue.push([callback, arg]);\n\n  if (!asyncTimer)\n  {\n    asyncTimer = true;\n    asyncSetTimer(asyncFlush, 0);\n  }\n}\n\n\nfunction invokeResolver(resolver, promise) {\n  function resolvePromise(value) {\n    resolve(promise, value);\n  }\n\n  function rejectPromise(reason) {\n    reject(promise, reason);\n  }\n\n  try {\n    resolver(resolvePromise, rejectPromise);\n  } catch(e) {\n    rejectPromise(e);\n  }\n}\n\nfunction invokeCallback(subscriber){\n  var owner = subscriber.owner;\n  var settled = owner.state_;\n  var value = owner.data_;  \n  var callback = subscriber[settled];\n  var promise = subscriber.then;\n\n  if (typeof callback === 'function')\n  {\n    settled = FULFILLED;\n    try {\n      value = callback(value);\n    } catch(e) {\n      reject(promise, e);\n    }\n  }\n\n  if (!handleThenable(promise, value))\n  {\n    if (settled === FULFILLED)\n      resolve(promise, value);\n\n    if (settled === REJECTED)\n      reject(promise, value);\n  }\n}\n\nfunction handleThenable(promise, value) {\n  var resolved;\n\n  try {\n    if (promise === value)\n      throw new TypeError('A promises callback cannot return that same promise.');\n\n    if (value && (typeof value === 'function' || typeof value === 'object'))\n    {\n      var then = value.then;  // then should be retrived only once\n\n      if (typeof then === 'function')\n      {\n        then.call(value, function(val){\n          if (!resolved)\n          {\n            resolved = true;\n\n            if (value !== val)\n              resolve(promise, val);\n            else\n              fulfill(promise, val);\n          }\n        }, function(reason){\n          if (!resolved)\n          {\n            resolved = true;\n\n            reject(promise, reason);\n          }\n        });\n\n        return true;\n      }\n    }\n  } catch (e) {\n    if (!resolved)\n      reject(promise, e);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolve(promise, value){\n  if (promise === value || !handleThenable(promise, value))\n    fulfill(promise, value);\n}\n\nfunction fulfill(promise, value){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = value;\n\n    asyncCall(publishFulfillment, promise);\n  }\n}\n\nfunction reject(promise, reason){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = reason;\n\n    asyncCall(publishRejection, promise);\n  }\n}\n\nfunction publish(promise) {\n  promise.then_ = promise.then_.forEach(invokeCallback);\n}\n\nfunction publishFulfillment(promise){\n  promise.state_ = FULFILLED;\n  publish(promise);\n}\n\nfunction publishRejection(promise){\n  promise.state_ = REJECTED;\n  publish(promise);\n}\n\n/**\n* @class\n*/\nfunction Promise(resolver){\n  if (typeof resolver !== 'function')\n    throw new TypeError('Promise constructor takes a function argument');\n\n  if (this instanceof Promise === false)\n    throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\n  this.then_ = [];\n\n  invokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n  constructor: Promise,\n\n  state_: PENDING,\n  then_: null,\n  data_: undefined,\n\n  then: function(onFulfillment, onRejection){\n    var subscriber = {\n      owner: this,\n      then: new this.constructor(NOOP),\n      fulfilled: onFulfillment,\n      rejected: onRejection\n    };\n\n    if (this.state_ === FULFILLED || this.state_ === REJECTED)\n    {\n      // already resolved, call callback async\n      asyncCall(invokeCallback, subscriber);\n    }\n    else\n    {\n      // subscribe\n      this.then_.push(subscriber);\n    }\n\n    return subscriber.then;\n  },\n\n  'catch': function(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nPromise.all = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.all().');\n\n  return new Class(function(resolve, reject){\n    var results = [];\n    var remaining = 0;\n\n    function resolver(index){\n      remaining++;\n      return function(value){\n        results[index] = value;\n        if (!--remaining)\n          resolve(results);\n      };\n    }\n\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolver(i), reject);\n      else\n        results[i] = promise;\n    }\n\n    if (!remaining)\n      resolve(results);\n  });\n};\n\nPromise.race = function(promises){\n  var Class = this;\n\n  if (!Array.isArray(promises))\n    throw new TypeError('You must pass an array to Promise.race().');\n\n  return new Class(function(resolve, reject) {\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolve, reject);\n      else\n        resolve(promise);\n    }\n  });\n};\n\nPromise.resolve = function(value){\n  var Class = this;\n\n  if (value && typeof value === 'object' && value.constructor === Class)\n    return value;\n\n  return new Class(function(resolve){\n    resolve(value);\n  });\n};\n\nPromise.reject = function(reason){\n  var Class = this;\n\n  return new Class(function(resolve, reject){\n    reject(reason);\n  });\n};\n\n})(new Function('return this')());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bower_components/es6-promise-polyfill/promise.js\n ** module id = 77\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 78\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/node-libs-browser/~/process/browser.js\n ** module id = 79\n ** module chunks = 0\n **/","// Version: 3.7.11\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     JSON     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\n(window['JSON'] && window['JSON']['stringify']) || (function () {\n    window['JSON'] || (window['JSON'] = {});\n\n    function toJSON(key) {\n        try      { return this.valueOf() }\n        catch(e) { return null }\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ?\n            '\"' + string.replace(escapable, function (a) {\n                var c = meta[a];\n                return typeof c === 'string' ? c :\n                    '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + '\"' :\n            '\"' + string + '\"';\n    }\n\n    function str(key, holder) {\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            partial,\n            mind  = gap,\n            value = holder[key];\n\n        if (value && typeof value === 'object') {\n            value = toJSON.call( value, key );\n        }\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n        switch (typeof value) {\n        case 'string':\n            return quote(value);\n\n        case 'number':\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n            return String(value);\n\n        case 'object':\n\n            if (!value) {\n                return 'null';\n            }\n\n            gap += indent;\n            partial = [];\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n                v = partial.length === 0 ? '[]' :\n                    gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                                mind + ']' :\n                          '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? '{}' :\n                gap ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON['stringify'] !== 'function') {\n        JSON['stringify'] = function (value, replacer, space) {\n            var i;\n            gap = '';\n            indent = '';\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                     typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n            return str('', {'': value});\n        };\n    }\n\n    if (typeof JSON['parse'] !== 'function') {\n        // JSON is parsed on the server for security.\n        JSON['parse'] = function (text) {return eval('('+text+')')};\n    }\n}());\nvar NOW             = 1\n,   READY           = false\n,   READY_BUFFER    = []\n,   PRESENCE_SUFFIX = '-pnpres'\n,   DEF_WINDOWING   = 10     // MILLISECONDS.\n,   DEF_TIMEOUT     = 10000  // MILLISECONDS.\n,   DEF_SUB_TIMEOUT = 310    // SECONDS.\n,   DEF_KEEPALIVE   = 60     // SECONDS (FOR TIMESYNC).\n,   SECOND          = 1000   // A THOUSAND MILLISECONDS.\n,   URLBIT          = '/'\n,   PARAMSBIT       = '&'\n,   PRESENCE_HB_THRESHOLD = 5\n,   PRESENCE_HB_DEFAULT  = 30\n,   SDK_VER         = '3.7.11'\n,   REPL            = /{([\\w\\-]+)}/g;\n\n/**\n * UTILITIES\n */\nfunction unique() { return'x'+ ++NOW+''+(+new Date) }\nfunction rnow()   { return+new Date }\n\n/**\n * NEXTORIGIN\n * ==========\n * var next_origin = nextorigin();\n */\nvar nextorigin = (function() {\n    var max = 20\n    ,   ori = Math.floor(Math.random() * max);\n    return function( origin, failover ) {\n        return origin.indexOf('pubsub.') > 0\n            && origin.replace(\n             'pubsub', 'ps' + (\n                failover ? generate_uuid().split('-')[0] :\n                (++ori < max? ori : ori=1)\n            ) ) || origin;\n    }\n})();\n\n\n/**\n * Build Url\n * =======\n *\n */\nfunction build_url( url_components, url_params ) {\n    var url    = url_components.join(URLBIT)\n    ,   params = [];\n\n    if (!url_params) return url;\n\n    each( url_params, function( key, value ) {\n        var value_str = (typeof value == 'object')?JSON['stringify'](value):value;\n        (typeof value != 'undefined' &&\n            value != null && encode(value_str).length > 0\n        ) && params.push(key + \"=\" + encode(value_str));\n    } );\n\n    url += \"?\" + params.join(PARAMSBIT);\n    return url;\n}\n\n/**\n * UPDATER\n * =======\n * var timestamp = unique();\n */\nfunction updater( fun, rate ) {\n    var timeout\n    ,   last   = 0\n    ,   runnit = function() {\n        if (last + rate > rnow()) {\n            clearTimeout(timeout);\n            timeout = setTimeout( runnit, rate );\n        }\n        else {\n            last = rnow();\n            fun();\n        }\n    };\n\n    return runnit;\n}\n\n/**\n * GREP\n * ====\n * var list = grep( [1,2,3], function(item) { return item % 2 } )\n */\nfunction grep( list, fun ) {\n    var fin = [];\n    each( list || [], function(l) { fun(l) && fin.push(l) } );\n    return fin\n}\n\n/**\n * SUPPLANT\n * ========\n * var text = supplant( 'Hello {name}!', { name : 'John' } )\n */\nfunction supplant( str, values ) {\n    return str.replace( REPL, function( _, match ) {\n        return values[match] || _\n    } );\n}\n\n/**\n * timeout\n * =======\n * timeout( function(){}, 100 );\n */\nfunction timeout( fun, wait ) {\n    return setTimeout( fun, wait );\n}\n\n/**\n * uuid\n * ====\n * var my_uuid = generate_uuid();\n */\nfunction generate_uuid(callback) {\n    var u = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,\n    function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n    if (callback) callback(u);\n    return u;\n}\n\nfunction isArray(arg) {\n  return !!arg && typeof arg !== 'string' && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n  //return !!arg && (Array.isArray && Array.isArray(arg) || typeof(arg.length) === \"number\")\n}\n\n/**\n * EACH\n * ====\n * each( [1,2,3], function(item) { } )\n */\nfunction each( o, f) {\n    if ( !o || !f ) return;\n\n    if ( isArray(o) )\n        for ( var i = 0, l = o.length; i < l; )\n            f.call( o[i], o[i], i++ );\n    else\n        for ( var i in o )\n            o.hasOwnProperty    &&\n            o.hasOwnProperty(i) &&\n            f.call( o[i], i, o[i] );\n}\n\n/**\n * MAP\n * ===\n * var list = map( [1,2,3], function(item) { return item + 1 } )\n */\nfunction map( list, fun ) {\n    var fin = [];\n    each( list || [], function( k, v ) { fin.push(fun( k, v )) } );\n    return fin;\n}\n\n\nfunction pam_encode(str) {\n  return encodeURIComponent(str).replace(/[!'()*~]/g, function(c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * ENCODE\n * ======\n * var encoded_data = encode('path');\n */\nfunction encode(path) { return encodeURIComponent(path) }\n\n/**\n * Generate Subscription Channel List\n * ==================================\n * generate_channel_list(channels_object);\n */\nfunction generate_channel_list(channels, nopresence) {\n    var list = [];\n    each( channels, function( channel, status ) {\n        if (nopresence) {\n            if(channel.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel);\n            }\n        } else {\n            if (status.subscribed) list.push(channel);\n        }\n    });\n    return list.sort();\n}\n\n/**\n * Generate Subscription Channel Groups List\n * ==================================\n * generate_channel_group_list(channels_groups object);\n */\nfunction generate_channel_group_list(channel_groups, nopresence) {\n    var list = [];\n    each(channel_groups, function( channel_group, status ) {\n        if (nopresence) {\n            if(channel_group.search('-pnpres') < 0) {\n                if (status.subscribed) list.push(channel_group);\n            }\n        } else {\n            if (status.subscribed) list.push(channel_group);\n        }\n    });\n    return list.sort();\n}\n\n// PUBNUB READY TO CONNECT\nfunction ready() { timeout( function() {\n    if (READY) return;\n    READY = 1;\n    each( READY_BUFFER, function(connect) { connect() } );\n}, SECOND ); }\n\nfunction PNmessage(args) {\n    msg = args || {'apns' : {}},\n    msg['getPubnubMessage'] = function() {\n        var m = {};\n\n        if (Object.keys(msg['apns']).length) {\n            m['pn_apns'] = {\n                    'aps' : {\n                        'alert' : msg['apns']['alert'] ,\n                        'badge' : msg['apns']['badge']\n                    }\n            }\n            for (var k in msg['apns']) {\n                m['pn_apns'][k] = msg['apns'][k];\n            }\n            var exclude1 = ['badge','alert'];\n            for (var k in exclude1) {\n                delete m['pn_apns'][exclude1[k]];\n            }\n        }\n\n\n\n        if (msg['gcm']) {\n            m['pn_gcm'] = {\n                'data' : msg['gcm']\n            }\n        }\n\n        for (var k in msg) {\n            m[k] = msg[k];\n        }\n        var exclude = ['apns','gcm','publish', 'channel','callback','error'];\n        for (var k in exclude) {\n            delete m[exclude[k]];\n        }\n\n        return m;\n    };\n    msg['publish'] = function() {\n\n        var m = msg.getPubnubMessage();\n\n        if (msg['pubnub'] && msg['channel']) {\n            msg['pubnub'].publish({\n                'message' : m,\n                'channel' : msg['channel'],\n                'callback' : msg['callback'],\n                'error' : msg['error']\n            })\n        }\n    };\n    return msg;\n}\n\nfunction PN_API(setup) {\n    var SUB_WINDOWING =  +setup['windowing']   || DEF_WINDOWING\n    ,   SUB_TIMEOUT   = (+setup['timeout']     || DEF_SUB_TIMEOUT) * SECOND\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   TIME_CHECK    = setup['timecheck']     || 0\n    ,   NOLEAVE       = setup['noleave']       || 0\n    ,   PUBLISH_KEY   = setup['publish_key']   || 'demo'\n    ,   SUBSCRIBE_KEY = setup['subscribe_key'] || 'demo'\n    ,   AUTH_KEY      = setup['auth_key']      || ''\n    ,   SECRET_KEY    = setup['secret_key']    || ''\n    ,   hmac_SHA256   = setup['hmac_SHA256']\n    ,   SSL           = setup['ssl']            ? 's' : ''\n    ,   ORIGIN        = 'http'+SSL+'://'+(setup['origin']||'pubsub.pubnub.com')\n    ,   STD_ORIGIN    = nextorigin(ORIGIN)\n    ,   SUB_ORIGIN    = nextorigin(ORIGIN)\n    ,   CONNECT       = function(){}\n    ,   PUB_QUEUE     = []\n    ,   CLOAK         = true\n    ,   TIME_DRIFT    = 0\n    ,   SUB_CALLBACK  = 0\n    ,   SUB_CHANNEL   = 0\n    ,   SUB_RECEIVER  = 0\n    ,   SUB_RESTORE   = setup['restore'] || 0\n    ,   SUB_BUFF_WAIT = 0\n    ,   TIMETOKEN     = 0\n    ,   RESUMED       = false\n    ,   CHANNELS      = {}\n    ,   CHANNEL_GROUPS       = {}\n    ,   SUB_ERROR     = function(){}\n    ,   STATE         = {}\n    ,   PRESENCE_HB_TIMEOUT  = null\n    ,   PRESENCE_HB          = validate_presence_heartbeat(\n        setup['heartbeat'] || setup['pnexpires'] || 0, setup['error']\n    )\n    ,   PRESENCE_HB_INTERVAL = setup['heartbeat_interval'] || (PRESENCE_HB / 2) -1\n    ,   PRESENCE_HB_RUNNING  = false\n    ,   NO_WAIT_FOR_PENDING  = setup['no_wait_for_pending']\n    ,   COMPATIBLE_35 = setup['compatible_3.5']  || false\n    ,   xdr           = setup['xdr']\n    ,   params        = setup['params'] || {}\n    ,   error         = setup['error']      || function() {}\n    ,   _is_online    = setup['_is_online'] || function() { return 1 }\n    ,   jsonp_cb      = setup['jsonp_cb']   || function() { return 0 }\n    ,   db            = setup['db']         || {'get': function(){}, 'set': function(){}}\n    ,   CIPHER_KEY    = setup['cipher_key']\n    ,   UUID          = setup['uuid'] || ( !setup['unique_uuid'] && db && db['get'](SUBSCRIBE_KEY+'uuid') || '')\n    ,   USE_INSTANCEID = setup['instance_id'] || false\n    ,   INSTANCEID     = ''\n    ,   _poll_timer\n    ,   _poll_timer2;\n\n    if (PRESENCE_HB === 2) PRESENCE_HB_INTERVAL = 1;\n\n    var crypto_obj    = setup['crypto_obj'] ||\n        {\n            'encrypt' : function(a,key){ return a},\n            'decrypt' : function(b,key){return b}\n        };\n\n    function _get_url_params(data) {\n        if (!data) data = {};\n        each( params , function( key, value ) {\n            if (!(key in data)) data[key] = value;\n        });\n        return data;\n    }\n\n    function _object_to_key_list(o) {\n        var l = []\n        each( o , function( key, value ) {\n            l.push(key);\n        });\n        return l;\n    }\n    function _object_to_key_list_sorted(o) {\n        return _object_to_key_list(o).sort();\n    }\n\n    function _get_pam_sign_input_from_params(params) {\n        var si = \"\";\n        var l = _object_to_key_list_sorted(params);\n\n        for (var i in l) {\n            var k = l[i]\n            si += k + \"=\" + pam_encode(params[k]) ;\n            if (i != l.length - 1) si += \"&\"\n        }\n        return si;\n    }\n\n    function validate_presence_heartbeat(heartbeat, cur_heartbeat, error) {\n        var err = false;\n\n        if (typeof heartbeat === 'undefined') {\n            return cur_heartbeat;\n        }\n\n        if (typeof heartbeat === 'number') {\n            if (heartbeat > PRESENCE_HB_THRESHOLD || heartbeat == 0)\n                err = false;\n            else\n                err = true;\n        } else if(typeof heartbeat === 'boolean'){\n            if (!heartbeat) {\n                return 0;\n            } else {\n                return PRESENCE_HB_DEFAULT;\n            }\n        } else {\n            err = true;\n        }\n\n        if (err) {\n            error && error(\"Presence Heartbeat value invalid. Valid range ( x > \" + PRESENCE_HB_THRESHOLD + \" or x = 0). Current Value : \" + (cur_heartbeat || PRESENCE_HB_THRESHOLD));\n            return cur_heartbeat || PRESENCE_HB_THRESHOLD;\n        } else return heartbeat;\n    }\n\n    function encrypt(input, key) {\n        return crypto_obj['encrypt'](input, key || CIPHER_KEY) || input;\n    }\n    function decrypt(input, key) {\n        return crypto_obj['decrypt'](input, key || CIPHER_KEY) ||\n               crypto_obj['decrypt'](input, CIPHER_KEY) ||\n               input;\n    }\n\n    function error_common(message, callback) {\n        callback && callback({ 'error' : message || \"error occurred\"});\n        error && error(message);\n    }\n    function _presence_heartbeat() {\n\n        clearTimeout(PRESENCE_HB_TIMEOUT);\n\n        if (!PRESENCE_HB_INTERVAL || PRESENCE_HB_INTERVAL >= 500 ||\n            PRESENCE_HB_INTERVAL < 1 ||\n            (!generate_channel_list(CHANNELS,true).length  && !generate_channel_group_list(CHANNEL_GROUPS, true).length ) )\n        {\n            PRESENCE_HB_RUNNING = false;\n            return;\n        }\n\n        PRESENCE_HB_RUNNING = true;\n        SELF['presence_heartbeat']({\n            'callback' : function(r) {\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            },\n            'error' : function(e) {\n                error && error(\"Presence Heartbeat unable to reach Pubnub servers.\" + JSON.stringify(e));\n                PRESENCE_HB_TIMEOUT = timeout( _presence_heartbeat, (PRESENCE_HB_INTERVAL) * SECOND );\n            }\n        });\n    }\n\n    function start_presence_heartbeat() {\n        !PRESENCE_HB_RUNNING && _presence_heartbeat();\n    }\n\n    function publish(next) {\n\n        if (NO_WAIT_FOR_PENDING) {\n            if (!PUB_QUEUE.length) return;\n        } else {\n            if (next) PUB_QUEUE.sending = 0;\n            if ( PUB_QUEUE.sending || !PUB_QUEUE.length ) return;\n            PUB_QUEUE.sending = 1;\n        }\n\n        xdr(PUB_QUEUE.shift());\n    }\n    function each_channel_group(callback) {\n        var count = 0;\n\n        each( generate_channel_group_list(CHANNEL_GROUPS), function(channel_group) {\n            var chang = CHANNEL_GROUPS[channel_group];\n\n            if (!chang) return;\n\n            count++;\n            (callback||function(){})(chang);\n        } );\n\n        return count;\n    }\n\n    function each_channel(callback) {\n        var count = 0;\n\n        each( generate_channel_list(CHANNELS), function(channel) {\n            var chan = CHANNELS[channel];\n\n            if (!chan) return;\n\n            count++;\n            (callback||function(){})(chan);\n        } );\n\n        return count;\n    }\n    function _invoke_callback(response, callback, err) {\n        if (typeof response == 'object') {\n            if (response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n\n                err && err(callback_data);\n                return;\n\n            }\n            if (response['payload']) {\n                if (response['next_page'])\n                    callback && callback(response['payload'], response['next_page']);\n                else\n                    callback && callback(response['payload']);\n                return;\n            }\n        }\n        callback && callback(response);\n    }\n\n    function _invoke_error(response,err) {\n\n        if (typeof response == 'object' && response['error']) {\n                var callback_data = {};\n\n                if (response['message']) {\n                    callback_data['message'] = response['message'];\n                }\n\n                if (response['payload']) {\n                    callback_data['payload'] = response['payload'];\n                }\n                \n                err && err(callback_data);\n                return;\n        } else {\n            err && err(response);\n        }\n    }\n    function CR(args, callback, url1, data) {\n            var callback        = args['callback']      || callback\n            ,   err             = args['error']         || error\n            ,   jsonp           = jsonp_cb();\n\n            data = data || {};\n            \n            if (!data['auth']) {\n                data['auth'] = args['auth_key'] || AUTH_KEY;\n            }\n            \n            var url = [\n                    STD_ORIGIN, 'v1', 'channel-registration',\n                    'sub-key', SUBSCRIBE_KEY\n                ];\n\n            url.push.apply(url,url1);\n            \n            if (jsonp) data['callback']              = jsonp;\n            \n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n    }\n\n    // Announce Leave Event\n    var SELF = {\n        'LEAVE' : function( channel, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel\n            if (channel.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 2000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel), 'leave'\n                ]\n            });\n            return true;\n        },\n        'LEAVE_GROUP' : function( channel_group, blocking, auth_key, callback, error ) {\n\n            var data   = { 'uuid' : UUID, 'auth' : auth_key || AUTH_KEY }\n            ,   origin = nextorigin(ORIGIN)\n            ,   callback = callback || function(){}\n            ,   err      = error    || function(){}\n            ,   jsonp  = jsonp_cb();\n\n            // Prevent Leaving a Presence Channel Group\n            if (channel_group.indexOf(PRESENCE_SUFFIX) > 0) return true;\n\n            if (COMPATIBLE_35) {\n                if (!SSL)         return false;\n                if (jsonp == '0') return false;\n            }\n\n            if (NOLEAVE)  return false;\n\n            if (jsonp != '0') data['callback'] = jsonp;\n\n            if (channel_group && channel_group.length > 0) data['channel-group'] = channel_group;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                blocking : blocking || SSL,\n                timeout  : 5000,\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    origin, 'v2', 'presence', 'sub_key',\n                    SUBSCRIBE_KEY, 'channel', encode(','), 'leave'\n                ]\n            });\n            return true;\n        },\n        'set_resumed' : function(resumed) {\n                RESUMED = resumed;\n        },\n        'get_cipher_key' : function() {\n            return CIPHER_KEY;\n        },\n        'set_cipher_key' : function(key) {\n            CIPHER_KEY = key;\n        },\n        'raw_encrypt' : function(input, key) {\n            return encrypt(input, key);\n        },\n        'raw_decrypt' : function(input, key) {\n            return decrypt(input, key);\n        },\n        'get_heartbeat' : function() {\n            return PRESENCE_HB;\n        },\n        \n        'set_heartbeat' : function(heartbeat, heartbeat_interval) {\n            PRESENCE_HB = validate_presence_heartbeat(heartbeat, PRESENCE_HB, error);\n            PRESENCE_HB_INTERVAL = heartbeat_interval || (PRESENCE_HB / 2) - 1;\n            if (PRESENCE_HB == 2) {\n                PRESENCE_HB_INTERVAL = 1;\n            }\n            CONNECT();\n            _presence_heartbeat();\n        },\n        \n        'get_heartbeat_interval' : function() {\n            return PRESENCE_HB_INTERVAL;\n        },\n        \n        'set_heartbeat_interval' : function(heartbeat_interval) {\n            PRESENCE_HB_INTERVAL = heartbeat_interval;\n            _presence_heartbeat();\n        },\n        \n        'get_version' : function() {\n            return SDK_VER;\n        },\n        'getGcmMessageObject' : function(obj) {\n            return {\n                'data' : obj\n            }\n        },\n        'getApnsMessageObject' : function(obj) {\n            var x =  {\n                'aps' : { 'badge' : 1, 'alert' : ''}\n            }\n            for (k in obj) {\n                k[x] = obj[k];\n            }\n            return x;\n        },\n        'newPnMessage' : function() {\n            var x = {};\n            if (gcm) x['pn_gcm'] = gcm;\n            if (apns) x['pn_apns'] = apns;\n            for ( k in n ) {\n                x[k] = n[k];\n            }\n            return x;\n        },\n\n        '_add_param' : function(key,val) {\n            params[key] = val;\n        },\n\n        'channel_group' : function(args, callback) {\n            var ns_ch       = args['channel_group']\n            ,   callback    = callback         || args['callback']\n            ,   channels    = args['channels'] || args['channel']\n            ,   cloak       = args['cloak']\n            ,   namespace\n            ,   channel_group\n            ,   url = []\n            ,   data = {}\n            ,   mode = args['mode'] || 'add';\n\n\n            if (ns_ch) {\n                var ns_ch_a = ns_ch.split(':');\n\n                if (ns_ch_a.length > 1) {\n                    namespace = (ns_ch_a[0] === '*')?null:ns_ch_a[0];\n\n                    channel_group = ns_ch_a[1];\n                } else {\n                    channel_group = ns_ch_a[0];\n                }\n            }\n\n            namespace && url.push('namespace') && url.push(encode(namespace));\n\n            url.push('channel-group');\n\n            if (channel_group && channel_group !== '*') {\n                url.push(channel_group);\n            }\n\n            if (channels ) {\n                if (isArray(channels)) {\n                    channels = channels.join(',');\n                }\n                data[mode] = channels;\n                data['cloak'] = (CLOAK)?'true':'false';\n            } else {\n                if (mode === 'remove') url.push('remove');\n            }\n\n            if (typeof cloak != 'undefined') data['cloak'] = (cloak)?'true':'false';\n\n            CR(args, callback, url, data);\n        },\n\n        'channel_group_list_groups' : function(args, callback) {\n            var namespace;\n\n            namespace = args['namespace'] || args['ns'] || args['channel_group'] || null;\n            if (namespace) {\n                args[\"channel_group\"] = namespace + \":*\";\n            }\n\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_list_channels' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            SELF['channel_group'](args, callback);\n        },\n\n        'channel_group_remove_channel' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_remove_group' : function(args, callback) {\n            if (!args['channel_group']) return error('Missing Channel Group');\n            if (args['channel']) return error('Use channel_group_remove_channel if you want to remove a channel from a group.');\n\n            args['mode'] = 'remove';\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_add_channel' : function(args, callback) {\n           if (!args['channel_group']) return error('Missing Channel Group');\n           if (!args['channel'] && !args['channels'] ) return error('Missing Channel');\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_cloak' : function(args, callback) {\n            if (typeof args['cloak'] == 'undefined') {\n                callback(CLOAK);\n                return;\n            }\n            CLOAK = args['cloak'];\n            SELF['channel_group'](args,callback);\n        },\n\n        'channel_group_list_namespaces' : function(args, callback) {\n            var url = ['namespace'];\n            CR(args, callback, url);\n        },\n        'channel_group_remove_namespace' : function(args, callback) {\n            var url = ['namespace',args['namespace'],'remove'];\n            CR(args, callback, url);\n        },\n\n        /*\n            PUBNUB.history({\n                channel  : 'my_chat_channel',\n                limit    : 100,\n                callback : function(history) { }\n            });\n        */\n        'history' : function( args, callback ) {\n            var callback         = args['callback'] || callback\n            ,   count            = args['count']    || args['limit'] || 100\n            ,   reverse          = args['reverse']  || \"false\"\n            ,   err              = args['error']    || function(){}\n            ,   auth_key         = args['auth_key'] || AUTH_KEY\n            ,   cipher_key       = args['cipher_key']\n            ,   channel          = args['channel']\n            ,   channel_group    = args['channel_group']\n            ,   start            = args['start']\n            ,   end              = args['end']\n            ,   include_token    = args['include_token']\n            ,   params           = {}\n            ,   jsonp            = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) return error('Missing Channel');\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            params['stringtoken'] = 'true';\n            params['count']       = count;\n            params['reverse']     = reverse;\n            params['auth']        = auth_key;\n\n            if (channel_group) {\n                params['channel-group'] = channel_group;\n                if (!channel) {\n                    channel = ','; \n                }\n            }\n            if (jsonp) params['callback']              = jsonp;\n            if (start) params['start']                 = start;\n            if (end)   params['end']                   = end;\n            if (include_token) params['include_token'] = 'true';\n\n            // Send Message\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(params),\n                success  : function(response) {\n                    if (typeof response == 'object' && response['error']) {\n                        err({'message' : response['message'], 'payload' : response['payload']});\n                        return;\n                    }\n                    var messages = response[0];\n                    var decrypted_messages = [];\n                    for (var a = 0; a < messages.length; a++) {\n                        var new_message = decrypt(messages[a],cipher_key);\n                        try {\n                            decrypted_messages['push'](JSON['parse'](new_message));\n                        } catch (e) {\n                            decrypted_messages['push']((new_message));\n                        }\n                    }\n                    callback([decrypted_messages, response[1], response[2]]);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'history', 'sub-key',\n                    SUBSCRIBE_KEY, 'channel', encode(channel)\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.replay({\n                source      : 'my_channel',\n                destination : 'new_channel'\n            });\n        */\n        'replay' : function(args, callback) {\n            var callback    = callback || args['callback'] || function(){}\n            ,   auth_key    = args['auth_key'] || AUTH_KEY\n            ,   source      = args['source']\n            ,   destination = args['destination']\n            ,   stop        = args['stop']\n            ,   start       = args['start']\n            ,   end         = args['end']\n            ,   reverse     = args['reverse']\n            ,   limit       = args['limit']\n            ,   jsonp       = jsonp_cb()\n            ,   data        = {}\n            ,   url;\n\n            // Check User Input\n            if (!source)        return error('Missing Source Channel');\n            if (!destination)   return error('Missing Destination Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Setup URL Params\n            if (jsonp != '0') data['callback'] = jsonp;\n            if (stop)         data['stop']     = 'all';\n            if (reverse)      data['reverse']  = 'true';\n            if (start)        data['start']    = start;\n            if (end)          data['end']      = end;\n            if (limit)        data['count']    = limit;\n\n            data['auth'] = auth_key;\n\n            // Compose URL Parts\n            url = [\n                STD_ORIGIN, 'v1', 'replay',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                source, destination\n            ];\n\n            // Start (or Stop) Replay!\n            xdr({\n                callback : jsonp,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function() { callback([ 0, 'Disconnected' ]) },\n                url      : url,\n                data     : _get_url_params(data)\n            });\n        },\n\n        /*\n            PUBNUB.auth('AJFLKAJSDKLA');\n        */\n        'auth' : function(auth) {\n            AUTH_KEY = auth;\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.time(function(time){ });\n        */\n        'time' : function(callback) {\n            var jsonp = jsonp_cb();\n\n            var data = { 'uuid' : UUID, 'auth' : AUTH_KEY }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [STD_ORIGIN, 'time', jsonp],\n                success  : function(response) { callback(response[0]) },\n                fail     : function() { callback(0) }\n            });\n        },\n\n        /*\n            PUBNUB.publish({\n                channel : 'my_chat_channel',\n                message : 'hello!'\n            });\n        */\n        'publish' : function( args, callback ) {\n            var msg      = args['message'];\n            if (!msg) return error('Missing Message');\n\n            var callback = callback || args['callback'] || msg['callback'] || function(){}\n            ,   channel  = args['channel'] || msg['channel']\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   cipher_key = args['cipher_key']\n            ,   err      = args['error'] || msg['error'] || function() {}\n            ,   post     = args['post'] || false\n            ,   store    = ('store_in_history' in args) ? args['store_in_history']: true\n            ,   jsonp    = jsonp_cb()\n            ,   add_msg  = 'push'\n            ,   url;\n\n            if (args['prepend']) add_msg = 'unshift'\n\n            if (!channel)       return error('Missing Channel');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (msg['getPubnubMessage']) {\n                msg = msg['getPubnubMessage']();\n            }\n\n            // If trying to send Object\n            msg = JSON['stringify'](encrypt(msg, cipher_key));\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'publish',\n                PUBLISH_KEY, SUBSCRIBE_KEY,\n                0, encode(channel),\n                jsonp, encode(msg)\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key }\n\n            if (!store) params['store'] =\"0\"\n\n            if (USE_INSTANCEID) params['instanceid'] = INSTANCEID;\n\n            // Queue Message Send\n            PUB_QUEUE[add_msg]({\n                callback : jsonp,\n                timeout  : SECOND * 5,\n                url      : url,\n                data     : _get_url_params(params),\n                fail     : function(response){\n                    _invoke_error(response, err);\n                    publish(1);\n                },\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                    publish(1);\n                },\n                mode     : (post)?'POST':'GET'\n            });\n\n            // Send Message\n            publish();\n        },\n\n        /*\n            PUBNUB.unsubscribe({ channel : 'my_chat' });\n        */\n        'unsubscribe' : function(args, callback) {\n            var channel       = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   auth_key      = args['auth_key']    || AUTH_KEY\n            ,   callback      = callback            || args['callback'] || function(){}\n            ,   err           = args['error']       || function(){};\n\n            TIMETOKEN   = 0;\n            //SUB_RESTORE = 1;    REVISIT !!!!\n\n            if (channel) {\n                // Prepare Channel(s)\n                channel = map( (\n                    channel.join ? channel.join(',') : ''+channel\n                ).split(','), function(channel) {\n                    if (!CHANNELS[channel]) return;\n                    return channel + ',' + channel + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over Channels\n                each( channel.split(','), function(ch) {\n                    var CB_CALLED = true;\n                    if (!ch) return;\n                    CHANNELS[ch] = 0;\n                    if (ch in STATE) delete STATE[ch];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE']( ch, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                    \n                } );\n            }\n\n            if (channel_group) {\n                // Prepare channel group(s)\n                channel_group = map( (\n                    channel_group.join ? channel_group.join(',') : ''+channel_group\n                ).split(','), function(channel_group) {\n                    if (!CHANNEL_GROUPS[channel_group]) return;\n                    return channel_group + ',' + channel_group + PRESENCE_SUFFIX;\n                } ).join(',');\n\n                // Iterate over channel groups\n                each( channel_group.split(','), function(chg) {\n                    var CB_CALLED = true;\n                    if (!chg) return;\n                    CHANNEL_GROUPS[chg] = 0;\n                    if (chg in STATE) delete STATE[chg];\n                    if (READY) {\n                        CB_CALLED = SELF['LEAVE_GROUP']( chg, 0 , auth_key, callback, err);\n                    }\n                    if (!CB_CALLED) callback({action : \"leave\"});\n\n                } );\n            }\n\n            // Reset Connection if Count Less\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.subscribe({\n                channel  : 'my_chat'\n                callback : function(message) { }\n            });\n        */\n        'subscribe' : function( args, callback ) {\n            var channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   callback        = callback            || args['callback']\n            ,   callback        = callback            || args['message']\n            ,   connect         = args['connect']     || function(){}\n            ,   reconnect       = args['reconnect']   || function(){}\n            ,   disconnect      = args['disconnect']  || function(){}\n            ,   SUB_ERROR       = args['error']       || SUB_ERROR || function(){}\n            ,   idlecb          = args['idle']        || function(){}\n            ,   presence        = args['presence']    || 0\n            ,   noheresync      = args['noheresync']  || 0\n            ,   backfill        = args['backfill']    || 0\n            ,   timetoken       = args['timetoken']   || 0\n            ,   sub_timeout     = args['timeout']     || SUB_TIMEOUT\n            ,   windowing       = args['windowing']   || SUB_WINDOWING\n            ,   state           = args['state']\n            ,   heartbeat       = args['heartbeat'] || args['pnexpires']\n            ,   heartbeat_interval = args['heartbeat_interval']\n            ,   restore         = args['restore'] || SUB_RESTORE;\n\n            AUTH_KEY            = args['auth_key']    || AUTH_KEY;\n\n            // Restore Enabled?\n            SUB_RESTORE = restore;\n\n            // Always Reset the TT\n            TIMETOKEN = timetoken;\n\n            // Make sure we have a Channel\n            if (!channel && !channel_group) {\n                return error('Missing Channel');\n            }\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (heartbeat || heartbeat === 0 || heartbeat_interval || heartbeat_interval === 0) {\n                SELF['set_heartbeat'](heartbeat, heartbeat_interval);\n            }\n\n            // Setup Channel(s)\n            if (channel) {\n                each( (channel.join ? channel.join(',') : ''+channel).split(','),\n                function(channel) {\n                    var settings = CHANNELS[channel] || {};\n\n                    // Store Channel State\n                    CHANNELS[SUB_CHANNEL = channel] = {\n                        name         : channel,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    if (state) {\n                        if (channel in state) {\n                            STATE[channel] = state[channel];\n                        } else {\n                            STATE[channel] = state;\n                        }\n                    }\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel'  : channel + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel'  : channel,\n                        'data'     : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel ); } );\n                        }\n                    });\n                } );\n            }\n\n            // Setup Channel Groups\n            if (channel_group) {\n                each( (channel_group.join ? channel_group.join(',') : ''+channel_group).split(','),\n                function(channel_group) {\n                    var settings = CHANNEL_GROUPS[channel_group] || {};\n\n                    CHANNEL_GROUPS[channel_group] = {\n                        name         : channel_group,\n                        connected    : settings.connected,\n                        disconnected : settings.disconnected,\n                        subscribed   : 1,\n                        callback     : SUB_CALLBACK = callback,\n                        'cipher_key' : args['cipher_key'],\n                        connect      : connect,\n                        disconnect   : disconnect,\n                        reconnect    : reconnect\n                    };\n\n                    // Presence Enabled?\n                    if (!presence) return;\n\n                    // Subscribe Presence Channel\n                    SELF['subscribe']({\n                        'channel_group'  : channel_group + PRESENCE_SUFFIX,\n                        'callback' : presence,\n                        'restore'  : restore,\n                        'auth_key' : AUTH_KEY\n                    });\n\n                    // Presence Subscribed?\n                    if (settings.subscribed) return;\n\n                    // See Who's Here Now?\n                    if (noheresync) return;\n                    SELF['here_now']({\n                        'channel_group'  : channel_group,\n                        'data'           : _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY }),\n                        'callback' : function(here) {\n                            each( 'uuids' in here ? here['uuids'] : [],\n                            function(uid) { presence( {\n                                'action'    : 'join',\n                                'uuid'      : uid,\n                                'timestamp' : Math.floor(rnow() / 1000),\n                                'occupancy' : here['occupancy'] || 1\n                            }, here, channel_group ); } );\n                        }\n                    });\n                } );\n            }\n\n\n            // Test Network Connection\n            function _test_connection(success) {\n                if (success) {\n                    // Begin Next Socket Connection\n                    timeout( CONNECT, SECOND );\n                }\n                else {\n                    // New Origin on Failed Connection\n                    STD_ORIGIN = nextorigin( ORIGIN, 1 );\n                    SUB_ORIGIN = nextorigin( ORIGIN, 1 );\n\n                    // Re-test Connection\n                    timeout( function() {\n                        SELF['time'](_test_connection);\n                    }, SECOND );\n                }\n\n                // Disconnect & Reconnect\n                each_channel(function(channel){\n                    // Reconnect\n                    if (success && channel.disconnected) {\n                        channel.disconnected = 0;\n                        return channel.reconnect(channel.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel.disconnected) {\n                        channel.disconnected = 1;\n                        channel.disconnect(channel.name);\n                    }\n                });\n                \n                // Disconnect & Reconnect for channel groups\n                each_channel_group(function(channel_group){\n                    // Reconnect\n                    if (success && channel_group.disconnected) {\n                        channel_group.disconnected = 0;\n                        return channel_group.reconnect(channel_group.name);\n                    }\n\n                    // Disconnect\n                    if (!success && !channel_group.disconnected) {\n                        channel_group.disconnected = 1;\n                        channel_group.disconnect(channel_group.name);\n                    }\n                });\n            }\n\n            // Evented Subscribe\n            function _connect() {\n                var jsonp           = jsonp_cb()\n                ,   channels        = generate_channel_list(CHANNELS).join(',')\n                ,   channel_groups  = generate_channel_group_list(CHANNEL_GROUPS).join(',');\n\n                // Stop Connection\n                if (!channels && !channel_groups) return;\n\n                if (!channels) channels = ',';\n\n                // Connect to PubNub Subscribe Servers\n                _reset_offline();\n\n                var data = _get_url_params({ 'uuid' : UUID, 'auth' : AUTH_KEY });\n\n                if (channel_groups) {\n                    data['channel-group'] = channel_groups;\n                }\n\n\n                var st = JSON.stringify(STATE);\n                if (st.length > 2) data['state'] = JSON.stringify(STATE);\n\n                if (PRESENCE_HB) data['heartbeat'] = PRESENCE_HB;\n\n                if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n                start_presence_heartbeat();\n                SUB_RECEIVER = xdr({\n                    timeout  : sub_timeout,\n                    callback : jsonp,\n                    fail     : function(response) {\n                        if (response && response['error'] && response['service']) {\n                            _invoke_error(response, SUB_ERROR);\n                            _test_connection(1);\n                        } else {\n                            SELF['time'](function(success){\n                                !success && ( _invoke_error(response, SUB_ERROR));\n                                _test_connection(success);\n                            });\n                        }\n                    },\n                    data     : _get_url_params(data),\n                    url      : [\n                        SUB_ORIGIN, 'subscribe',\n                        SUBSCRIBE_KEY, encode(channels),\n                        jsonp, TIMETOKEN\n                    ],\n                    success : function(messages) {\n\n                        // Check for Errors\n                        if (!messages || (\n                            typeof messages == 'object' &&\n                            'error' in messages         &&\n                            messages['error']\n                        )) {\n                            SUB_ERROR(messages['error']);\n                            return timeout( CONNECT, SECOND );\n                        }\n\n                        // User Idle Callback\n                        idlecb(messages[1]);\n\n                        // Restore Previous Connection Point if Needed\n                        TIMETOKEN = !TIMETOKEN               &&\n                                    SUB_RESTORE              &&\n                                    db['get'](SUBSCRIBE_KEY) || messages[1];\n\n                        /*\n                        // Connect\n                        each_channel_registry(function(registry){\n                            if (registry.connected) return;\n                            registry.connected = 1;\n                            registry.connect(channel.name);\n                        });\n                        */\n\n                        // Connect\n                        each_channel(function(channel){\n                            if (channel.connected) return;\n                            channel.connected = 1;\n                            channel.connect(channel.name);\n                        });\n\n                        // Connect for channel groups\n                        each_channel_group(function(channel_group){\n                            if (channel_group.connected) return;\n                            channel_group.connected = 1;\n                            channel_group.connect(channel_group.name);\n                        });\n\n                        if (RESUMED && !SUB_RESTORE) {\n                                TIMETOKEN = 0;\n                                RESUMED = false;\n                                // Update Saved Timetoken\n                                db['set']( SUBSCRIBE_KEY, 0 );\n                                timeout( _connect, windowing );\n                                return;\n                        }\n\n                        // Invoke Memory Catchup and Receive Up to 100\n                        // Previous Messages from the Queue.\n                        if (backfill) {\n                            TIMETOKEN = 10000;\n                            backfill  = 0;\n                        }\n\n                        // Update Saved Timetoken\n                        db['set']( SUBSCRIBE_KEY, messages[1] );\n\n                        // Route Channel <---> Callback for Message\n                        var next_callback = (function() {\n                            var channels = '';\n                            var channels2 = '';\n\n                            if (messages.length > 3) {\n                                channels  = messages[3];\n                                channels2 = messages[2];\n                            } else if (messages.length > 2) {\n                                channels = messages[2];\n                            } else {\n                                channels =  map(\n                                    generate_channel_list(CHANNELS), function(chan) { return map(\n                                        Array(messages[0].length)\n                                        .join(',').split(','),\n                                        function() { return chan; }\n                                    ) }).join(',')\n                            }\n\n                            var list  = channels.split(',');\n                            var list2 = (channels2)?channels2.split(','):[];\n\n                            return function() {\n                                var channel  = list.shift()||SUB_CHANNEL;\n                                var channel2 = list2.shift();\n\n                                var chobj = {};\n\n                                if (channel2) {\n                                    if (channel && channel.indexOf('-pnpres') >= 0 \n                                        && channel2.indexOf('-pnpres') < 0) {\n                                        channel2 += '-pnpres';\n                                    }\n                                    chobj = CHANNEL_GROUPS[channel2] || CHANNELS[channel2] || {'callback' : function(){}};\n                                } else {\n                                    chobj = CHANNELS[channel];\n                                }\n\n                                var r = [\n                                    chobj\n                                    .callback||SUB_CALLBACK,\n                                    channel.split(PRESENCE_SUFFIX)[0]\n                                ];\n                                channel2 && r.push(channel2.split(PRESENCE_SUFFIX)[0]);\n                                return r;\n                            };\n                        })();\n\n                        var latency = detect_latency(+messages[1]);\n                        each( messages[0], function(msg) {\n                            var next = next_callback();\n                            var decrypted_msg = decrypt(msg,\n                                (CHANNELS[next[1]])?CHANNELS[next[1]]['cipher_key']:null);\n                            next[0] && next[0]( decrypted_msg, messages, next[2] || next[1], latency, next[1]);\n                        });\n\n                        timeout( _connect, windowing );\n                    }\n                });\n            }\n\n            CONNECT = function() {\n                _reset_offline();\n                timeout( _connect, windowing );\n            };\n\n            // Reduce Status Flicker\n            if (!READY) return READY_BUFFER.push(CONNECT);\n\n            // Connect Now\n            CONNECT();\n        },\n\n        /*\n            PUBNUB.here_now({ channel : 'my_chat', callback : fun });\n        */\n        'here_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   jsonp    = jsonp_cb()\n            ,   uuids    = ('uuids' in args) ? args['uuids'] : true\n            ,   state    = args['state']\n            ,   data     = { 'uuid' : UUID, 'auth' : auth_key };\n\n            if (!uuids) data['disable_uuids'] = 1;\n            if (state) data['state'] = 1;\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            var url = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY\n                ];\n\n            channel && url.push('channel') && url.push(encode(channel));\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (channel_group) {\n                data['channel-group'] = channel_group;\n                !channel && url.push('channel') && url.push(','); \n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n        },\n\n        /*\n            PUBNUB.current_channels_by_uuid({ channel : 'my_chat', callback : fun });\n        */\n        'where_now' : function( args, callback ) {\n            var callback = args['callback'] || callback\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   uuid     = args['uuid']     || UUID\n            ,   data     = { 'auth' : auth_key };\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub_key', SUBSCRIBE_KEY,\n                    'uuid', encode(uuid)\n                ]\n            });\n        },\n\n        'state' : function(args, callback) {\n            var callback = args['callback'] || callback || function(r) {}\n            ,   err      = args['error']    || function(){}\n            ,   auth_key = args['auth_key'] || AUTH_KEY\n            ,   jsonp    = jsonp_cb()\n            ,   state    = args['state']\n            ,   uuid     = args['uuid'] || UUID\n            ,   channel  = args['channel']\n            ,   channel_group = args['channel_group']\n            ,   url\n            ,   data     = _get_url_params({ 'auth' : auth_key });\n\n            // Make sure we have a Channel\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!uuid) return error('Missing UUID');\n            if (!channel && !channel_group) return error('Missing Channel');\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            if (typeof channel != 'undefined'\n                && CHANNELS[channel] && CHANNELS[channel].subscribed ) {\n                if (state) STATE[channel] = state;\n            }\n\n            if (typeof channel_group != 'undefined'\n                && CHANNEL_GROUPS[channel_group]\n                && CHANNEL_GROUPS[channel_group].subscribed\n                ) {\n                if (state) STATE[channel_group] = state;\n                data['channel-group'] = channel_group;\n\n                if (!channel) {\n                    channel = ',';\n                }\n            }\n\n            data['state'] = JSON.stringify(state);\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            if (state) {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', uuid, 'data'\n                ]\n            } else {\n                url      = [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel', channel,\n                    'uuid', encode(uuid)\n                ]\n            }\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n\n            });\n\n        },\n\n        /*\n            PUBNUB.grant({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                ttl      : 24 * 60, // Minutes\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'grant' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']  || args['channels']\n            ,   channel_group   = args['channel_group']\n            ,   jsonp           = jsonp_cb()\n            ,   ttl             = args['ttl']\n            ,   r               = (args['read'] )?\"1\":\"0\"\n            ,   w               = (args['write'])?\"1\":\"0\"\n            ,   m               = (args['manage'])?\"1\":\"0\"\n            ,   auth_key        = args['auth_key'] || args['auth_keys'];\n\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\" + PUBLISH_KEY + \"\\n\"\n                    + \"grant\" + \"\\n\";\n\n            var data = {\n                'w'         : w,\n                'r'         : r,\n                'timestamp' : timestamp\n            };\n            if (args['manage']) {\n                data['m'] = m;\n            }\n            if (isArray(channel)) {\n                channel = channel['join'](',');\n            }\n            if (isArray(auth_key)) {\n                auth_key = auth_key['join'](',');\n            }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (ttl || ttl === 0) data['ttl'] = ttl;\n\n            if (auth_key) data['auth'] = auth_key;\n\n            data = _get_url_params(data)\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'grant' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n         PUBNUB.mobile_gw_provision ({\n         device_id: 'A655FBA9931AB',\n         op       : 'add' | 'remove',\n         gw_type  : 'apns' | 'gcm',\n         channel  : 'my_chat',\n         callback : fun,\n         error    : fun,\n         });\n         */\n\n        'mobile_gw_provision' : function( args ) {\n\n            var callback = args['callback'] || function(){}\n                ,   auth_key       = args['auth_key'] || AUTH_KEY\n                ,   err            = args['error'] || function() {}\n                ,   jsonp          = jsonp_cb()\n                ,   channel        = args['channel']\n                ,   op             = args['op']\n                ,   gw_type        = args['gw_type']\n                ,   device_id      = args['device_id']\n                ,   url;\n\n            if (!device_id)     return error('Missing Device ID (device_id)');\n            if (!gw_type)       return error('Missing GW Type (gw_type: gcm or apns)');\n            if (!op)            return error('Missing GW Operation (op: add or remove)');\n            if (!channel)       return error('Missing gw destination Channel (channel)');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n\n            // Create URL\n            url = [\n                STD_ORIGIN, 'v1/push/sub-key',\n                SUBSCRIBE_KEY, 'devices', device_id\n            ];\n\n            params = { 'uuid' : UUID, 'auth' : auth_key, 'type': gw_type};\n\n            if (op == \"add\") {\n                params['add'] = channel;\n            } else if (op == \"remove\") {\n                params['remove'] = channel;\n            }\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : params,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : url\n            });\n\n        },\n\n        /*\n            PUBNUB.audit({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                read     : true,\n                write    : true,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'audit' : function( args, callback ) {\n            var callback        = args['callback'] || callback\n            ,   err             = args['error']    || function(){}\n            ,   channel         = args['channel']\n            ,   channel_group   = args['channel_group']\n            ,   auth_key        = args['auth_key']\n            ,   jsonp           = jsonp_cb();\n\n            // Make sure we have a Channel\n            if (!callback)      return error('Missing Callback');\n            if (!SUBSCRIBE_KEY) return error('Missing Subscribe Key');\n            if (!PUBLISH_KEY)   return error('Missing Publish Key');\n            if (!SECRET_KEY)    return error('Missing Secret Key');\n\n            var timestamp  = Math.floor(new Date().getTime() / 1000)\n            ,   sign_input = SUBSCRIBE_KEY + \"\\n\"\n                + PUBLISH_KEY + \"\\n\"\n                + \"audit\" + \"\\n\";\n\n            var data = {'timestamp' : timestamp };\n            if (jsonp != '0') { data['callback'] = jsonp; }\n            if (typeof channel != 'undefined' && channel != null && channel.length > 0) data['channel'] = channel;\n            if (typeof channel_group != 'undefined' && channel_group != null && channel_group.length > 0) {\n                data['channel-group'] = channel_group;\n            }\n            if (auth_key) data['auth']    = auth_key;\n\n            data = _get_url_params(data);\n\n            if (!auth_key) delete data['auth'];\n\n            sign_input += _get_pam_sign_input_from_params(data);\n\n            var signature = hmac_SHA256( sign_input, SECRET_KEY );\n\n            signature = signature.replace( /\\+/g, \"-\" );\n            signature = signature.replace( /\\//g, \"_\" );\n\n            data['signature'] = signature;\n            xdr({\n                callback : jsonp,\n                data     : data,\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) {\n                    _invoke_error(response, err);\n                },\n                url      : [\n                    STD_ORIGIN, 'v1', 'auth', 'audit' ,\n                    'sub-key', SUBSCRIBE_KEY\n                ]\n            });\n        },\n\n        /*\n            PUBNUB.revoke({\n                channel  : 'my_chat',\n                callback : fun,\n                error    : fun,\n                auth_key : '3y8uiajdklytowsj'\n            });\n        */\n        'revoke' : function( args, callback ) {\n            args['read']  = false;\n            args['write'] = false;\n            SELF['grant']( args, callback );\n        },\n        'set_uuid' : function(uuid) {\n            UUID = uuid;\n            CONNECT();\n        },\n        'get_uuid' : function() {\n            return UUID;\n        },\n        'isArray'  : function(arg) {\n            return isArray(arg);\n        },\n        'get_subscibed_channels' : function() {\n            return generate_channel_list(CHANNELS, true);\n        },\n        'presence_heartbeat' : function(args) {\n            var callback = args['callback'] || function() {}\n            var err      = args['error']    || function() {}\n            var jsonp    = jsonp_cb();\n            var data     = { 'uuid' : UUID, 'auth' : AUTH_KEY };\n\n            var st = JSON['stringify'](STATE);\n            if (st.length > 2) data['state'] = JSON['stringify'](STATE);\n\n            if (PRESENCE_HB > 0 && PRESENCE_HB < 320) data['heartbeat'] = PRESENCE_HB;\n\n            if (jsonp != '0') { data['callback'] = jsonp; }\n\n            var channels        = encode(generate_channel_list(CHANNELS, true)['join'](','));\n            var channel_groups  = generate_channel_group_list(CHANNEL_GROUPS, true)['join'](',');\n\n            if (!channels) channels = ',';\n            if (channel_groups) data['channel-group'] = channel_groups;\n\n            if (USE_INSTANCEID) data['instanceid'] = INSTANCEID;\n\n            xdr({\n                callback : jsonp,\n                data     : _get_url_params(data),\n                timeout  : SECOND * 5,\n                url      : [\n                    STD_ORIGIN, 'v2', 'presence',\n                    'sub-key', SUBSCRIBE_KEY,\n                    'channel' , channels,\n                    'heartbeat'\n                ],\n                success  : function(response) {\n                    _invoke_callback(response, callback, err);\n                },\n                fail     : function(response) { _invoke_error(response, err); }\n            });\n        },\n        'stop_timers': function () {\n            clearTimeout(_poll_timer);\n            clearTimeout(_poll_timer2);\n        },\n\n        // Expose PUBNUB Functions\n        'xdr'           : xdr,\n        'ready'         : ready,\n        'db'            : db,\n        'uuid'          : generate_uuid,\n        'map'           : map,\n        'each'          : each,\n        'each-channel'  : each_channel,\n        'grep'          : grep,\n        'offline'       : function(){ _reset_offline(\n            1, { \"message\" : \"Offline. Please check your network settings.\" })\n        },\n        'supplant'      : supplant,\n        'now'           : rnow,\n        'unique'        : unique,\n        'updater'       : updater\n    };\n\n    function _poll_online() {\n        _is_online() || _reset_offline( 1, {\n            \"error\" : \"Offline. Please check your network settings. \"\n        });\n        _poll_timer && clearTimeout(_poll_timer);\n        _poll_timer = timeout( _poll_online, SECOND );\n    }\n\n    function _poll_online2() {\n        if (!TIME_CHECK) return;\n        SELF['time'](function(success){\n            detect_time_detla( function(){}, success );\n            success || _reset_offline( 1, {\n                \"error\" : \"Heartbeat failed to connect to Pubnub Servers.\" +\n                    \"Please check your network settings.\"\n                });\n            _poll_timer2 && clearTimeout(_poll_timer2);\n            _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n        });\n    }\n\n    function _reset_offline(err, msg) {\n        SUB_RECEIVER && SUB_RECEIVER(err, msg);\n        SUB_RECEIVER = null;\n\n        clearTimeout(_poll_timer);\n        clearTimeout(_poll_timer2);\n    }\n    \n    if (!UUID) UUID = SELF['uuid']();\n    if (!INSTANCEID) INSTANCEID = SELF['uuid']();\n    db['set']( SUBSCRIBE_KEY + 'uuid', UUID );\n\n    _poll_timer  = timeout( _poll_online,  SECOND    );\n    _poll_timer2 = timeout( _poll_online2, KEEPALIVE );\n    PRESENCE_HB_TIMEOUT = timeout(\n        start_presence_heartbeat,\n        ( PRESENCE_HB_INTERVAL - 3 ) * SECOND\n    );\n\n    // Detect Age of Message\n    function detect_latency(tt) {\n        var adjusted_time = rnow() - TIME_DRIFT;\n        return adjusted_time - tt / 10000;\n    }\n\n    detect_time_detla();\n    function detect_time_detla( cb, time ) {\n        var stime = rnow();\n\n        time && calculate(time) || SELF['time'](calculate);\n\n        function calculate(time) {\n            if (!time) return;\n            var ptime   = time / 10000\n            ,   latency = (rnow() - stime) / 2;\n            TIME_DRIFT = rnow() - (ptime + latency);\n            cb && cb(TIME_DRIFT);\n        }\n    }\n\n    return SELF;\n}\nfunction crypto_obj() {\n\n    function SHA256(s) {\n        return CryptoJS['SHA256'](s)['toString'](CryptoJS['enc']['Hex']);\n    }\n\n    var iv = \"0123456789012345\";\n\n    var allowedKeyEncodings = ['hex', 'utf8', 'base64', 'binary'];\n    var allowedKeyLengths = [128, 256];\n    var allowedModes = ['ecb', 'cbc'];\n\n    var defaultOptions = {\n        'encryptKey': true,\n        'keyEncoding': 'utf8',\n        'keyLength': 256,\n        'mode': 'cbc'\n    };\n\n    function parse_options(options) {\n\n        // Defaults\n        options = options || {};\n        if (!options['hasOwnProperty']('encryptKey')) options['encryptKey'] = defaultOptions['encryptKey'];\n        if (!options['hasOwnProperty']('keyEncoding')) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (!options['hasOwnProperty']('keyLength')) options['keyLength'] = defaultOptions['keyLength'];\n        if (!options['hasOwnProperty']('mode')) options['mode'] = defaultOptions['mode'];\n\n        // Validation\n        if (allowedKeyEncodings['indexOf'](options['keyEncoding']['toLowerCase']()) == -1) options['keyEncoding'] = defaultOptions['keyEncoding'];\n        if (allowedKeyLengths['indexOf'](parseInt(options['keyLength'], 10)) == -1) options['keyLength'] = defaultOptions['keyLength'];\n        if (allowedModes['indexOf'](options['mode']['toLowerCase']()) == -1) options['mode'] = defaultOptions['mode'];\n\n        return options;\n\n    }\n\n    function decode_key(key, options) {\n        if (options['keyEncoding'] == 'base64') {\n            return CryptoJS['enc']['Base64']['parse'](key);\n        } else if (options['keyEncoding'] == 'hex') {\n            return CryptoJS['enc']['Hex']['parse'](key);\n        } else {\n            return key;\n        }\n    }\n\n    function get_padded_key(key, options) {\n        key = decode_key(key, options);\n        if (options['encryptKey']) {\n            return CryptoJS['enc']['Utf8']['parse'](SHA256(key)['slice'](0, 32));\n        } else {\n            return key;\n        }\n    }\n\n    function get_mode(options) {\n        if (options['mode'] == 'ecb') {\n            return CryptoJS['mode']['ECB'];\n        } else {\n            return CryptoJS['mode']['CBC'];\n        }\n    }\n\n    function get_iv(options) {\n        return (options['mode'] == 'cbc') ? CryptoJS['enc']['Utf8']['parse'](iv) : null;\n    }\n\n    return {\n\n        'encrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            var hex_message = JSON['stringify'](data);\n            var encryptedHexArray = CryptoJS['AES']['encrypt'](hex_message, cipher_key, {'iv': iv, 'mode': mode})['ciphertext'];\n            var base_64_encrypted = encryptedHexArray['toString'](CryptoJS['enc']['Base64']);\n            return base_64_encrypted || data;\n        },\n\n        'decrypt': function(data, key, options) {\n            if (!key) return data;\n            options = parse_options(options);\n            var iv = get_iv(options);\n            var mode = get_mode(options);\n            var cipher_key = get_padded_key(key, options);\n            try {\n                var binary_enc = CryptoJS['enc']['Base64']['parse'](data);\n                var json_plain = CryptoJS['AES']['decrypt']({'ciphertext': binary_enc}, cipher_key, {'iv': iv, 'mode': mode})['toString'](CryptoJS['enc']['Utf8']);\n                var plaintext = JSON['parse'](json_plain);\n                return plaintext;\n            }\n            catch (e) {\n                return undefined;\n            }\n        }\n    };\n}\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     UTIL     =============================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nwindow['PUBNUB'] || (function() {\n\n/**\n * UTIL LOCALS\n */\n\nvar SWF             = 'https://pubnub.a.ssl.fastly.net/pubnub.swf'\n,   ASYNC           = 'async'\n,   UA              = navigator.userAgent\n,   PNSDK           = 'PubNub-JS-' + 'Web' + '/' + '3.7.11'\n,   XORIGN          = UA.indexOf('MSIE 6') == -1;\n\n/**\n * CONSOLE COMPATIBILITY\n */\nwindow.console || (window.console=window.console||{});\nconsole.log    || (\n    console.log   =\n    console.error =\n    ((window.opera||{}).postError||function(){})\n);\n\n/**\n * LOCAL STORAGE OR COOKIE\n */\nvar db = (function(){\n    var store = {};\n    var ls = false;\n    try {\n        ls = window['localStorage'];\n    } catch (e) { }\n    var cookieGet = function(key) {\n        if (document.cookie.indexOf(key) == -1) return null;\n        return ((document.cookie||'').match(\n            RegExp(key+'=([^;]+)')\n        )||[])[1] || null;\n    };\n    var cookieSet = function( key, value ) {\n        document.cookie = key + '=' + value +\n            '; expires=Thu, 1 Aug 2030 20:00:00 UTC; path=/';\n    };\n    var cookieTest = (function() {\n        try {\n            cookieSet('pnctest', '1');\n            return cookieGet('pnctest') === '1';\n        } catch (e) {\n            return false;\n        }\n    }());\n    return {\n        'get' : function(key) {\n            try {\n                if (ls) return ls.getItem(key);\n                if (cookieTest) return cookieGet(key);\n                return store[key];\n            } catch(e) {\n                return store[key];\n            }\n        },\n        'set' : function( key, value ) {\n            try {\n                if (ls) return ls.setItem( key, value ) && 0;\n                if (cookieTest) cookieSet( key, value );\n                store[key] = value;\n            } catch(e) {\n                store[key] = value;\n            }\n        }\n    };\n})();\n\nfunction get_hmac_SHA256(data,key) {\n    var hash = CryptoJS['HmacSHA256'](data, key);\n    return hash.toString(CryptoJS['enc']['Base64']);\n}\n\n/**\n * $\n * =\n * var div = $('divid');\n */\nfunction $(id) { return document.getElementById(id) }\n\n/**\n * ERROR\n * =====\n * error('message');\n */\nfunction error(message) { console['error'](message) }\n\n/**\n * SEARCH\n * ======\n * var elements = search('a div span');\n */\nfunction search( elements, start) {\n    var list = [];\n    each( elements.split(/\\s+/), function(el) {\n        each( (start || document).getElementsByTagName(el), function(node) {\n            list.push(node);\n        } );\n    });\n    return list;\n}\n\n/**\n * BIND\n * ====\n * bind( 'keydown', search('a')[0], function(element) {\n *     ...\n * } );\n */\nfunction bind( type, el, fun ) {\n    each( type.split(','), function(etype) {\n        var rapfun = function(e) {\n            if (!e) e = window.event;\n            if (!fun(e)) {\n                e.cancelBubble = true;\n                e.preventDefault  && e.preventDefault();\n                e.stopPropagation && e.stopPropagation();\n            }\n        };\n\n        if ( el.addEventListener ) el.addEventListener( etype, rapfun, false );\n        else if ( el.attachEvent ) el.attachEvent( 'on' + etype, rapfun );\n        else  el[ 'on' + etype ] = rapfun;\n    } );\n}\n\n/**\n * UNBIND\n * ======\n * unbind( 'keydown', search('a')[0] );\n */\nfunction unbind( type, el, fun ) {\n    if ( el.removeEventListener ) el.removeEventListener( type, false );\n    else if ( el.detachEvent ) el.detachEvent( 'on' + type, false );\n    else  el[ 'on' + type ] = null;\n}\n\n/**\n * HEAD\n * ====\n * head().appendChild(elm);\n */\nfunction head() { return search('head')[0] }\n\n/**\n * ATTR\n * ====\n * var attribute = attr( node, 'attribute' );\n */\nfunction attr( node, attribute, value ) {\n    if (value) node.setAttribute( attribute, value );\n    else return node && node.getAttribute && node.getAttribute(attribute);\n}\n\n/**\n * CSS\n * ===\n * var obj = create('div');\n */\nfunction css( element, styles ) {\n    for (var style in styles) if (styles.hasOwnProperty(style))\n        try {element.style[style] = styles[style] + (\n            '|width|height|top|left|'.indexOf(style) > 0 &&\n            typeof styles[style] == 'number'\n            ? 'px' : ''\n        )}catch(e){}\n}\n\n/**\n * CREATE\n * ======\n * var obj = create('div');\n */\nfunction create(element) { return document.createElement(element) }\n\n\n/**\n * jsonp_cb\n * ========\n * var callback = jsonp_cb();\n */\nfunction jsonp_cb() { return XORIGN || FDomainRequest() ? 0 : unique() }\n\n\n\n/**\n * EVENTS\n * ======\n * PUBNUB.events.bind( 'you-stepped-on-flower', function(message) {\n *     // Do Stuff with message\n * } );\n *\n * PUBNUB.events.fire( 'you-stepped-on-flower', \"message-data\" );\n * PUBNUB.events.fire( 'you-stepped-on-flower', {message:\"data\"} );\n * PUBNUB.events.fire( 'you-stepped-on-flower', [1,2,3] );\n *\n */\nvar events = {\n    'list'   : {},\n    'unbind' : function( name ) { events.list[name] = [] },\n    'bind'   : function( name, fun ) {\n        (events.list[name] = events.list[name] || []).push(fun);\n    },\n    'fire' : function( name, data ) {\n        each(\n            events.list[name] || [],\n            function(fun) { fun(data) }\n        );\n    }\n};\n\n/**\n * XDR Cross Domain Request\n * ========================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction xdr( setup ) {\n    if (XORIGN || FDomainRequest()) return ajax(setup);\n\n    var script    = create('script')\n    ,   callback  = setup.callback\n    ,   id        = unique()\n    ,   finished  = 0\n    ,   xhrtme    = setup.timeout || DEF_TIMEOUT\n    ,   timer     = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail      = setup.fail    || function(){}\n    ,   data      = setup.data    || {}\n    ,   success   = setup.success || function(){}\n    ,   append    = function() { head().appendChild(script) }\n    ,   done      = function( failed, response ) {\n            if (finished) return;\n            finished = 1;\n\n            script.onerror = null;\n            clearTimeout(timer);\n\n            (failed || !response) || success(response);\n\n            timeout( function() {\n                failed && fail();\n                var s = $(id)\n                ,   p = s && s.parentNode;\n                p && p.removeChild(s);\n            }, SECOND );\n        };\n\n    window[callback] = function(response) {\n        done( 0, response );\n    };\n\n    if (!setup.blocking) script[ASYNC] = ASYNC;\n\n    script.onerror = function() { done(1) };\n    script.src     = build_url( setup.url, data );\n\n    attr( script, 'id', id );\n\n    append();\n    return done;\n}\n\n/**\n * CORS XHR Request\n * ================\n *  xdr({\n *     url     : ['http://www.blah.com/url'],\n *     success : function(response) {},\n *     fail    : function() {}\n *  });\n */\nfunction ajax( setup ) {\n    var xhr, response\n    ,   finished = function() {\n            if (loaded) return;\n            loaded = 1;\n\n            clearTimeout(timer);\n\n            try       { response = JSON['parse'](xhr.responseText); }\n            catch (r) { return done(1); }\n\n            complete = 1;\n            success(response);\n        }\n    ,   complete = 0\n    ,   loaded   = 0\n    ,   xhrtme   = setup.timeout || DEF_TIMEOUT\n    ,   timer    = timeout( function(){done(1, {\"message\" : \"timeout\"})}, xhrtme )\n    ,   fail     = setup.fail    || function(){}\n    ,   data     = setup.data    || {}\n    ,   success  = setup.success || function(){}\n    ,   async    = !(setup.blocking)\n    ,   done     = function(failed,response) {\n            if (complete) return;\n            complete = 1;\n\n            clearTimeout(timer);\n\n            if (xhr) {\n                xhr.onerror = xhr.onload = null;\n                xhr.abort && xhr.abort();\n                xhr = null;\n            }\n\n            failed && fail(response);\n        };\n\n    // Send\n    try {\n        xhr = FDomainRequest()      ||\n              window.XDomainRequest &&\n              new XDomainRequest()  ||\n              new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort   = function(e){ done(\n            1, e || (xhr && xhr.responseText) || { \"error\" : \"Network Connection Error\"}\n        ) };\n        xhr.onload  = xhr.onloadend = finished;\n        xhr.onreadystatechange = function() {\n            if (xhr && xhr.readyState == 4) {\n                switch(xhr.status) {\n                    case 200:\n                        break;\n                    default:\n                        try {\n                            response = JSON['parse'](xhr.responseText);\n                            done(1,response);\n                        }\n                        catch (r) { return done(1, {status : xhr.status, payload : null, message : xhr.responseText}); }\n                        return;\n                }\n            }\n        }\n\n        var url = build_url(setup.url,data);\n\n        xhr.open( 'GET', url, async );\n        if (async) xhr.timeout = xhrtme;\n        xhr.send();\n    }\n    catch(eee) {\n        done(0);\n        XORIGN = 0;\n        return xdr(setup);\n    }\n\n    // Return 'done'\n    return done;\n}\n\n// Test Connection State\nfunction _is_online() {\n    if (!('onLine' in navigator)) return 1;\n    try       { return navigator['onLine'] }\n    catch (e) { return true }\n}\n\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n/* =-=========================     PUBNUB     ===========================-= */\n/* =-====================================================================-= */\n/* =-====================================================================-= */\n\nvar PDIV          = $('pubnub') || 0\n,   CREATE_PUBNUB = function(setup) {\n\n    // Force JSONP if requested from user.\n    if (setup['jsonp'])  XORIGN = 0;\n    else                 XORIGN = UA.indexOf('MSIE 6') == -1;\n\n    var SUBSCRIBE_KEY = setup['subscribe_key'] || ''\n    ,   KEEPALIVE     = (+setup['keepalive']   || DEF_KEEPALIVE)   * SECOND\n    ,   UUID          = setup['uuid'] || db['get'](SUBSCRIBE_KEY+'uuid')||'';\n\n    var leave_on_unload = setup['leave_on_unload'] || 0;\n\n    setup['xdr']        = xdr;\n    setup['db']         = db;\n    setup['error']      = setup['error'] || error;\n    setup['_is_online'] = _is_online;\n    setup['jsonp_cb']   = jsonp_cb;\n    setup['hmac_SHA256']= get_hmac_SHA256;\n    setup['crypto_obj'] = crypto_obj();\n    setup['params']     = { 'pnsdk' : PNSDK }\n\n    var SELF = function(setup) {\n        return CREATE_PUBNUB(setup);\n    };\n\n    var PN = PN_API(setup);\n\n    for (var prop in PN) {\n        if (PN.hasOwnProperty(prop)) {\n            SELF[prop] = PN[prop];\n        }\n    }\n    SELF['css']         = css;\n    SELF['$']           = $;\n    SELF['create']      = create;\n    SELF['bind']        = bind;\n    SELF['head']        = head;\n    SELF['search']      = search;\n    SELF['attr']        = attr;\n    SELF['events']      = events;\n    SELF['init']        = SELF;\n    SELF['secure']      = SELF;\n    SELF['crypto_obj']  = crypto_obj(); // export to instance\n\n\n    // Add Leave Functions\n    bind( 'beforeunload', window, function() {\n        if (leave_on_unload) SELF['each-channel'](function(ch){ SELF['LEAVE']( ch.name, 0 ) });\n        return true;\n    } );\n\n    // Return without Testing\n    if (setup['notest']) return SELF;\n\n    bind( 'offline', window,   SELF['offline'] );\n    bind( 'offline', document, SELF['offline'] );\n\n    // Return PUBNUB Socket Object\n    return SELF;\n};\nCREATE_PUBNUB['init']   = CREATE_PUBNUB;\nCREATE_PUBNUB['secure'] = CREATE_PUBNUB;\nCREATE_PUBNUB['crypto_obj'] = crypto_obj(); // export to constructor\n\n// Bind for PUBNUB Readiness to Subscribe\nif (document.readyState === 'complete') {\n    timeout( ready, 0 );\n}\nelse {\n    bind( 'load', window, function(){ timeout( ready, 0 ) } );\n}\n\nvar pdiv = PDIV || {};\n\n// CREATE A PUBNUB GLOBAL OBJECT\nPUBNUB = CREATE_PUBNUB({\n    'notest'        : 1,\n    'publish_key'   : attr( pdiv, 'pub-key' ),\n    'subscribe_key' : attr( pdiv, 'sub-key' ),\n    'ssl'           : !document.location.href.indexOf('https') ||\n                      attr( pdiv, 'ssl' ) == 'on',\n    'origin'        : attr( pdiv, 'origin' ),\n    'uuid'          : attr( pdiv, 'uuid' )\n});\n\n// jQuery Interface\nwindow['jQuery'] && (window['jQuery']['PUBNUB'] = CREATE_PUBNUB);\n\n// For Modern JS + Testling.js - http://testling.com/\ntypeof(module) !== 'undefined' && (module['exports'] = PUBNUB) && ready();\n\nvar pubnubs = $('pubnubs') || 0;\n\n// LEAVE NOW IF NO PDIV.\nif (!PDIV) return;\n\n// PUBNUB Flash Socket\ncss( PDIV, { 'position' : 'absolute', 'top' : -SECOND } );\n\nif ('opera' in window || attr( PDIV, 'flash' )) PDIV['innerHTML'] =\n    '<object id=pubnubs data='  + SWF +\n    '><param name=movie value=' + SWF +\n    '><param name=allowscriptaccess value=always></object>';\n\n// Create Interface for Opera Flash\nPUBNUB['rdx'] = function( id, data ) {\n    if (!data) return FDomainRequest[id]['onerror']();\n    FDomainRequest[id]['responseText'] = unescape(data);\n    FDomainRequest[id]['onload']();\n};\n\nfunction FDomainRequest() {\n    if (!pubnubs || !pubnubs['get']) return 0;\n\n    var fdomainrequest = {\n        'id'    : FDomainRequest['id']++,\n        'send'  : function() {},\n        'abort' : function() { fdomainrequest['id'] = {} },\n        'open'  : function( method, url ) {\n            FDomainRequest[fdomainrequest['id']] = fdomainrequest;\n            pubnubs['get']( fdomainrequest['id'], url );\n        }\n    };\n\n    return fdomainrequest;\n}\nFDomainRequest['id'] = SECOND;\n\n})();\n(function(){\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET INTERFACE\n// ---------------------------------------------------------------------------\nvar WS = PUBNUB['ws'] = function( url, protocols ) {\n    if (!(this instanceof WS)) return new WS( url, protocols );\n\n    var self     = this\n    ,   url      = self.url      = url || ''\n    ,   protocol = self.protocol = protocols || 'Sec-WebSocket-Protocol'\n    ,   bits     = url.split('/')\n    ,   setup    = {\n         'ssl'           : bits[0] === 'wss:'\n        ,'origin'        : bits[2]\n        ,'publish_key'   : bits[3]\n        ,'subscribe_key' : bits[4]\n        ,'channel'       : bits[5]\n    };\n\n    // READY STATES\n    self['CONNECTING'] = 0; // The connection is not yet open.\n    self['OPEN']       = 1; // The connection is open and ready to communicate.\n    self['CLOSING']    = 2; // The connection is in the process of closing.\n    self['CLOSED']     = 3; // The connection is closed or couldn't be opened.\n\n    // CLOSE STATES\n    self['CLOSE_NORMAL']         = 1000; // Normal Intended Close; completed.\n    self['CLOSE_GOING_AWAY']     = 1001; // Closed Unexpecttedly.\n    self['CLOSE_PROTOCOL_ERROR'] = 1002; // Server: Not Supported.\n    self['CLOSE_UNSUPPORTED']    = 1003; // Server: Unsupported Protocol.\n    self['CLOSE_TOO_LARGE']      = 1004; // Server: Too Much Data.\n    self['CLOSE_NO_STATUS']      = 1005; // Server: No reason.\n    self['CLOSE_ABNORMAL']       = 1006; // Abnormal Disconnect.\n\n    // Events Default\n    self['onclose']   = self['onerror'] =\n    self['onmessage'] = self['onopen']  =\n    self['onsend']    =  function(){};\n\n    // Attributes\n    self['binaryType']     = '';\n    self['extensions']     = '';\n    self['bufferedAmount'] = 0;\n    self['trasnmitting']   = false;\n    self['buffer']         = [];\n    self['readyState']     = self['CONNECTING'];\n\n    // Close if no setup.\n    if (!url) {\n        self['readyState'] = self['CLOSED'];\n        self['onclose']({\n            'code'     : self['CLOSE_ABNORMAL'],\n            'reason'   : 'Missing URL',\n            'wasClean' : true\n        });\n        return self;\n    }\n\n    // PubNub WebSocket Emulation\n    self.pubnub       = PUBNUB['init'](setup);\n    self.pubnub.setup = setup;\n    self.setup        = setup;\n\n    self.pubnub['subscribe']({\n        'restore'    : false,\n        'channel'    : setup['channel'],\n        'disconnect' : self['onerror'],\n        'reconnect'  : self['onopen'],\n        'error'      : function() {\n            self['onclose']({\n                'code'     : self['CLOSE_ABNORMAL'],\n                'reason'   : 'Missing URL',\n                'wasClean' : false\n            });\n        },\n        'callback'   : function(message) {\n            self['onmessage']({ 'data' : message });\n        },\n        'connect'    : function() {\n            self['readyState'] = self['OPEN'];\n            self['onopen']();\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET SEND\n// ---------------------------------------------------------------------------\nWS.prototype.send = function(data) {\n    var self = this;\n    self.pubnub['publish']({\n        'channel'  : self.pubnub.setup['channel'],\n        'message'  : data,\n        'callback' : function(response) {\n            self['onsend']({ 'data' : response });\n        }\n    });\n};\n\n// ---------------------------------------------------------------------------\n// WEBSOCKET CLOSE\n// ---------------------------------------------------------------------------\nWS.prototype.close = function() {\n    var self = this;\n    self.pubnub['unsubscribe']({ 'channel' : self.pubnub.setup['channel'] });\n    self['readyState'] = self['CLOSED'];\n    self['onclose']({});\n};\n\n})();\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\nvar CryptoJS=CryptoJS||function(h,s){var f={},g=f.lib={},q=function(){},m=g.Base={extend:function(a){q.prototype=this;var c=new q;a&&c.mixIn(a);c.hasOwnProperty(\"init\")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty(\"toString\")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},\nr=g.WordArray=m.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||k).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<\n32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=m.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new r.init(c,a)}}),l=f.enc={},k=l.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,\n2),16)<<24-4*(b%8);return new r.init(d,c/2)}},n=l.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join(\"\")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new r.init(d,c)}},j=l.Utf8={stringify:function(a){try{return decodeURIComponent(escape(n.stringify(a)))}catch(c){throw Error(\"Malformed UTF-8 data\");}},parse:function(a){return n.parse(unescape(encodeURIComponent(a)))}},\nu=g.BufferedBlockAlgorithm=m.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){\"string\"==typeof a&&(a=j.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var g=0;g<a;g+=e)this._doProcessBlock(d,g);g=d.splice(0,a);c.sigBytes-=b}return new r.init(g,b)},clone:function(){var a=m.clone.call(this);\na._data=this._data.clone();return a},_minBufferSize:0});g.Hasher=u.extend({cfg:m.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){u.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new t.HMAC.init(a,\nd)).finalize(c)}}});var t=f.algo={};return f}(Math);\n\n// SHA256\n(function(h){for(var s=CryptoJS,f=s.lib,g=f.WordArray,q=f.Hasher,f=s.algo,m=[],r=[],l=function(a){return 4294967296*(a-(a|0))|0},k=2,n=0;64>n;){var j;a:{j=k;for(var u=h.sqrt(j),t=2;t<=u;t++)if(!(j%t)){j=!1;break a}j=!0}j&&(8>n&&(m[n]=l(h.pow(k,0.5))),r[n]=l(h.pow(k,1/3)),n++);k++}var a=[],f=f.SHA256=q.extend({_doReset:function(){this._hash=new g.init(m.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],g=b[2],j=b[3],h=b[4],m=b[5],n=b[6],q=b[7],p=0;64>p;p++){if(16>p)a[p]=\nc[d+p]|0;else{var k=a[p-15],l=a[p-2];a[p]=((k<<25|k>>>7)^(k<<14|k>>>18)^k>>>3)+a[p-7]+((l<<15|l>>>17)^(l<<13|l>>>19)^l>>>10)+a[p-16]}k=q+((h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25))+(h&m^~h&n)+r[p]+a[p];l=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&g^f&g);q=n;n=m;m=h;h=j+k|0;j=g;g=f;f=e;e=k+l|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+g|0;b[3]=b[3]+j|0;b[4]=b[4]+h|0;b[5]=b[5]+m|0;b[6]=b[6]+n|0;b[7]=b[7]+q|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;\nd[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=q.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=q._createHelper(f);s.HmacSHA256=q._createHmacHelper(f)})(Math);\n\n// HMAC SHA256\n(function(){var h=CryptoJS,s=h.enc.Utf8;h.algo.HMAC=h.lib.Base.extend({init:function(f,g){f=this._hasher=new f.init;\"string\"==typeof g&&(g=s.parse(g));var h=f.blockSize,m=4*h;g.sigBytes>m&&(g=f.finalize(g));g.clamp();for(var r=this._oKey=g.clone(),l=this._iKey=g.clone(),k=r.words,n=l.words,j=0;j<h;j++)k[j]^=1549556828,n[j]^=909522486;r.sigBytes=l.sigBytes=m;this.reset()},reset:function(){var f=this._hasher;f.reset();f.update(this._iKey)},update:function(f){this._hasher.update(f);return this},finalize:function(f){var g=\nthis._hasher;f=g.finalize(f);g.reset();return g.finalize(this._oKey.clone().concat(f))}})})();\n\n// Base64\n(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join(\"\")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<\nl;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}})();\n\n// BlockCipher\n(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},\n_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),\nf=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,\nm,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,\nE,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/\n4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);\n(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,\nl)}})();\n\n// Cipher\nCryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},\nfinalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return(\"string\"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return(\"string\"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=\nc[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,\ne,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,\nthis,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,\n1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},\ndecrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return\"string\"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,\nb.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();\n\n// AES\n(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,\n16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>\n8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=\nd[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();\n\n// Mode ECB\nCryptoJS.mode.ECB = (function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.encryptBlock(words, offset);\n        }\n    });\n\n    ECB.Decryptor = ECB.extend({\n        processBlock: function (words, offset) {\n            this._cipher.decryptBlock(words, offset);\n        }\n    });\n\n    return ECB;\n}());// Moved to hmac-sha-256.js\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./bower_components/pubnub/web/pubnub.js\n ** module id = 80\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 81\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_82__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 82\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_83__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_83__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 83\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}