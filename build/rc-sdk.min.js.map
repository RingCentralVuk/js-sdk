{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap 9c0fab63ef3547b38622","src/lib/RCSDK.ts","src/lib/core/pubnub/PubnubMock.ts","src/lib/core/Observable.ts","src/lib/core/Utils.ts","src/lib/core/Log.ts","src/lib/core/xhr/XhrMock.ts","src/lib/core/xhr/XhrResponse.ts","src/lib/core/AjaxObserver.ts","src/lib/core/Cache.ts","src/lib/core/Context.ts","src/lib/core/Helper.ts","src/lib/core/List.ts","src/lib/core/PageVisibility.ts","src/lib/core/Platform.ts","src/lib/core/http/Request.ts","src/lib/core/http/Headers.ts","src/lib/core/http/Response.ts","src/lib/core/Subscription.ts","src/lib/core/Validator.ts","src/lib/helpers/Account.ts","src/lib/helpers/BlockedNumber.ts","src/lib/helpers/Call.ts","src/lib/helpers/Presence.ts","src/lib/helpers/Extension.ts","src/lib/helpers/Contact.ts","src/lib/helpers/ContactGroup.ts","src/lib/helpers/Conferencing.ts","src/lib/helpers/Country.ts","src/lib/helpers/Device.ts","src/lib/helpers/DeviceModel.ts","src/lib/helpers/ForwardingNumber.ts","src/lib/helpers/Language.ts","src/lib/helpers/Location.ts","src/lib/helpers/State.ts","src/lib/helpers/Message.ts","src/lib/helpers/PhoneNumber.ts","src/lib/helpers/Ringout.ts","src/lib/helpers/Service.ts","src/lib/helpers/ShippingMethod.ts","src/lib/helpers/Timezone.ts","src/lib/client/Client.ts","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_42__","__WEBPACK_EXTERNAL_MODULE_43__","__WEBPACK_EXTERNAL_MODULE_44__","__WEBPACK_EXTERNAL_MODULE_45__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","client","promise","pubnub","RCSDK","options","_context","$get","injections","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","getClient","version","url","sandbox","production","localStorage","Promise","PUBNUB","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","e4","Error","PubnubFactory","__extends","d","b","__","constructor","hasOwnProperty","PubnubMock","_super","crypto_obj","getPubnubReal","ready","subscribe","on","channel","message","unsubscribe","off","receiveMessage","msg","emit","Observable","init","Object","defineProperty","value","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","events","callback","_this","self","forEach","push","isOneTimeEventFired","debug","apply","getOneTimeEventArgumens","args","_i","arguments","length","result","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","cb","i","offAll","destroy","emitAndCallback","argumentsToArray","concat","createSingleton","Utils","hasOwn","toString","rdigit","class2type","split","name","toLowerCase","extend","targetObject","sourceObject","src","copy","copyIsArray","clone","target","deep","isFunction","isPlainObject","isArray","undefined","object","res","queryStringify","parameters","array","v","vv","encodeURIComponent","join","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","indexOf","trim","pair","key","isEmail","multiple","test","isPhoneNumber","Array","slice","isDate","obj","type","isWindow","isNaN","String","nodeType","getProperty","property","reduce","part","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","parseString","s","parseNumber","n","parseFloat","Log","console","warn","info","error","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","unshift","Date","toLocaleString","XhrMock","responses","async","method","requestHeaders","withCredentials","data","readyState","responseHeaders","status","getResponseHeader","header","setRequestHeader","getAllResponseHeaders","open","send","contentType","getRequestHeader","JSON","parse","currentResponse","find","onerror","setStatus","setResponseHeader","response","getPromise","onLoad","stringify","responseText","onload","then","bind","abort","XhrResponse","add","clear","ajax","path","AjaxObserver","beforeRequest","requestSuccess","requestError","Cache","storage","getLocalStorage","prefix","prefixKey","setItem","removeItem","getItem","item","clean","Context","singletons","stubPubnub","stubAjax","usePubnubStub","flag","useAjaxStub","getPubnub","getXHR","Helper","defaultProperty","createUrl","getId","isNew","getUri","resetAsNew","uri","parseMultipartResponse","isMultipart","filter","map","loadRequest","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","getIdFn","gather","merge","supplement","mergeItems","supplementIndex","updatedIDs","newItem","List","numberComparator","stringComparator","propertyExtractor","a","localeCompare","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","opt","filterBy","filterFn","pass","PageVisibility","change","hidden","onchange","evt","window","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","getCredentials","credentials","atob","secret","remember","getAuthURL","apiUrl","response_type","redirect_uri","redirectUri","client_id","state","brand_id","brandId","display","prompt","addServer","parseAuthRedirectUrl","qs","reverse","error_description","authorize","access_token_ttl","refresh_token_ttl","username","grant_type","password","extension","code","reject","authCall","setCache","isPaused","now","parseInt","pause","resume","refresh","resolve","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","setOptions","setHeader","isUnauthorized","put","builtUrl","hasHttp","replace","addMethod","addToken","Request","r","xhr","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","toUpperCase","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","getHeader","isContentType","getContentType","setContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","shift","json","parts","headerSeparator","checkStatus","getError","boundary","match","boundarySeparator","pop","statusInfo","stack","description","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","register","isSubscribed","renew","addEvents","setEvents","getFullEventFilters","updateSubscription","subscribeAtPubnub","remove","timeToExpiration","renewHandicapMs","decrypt","encryptionKey","encryptKey","keyEncoding","keyLength","mode","notify","ssl","subscribe_key","env","connect","Validator","validate","validators","errors","isValid","field","email","phone","required","max","min","Account","BlockedNumber","extensionId","phoneNumber","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","toLocaleLowerCase","extensionNumber","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","string","inAddresses","transformFn","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","ContactGroup","groupName","Conferencing","Country","Device","deviceModel","order","emergencyServiceAddress","street","city","country","zip","customerName","model","DeviceModel","device","sku","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","State","countryId","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","tollFreeAreaCodes","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","Timezone","Client","base","getResourceUrl","currentId","currentIdArray","extendOptionsWithQuery"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__, __WEBPACK_EXTERNAL_MODULE_45__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__, __WEBPACK_EXTERNAL_MODULE_45__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(2);\nvar xhrMock = __webpack_require__(6);\nvar xhrResponse = __webpack_require__(7);\nvar ajaxObserver = __webpack_require__(8);\nvar cache = __webpack_require__(9);\nvar context = __webpack_require__(10);\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar log = __webpack_require__(5);\nvar observable = __webpack_require__(3);\nvar pageVisibility = __webpack_require__(13);\nvar platform = __webpack_require__(14);\nvar subscription = __webpack_require__(18);\nvar utils = __webpack_require__(4);\nvar validator = __webpack_require__(19);\nvar accountHelper = __webpack_require__(20);\nvar blockedNumberHelper = __webpack_require__(21);\nvar callHelper = __webpack_require__(22);\nvar contactHelper = __webpack_require__(25);\nvar contactGroupHelper = __webpack_require__(26);\nvar conferencingHelper = __webpack_require__(27);\nvar countryHelper = __webpack_require__(28);\nvar deviceHelper = __webpack_require__(29);\nvar deviceModelHelper = __webpack_require__(30);\nvar extensionHelper = __webpack_require__(24);\nvar forwardingNumberHelper = __webpack_require__(31);\nvar languageHelper = __webpack_require__(32);\nvar locationHelper = __webpack_require__(33);\nvar messageHelper = __webpack_require__(35);\nvar phoneNumberHelper = __webpack_require__(36);\nvar presenceHelper = __webpack_require__(23);\nvar ringoutHelper = __webpack_require__(37);\nvar serviceHelper = __webpack_require__(38);\nvar shippingMethodHelper = __webpack_require__(39);\nvar stateHelper = __webpack_require__(34);\nvar timezoneHelper = __webpack_require__(40);\nvar client = __webpack_require__(41);\nvar promise = __webpack_require__(42);\nvar pubnub = __webpack_require__(43);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    // Client\n    RCSDK.prototype.getClient = function () { return client.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : __webpack_require__(44)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (__webpack_require__(45))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(3);\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar log = __webpack_require__(5);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(4);\nvar log = __webpack_require__(5);\nvar xhrResponse = __webpack_require__(7); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(3);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(3);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(3);\nvar cache = __webpack_require__(9);\nvar request = __webpack_require__(15);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(16);\nvar ajaxObserver = __webpack_require__(8);\nvar r = __webpack_require__(17);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = __webpack_require__(16);\nvar log = __webpack_require__(5);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = __webpack_require__(3);\nvar platform = __webpack_require__(14);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar presence = __webpack_require__(23);\nvar contact = __webpack_require__(25);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar subscription = __webpack_require__(18);\nvar extension = __webpack_require__(24);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar list = __webpack_require__(12);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar extension = __webpack_require__(24);\nvar deviceModel = __webpack_require__(30);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar state = __webpack_require__(34);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar country = __webpack_require__(28);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar validator = __webpack_require__(19);\nvar subscription = __webpack_require__(18);\nvar platform = __webpack_require__(14);\nvar contact = __webpack_require__(25);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar extension = __webpack_require__(24);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(11);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar platform = __webpack_require__(14);\n//import account = require('./Account');\n//import dictionary = require('./Dictionary');\nvar Client = (function () {\n    function Client(base, id, context) {\n        this.base = '';\n        this.prefix = '';\n        this.id = '';\n        this.context = context;\n        this.platform = platform.$get(context);\n        this.base = base;\n    }\n    Client.prototype.getResourceUrl = function (id) {\n        var currentId = id || this.id, currentIdArray = this.utils.isArray(currentId) ? currentId : [currentId];\n        return this.base +\n            '/' + this.prefix +\n            ((currentIdArray.length > 0 && currentIdArray[0]) ? '/' + currentIdArray.join(',') : '');\n    };\n    Client.prototype.extendOptionsWithQuery = function (options, query) {\n        if (!options.query)\n            options.query = {};\n        if (query)\n            options = this.utils.extend(true, {}, options, { query: query });\n        return options;\n    };\n    Client.prototype.get = function (query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        return this.platform.get(this.getResourceUrl(), options);\n    };\n    Client.prototype.post = function (object, query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        options.body = object;\n        return this.platform.post(this.getResourceUrl(object.id), options);\n    };\n    Client.prototype.put = function (object, query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        options.body = object;\n        return this.platform.put(this.getResourceUrl(object.id), options);\n    };\n    Client.prototype['delete'] = function (object, query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        return this.platform.delete(this.getResourceUrl(object && object.id), options);\n    };\n    return Client;\n})();\nexports.Client = Client;\nfunction $get(context) {\n    return new Client('', '', context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_45__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=rc-sdk.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9c0fab63ef3547b38622\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = require('./core/pubnub/PubnubMock');\nvar xhrMock = require('./core/xhr/XhrMock');\nvar xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar client = require('./client/Client');\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    // Client\n    RCSDK.prototype.getClient = function () { return client.$get(this.getContext()); };\n    RCSDK.version = '1.3.0';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : promise.Promise,\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (require('xhr' + '2'))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/RCSDK.ts\n ** module id = 1\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('../Observable');\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/pubnub/PubnubMock.ts\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Observable.ts\n ** module id = 3\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Utils.ts\n ** module id = 4\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Log.ts\n ** module id = 5\n ** module chunks = 0 2\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse'); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrMock.ts\n ** module id = 6\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrResponse.ts\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/AjaxObserver.ts\n ** module id = 8\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Cache.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Context.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Helper.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/List.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/PageVisibility.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Platform.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Request.ts\n ** module id = 15\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Headers.ts\n ** module id = 16\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Response.ts\n ** module id = 17\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar observable = require('./Observable');\nvar platform = require('./Platform');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        var timeToExpiration = (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.timeout = setTimeout(function () {\n            _this.renew({});\n        }, timeToExpiration);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        clearTimeout(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Subscription.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Validator.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Account.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/BlockedNumber.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Call.ts\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Presence.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Extension.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Contact.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ContactGroup.ts\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Conferencing.ts\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Country.ts\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Device.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/DeviceModel.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ForwardingNumber.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Language.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Location.ts\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/State.ts\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Message.ts\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/PhoneNumber.ts\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Ringout.ts\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Service.ts\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ShippingMethod.ts\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Timezone.ts\n ** module id = 40\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar platform = require('../core/Platform');\n//import account = require('./Account');\n//import dictionary = require('./Dictionary');\nvar Client = (function () {\n    function Client(base, id, context) {\n        this.base = '';\n        this.prefix = '';\n        this.id = '';\n        this.context = context;\n        this.platform = platform.$get(context);\n        this.base = base;\n    }\n    Client.prototype.getResourceUrl = function (id) {\n        var currentId = id || this.id, currentIdArray = this.utils.isArray(currentId) ? currentId : [currentId];\n        return this.base +\n            '/' + this.prefix +\n            ((currentIdArray.length > 0 && currentIdArray[0]) ? '/' + currentIdArray.join(',') : '');\n    };\n    Client.prototype.extendOptionsWithQuery = function (options, query) {\n        if (!options.query)\n            options.query = {};\n        if (query)\n            options = this.utils.extend(true, {}, options, { query: query });\n        return options;\n    };\n    Client.prototype.get = function (query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        return this.platform.get(this.getResourceUrl(), options);\n    };\n    Client.prototype.post = function (object, query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        options.body = object;\n        return this.platform.post(this.getResourceUrl(object.id), options);\n    };\n    Client.prototype.put = function (object, query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        options.body = object;\n        return this.platform.put(this.getResourceUrl(object.id), options);\n    };\n    Client.prototype['delete'] = function (object, query, options) {\n        options = this.extendOptionsWithQuery(options, query);\n        return this.platform.delete(this.getResourceUrl(object && object.id), options);\n    };\n    return Client;\n})();\nexports.Client = Client;\nfunction $get(context) {\n    return new Client('', '', context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/client/Client.ts\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 42\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 43\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 44\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_45__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 45\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}